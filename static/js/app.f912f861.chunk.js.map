{"version":3,"sources":["assets/logos/app-logo-transparent.png","assets/logos/owl-white-text.png","assets/logos/owl-black-text.png","assets/sponsorPage/coupon.jpg","node_modules/moment/locale sync /^/.//.*$","src/app/appDataSlice.ts","src/features/api/apiSlice.ts","src/features/api/usersApi.ts","src/features/api/classPagesApi.ts","src/features/classPages/classPagesSlice.ts","src/features/discover/discoverSlice.ts","src/features/calendar/calendarSlice.ts","src/app/storage.ts","src/app/store.ts","src/app/hooks.ts","src/features/authentication/ForgotPassword/EnterCodePage.tsx","src/features/authentication/ForgotPassword/EnterEmailPage.tsx","src/features/authentication/ForgotPassword/index.tsx","src/features/authentication/Login.tsx","src/components/BackButton.tsx","src/features/authentication/Signup/SignupForm.tsx","src/features/authentication/Signup/VerifyEmail.tsx","src/features/authentication/Signup/index.tsx","src/features/authentication/index.tsx","src/components/Header.tsx","src/constants/discover.ts","src/features/api/discoverApi.ts","src/features/discover/BottomBar.tsx","src/components/withPreventDoubleClick.tsx","src/features/discover/Cards/TextCard.tsx","src/components/DoubleTap.tsx","src/functions.ts","src/features/discover/Cards/ImageCard.tsx","src/features/discover/PostsList.tsx","src/components/DisabledOptionModal.tsx","src/features/discover/SinglePost/Comment.tsx","src/features/discover/SinglePost/SinglePostBody.tsx","src/components/FullPageSpinner.tsx","src/features/discover/SinglePost/SinglePostPage.tsx","src/features/discover/CreatePost/CreateImagePost.tsx","src/features/discover/CreatePost/CreatePost.tsx","src/components/SearchBar.tsx","src/features/discover/SearchPage.tsx","src/features/discover/index.tsx","src/features/calendar/CreateCustomEvent.tsx","src/features/calendar/CalendarFunctions.ts","src/features/calendar/customEvent.tsx","src/features/calendar/ScheduledItem.tsx","src/features/classPages/SingleClassPage/InfoPage.tsx","src/constants/classPages.ts","src/features/classPages/SingleClassPage/PostReview.tsx","src/features/classPages/SingleClassPage/index.tsx","src/features/calendar/CalendarPage.tsx","src/features/notifications/constants.tsx","src/features/calendar/exportModal.tsx","src/components/ModalContainer.tsx","src/features/calendar/index.tsx","src/components/Message.tsx","src/features/classPages/ClassListItemItem.tsx","src/features/classPages/ClassListItem.tsx","src/features/classPages/AddedClasses.tsx","src/features/classPages/FilterClasses.tsx","src/features/classPages/ClassesList.tsx","src/components/Menu.tsx","src/features/api/sponsorsApi.ts","src/features/sponsors/SponsorsList.tsx","src/components/WrapItems.tsx","src/features/settings/EditUser.tsx","src/features/settings/SettingsPage.tsx","src/features/settings/index.tsx","src/features/notifications/Notifications.tsx","src/features/classPages/index.tsx","src/theme/custom-theme.ts","src/theme/font-awesome-icons.tsx","src/theme/feather-icons.tsx","src/constants/admin.ts","src/features/adminPanel/adminPanel.tsx","src/features/adminPanel/index.tsx","App.tsx","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","initialState","userKey","isGuest","isMobile","darkMode","useDeviceColorScheme","appDataSlice","createSlice","name","reducers","reset","userKeyUpdated","state","action","payload","setIsGuest","deviceDarkModeSet","useDeviceColorSchemeSet","deleteAllAppData","mobileSiteSet","extraReducers","selectDarkMode","appData","secure","selectUserKey","selectIsGuest","actions","apiSlice","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getCurrentVersion","query","useLazyGetCurrentVersionQuery","usersApiSlice","injectEndpoints","overrideExisting","getUserInfo","providesTags","url","headers","transformResponse","classes","rest","addedClasses","length","courseCode","courseTerm","school","split","masterCourseCode","slice","join","push","console","warn","login","mutation","userName","password","params","trackLogin","method","responseHandler","response","text","deleteAccount","editUser","invalidatesTags","body","fields","getCollegeList","signupUser","verifySignup","resetPassword","email","useTrackLoginMutation","useGetUserInfoQuery","useLazyGetUserInfoQuery","useLoginMutation","useDeleteAccountMutation","useEditUserMutation","useGetCollegeListQuery","useSignupUserMutation","useVerifySignupMutation","useResetPasswordMutation","classPagesApi","getAllClasses","pageNumber","collegeName","getRatingFromReviews","reviews","totalAverage","counter","review","rating","toFixed","getDifficultyFromReviews","difficulty","fromEntries","entries","key","value","sort","getCurrentSection","currentTerm","addClass","classesToAdd","onQueryStarted","dispatch","queryFulfilled","patchResult","util","updateQueryData","draft","undo","removeClass","classesToRemove","filter","classCode","isAllowedToReview","sendReview","useGetCurrentSectionQuery","useGetAllClassesQuery","useAddClassMutation","useRemoveClassMutation","useIsAllowedToReviewQuery","useSendReviewMutation","useLazyGetAllClassesQuery","useLazyGetCurrentSectionQuery","filteredClasses","renderedClasses","currentSection","selectedClass","searchTerm","page","filters","isHMC","colleges","HM","CM","PO","PZ","SC","classPagesSlice","currentSectionUpdated","endOfListReached","resetClasses","caseReducers","searchResultsFiltered","classSelected","selectedClassCleared","filtersSaved","filtersReset","newResultsArray","collegeAbr","substring","college","isCollegeFiltered","searchTermUpdated","searchTerms","searchCourseCode","findSearchTermShortcuts","courseName","times","filterBySearchTerm","newResultsObject","addMatcher","matchFulfilled","searchPhrase","replace","match","p1","p2","padStart","coursePhrase","professorName","trim","includes","toUpperCase","selectClassesList","classPages","submittedSearchTerm","tag","recentSearches","discoverSlice","searchTermSubmitted","unshift","searchTermChanged","recentSearchTermSelected","tagSelected","recentSearchTermRemoved","term","selectSearchTerm","discover","selectSubmittedSearchTerm","selectTag","selectRecentSearches","isThreeDay","calendarSlice","isThreeDaySet","secureStorage","createSecureStore","securePersistConfig","storage","Platform","OS","AsyncStorage","cpPersistConfig","ExpoFileSystemStorage","whitelist","discoverPersistConfig","rootReducer","combineReducers","persistReducer","classPagesReducer","appDataReducer","discoverReducer","calendar","calendarReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","concat","useAppDispatch","useDispatch","useAppSelector","useSelector","EnterCodePage","navigation","style","flex","alignItems","justifyContent","margin","category","onPress","index","routes","EnterEmailPage","useState","setEmail","inputRef","useRef","isLoading","isError","netInfo","useNetInfo","useEffect","current","focus","onSubmit","isConnected","unwrap","navigate","alert","paddingTop","autoCapitalize","placeholder","ref","onChangeText","onSubmitEditing","Keyboard","dismiss","color","disabled","accessoryRight","status","Stack","createNativeStackNavigator","ForgotPassword","Navigator","screenOptions","headerShown","Screen","component","DarkModeLogo","require","LightModeLogo","Login","setUserName","setPassword","loginError","setLoginError","passwordRef","React","handleLogin","NetInfo","fetch","then","error","guestLogin","TouchableWithoutFeedback","KeyboardAvoidingView","styles","container","behavior","Image","source","logo","inputView","autoComplete","TextInput","placeholderTextColor","keyboardType","blurOnSubmit","secureTextEntry","TouchableOpacity","forgot_button","position","backgroundColor","loginBtn","width","borderRadius","height","marginTop","maxWidth","level","signupBtn","StyleSheet","create","title","fontSize","fontWeight","textAlign","image","marginBottom","flexDirection","marginLeft","marginRight","borderColor","borderWidth","guestButton","alignSelf","BackButton","props","HeaderBackButton","goBack","label","labelVisible","Signup","realFirstName","setRealFirstName","realLastName","setRealLastName","major","setMajor","IndexPath","selectedIndex","setSelectedIndex","simplifiedSignup","setSimplifiedSignUp","humanReadableCollegeName","userCollege","setUserCollege","collegeList","data","signupLoading","firstNameInputRef","lastNameInputRef","passwordInputRef","majorInputRef","handleSubmitButton","validateInput","SectionStyle","labelSection","inputStyle","underlineColorAndroid","defaultValue","returnKeyType","containerDrop","onFocus","onSelect","newObject","row","ScrollView","zIndex","top","left","paddingVertical","paddingHorizontal","checked","onChange","nextChecked","buttonStyle","buttonTextStyle","paddingLeft","paddingRight","errorTextStyle","successTextStyle","padding","input","button","buttonText","minHeight","minWidth","VerifyEmail","verificationCode","setVerificationCode","verifyCode","getUserInfoLoading","handleVerifyCodeButton","description","theme","useTheme","headerStyle","headerLeft","SignupForm","options","Auth","Header","accessoryLeft","center","Constants","statusBarHeight","tagIndices","adminTagIndices","postOptions","EMOJI_LIST","postsAdapter","createEntityAdapter","selectId","post","_id","tranformComments","comments","comment","numLikes","likes","hasLiked","discoverApiSlice","getDiscoverPosts","keepUnusedDataFor","pageLength","_","addMany","getInitialState","hasMorePages","ids","postsSelectors","selectAll","createDiscoverPost","type","content","tags","emoji","imagePostBody","pinned","newPost","addOne","deleteDiscoverPost","searchPatchResult","removeOne","getPostById","postId","updatedPost","updateFunction","updateOne","changes","likePost","postAuthor","selectById","addComment","initiate","likeComment","commentId","deleteComment","getSelectors","useLazyGetDiscoverPostsQuery","useCreateDiscoverPostMutation","useDeleteDiscoverPostMutation","useLikePostMutation","useAddCommentMutation","useLazyGetPostByIdQuery","useLikeCommentMutation","useDeleteCommentMutation","DebounceTouchable","WrappedComponent","time","PreventDoubleClick","debouncedOnPress","debounce","leading","trailing","this","PureComponent","displayName","withPreventDoubleClick","BottomBar","commentIconShown","undefined","searchedTag","userData","useQueryState","selectFromResult","result","onPressLike","log","flexWrap","FontAwesome","opacity","size","TextCard","pinnedIcon","isUrl","renderTextBody","indexOf","TouchableHighlight","paddingBottom","FontAwesome5","DoubleTap","lastTap","handleDoubleTap","now","Date","delay","onDoubleTap","children","Component","getImageUrl","imageId","IMAGE_BUCKET_URL","defaultProps","stringToEmoji","str","dec","i","charCodeAt","windowWidth","Dimensions","get","ImageCard","handlePressLike","activeOpacity","uri","maxHeight","resizeMode","PostsList","handleRemoveRecentSearch","handleClickRecentSearch","fetchPosts","isFetching","posts","fetchFirstPage","fetchMorePosts","PinIcon","MaterialIcons","keyboardShouldPersistTaps","ListHeaderComponent","fontStyle","Array","from","renderItem","item","marginVertical","marginHorizontal","appearance","pack","contentContainerStyle","onRefresh","refreshing","keyExtractor","commonProps","contentText","contentUrl","contentImage","onEndReachedThreshold","onEndReached","ListFooterComponent","showsVerticalScrollIndicator","ItemSeparatorComponent","Divider","DisabledFieldModal","setShowModal","visible","backdropStyle","myStyles","backdrop","onBackdropPress","Comment","isOwnComment","isExpanded","setIsExpanded","handleLikeComment","handleDeleteComment","onLongPress","Alert","icon","heartSolid","SinglePostBody","handleLikePost","scrollEnabled","multiline","textStyle","RegExp","test","href","FullPageSpinner","SinglePost","route","showModal","setComment","inputFocused","setInputFocused","refreshPost","refreshPostLoading","addCommentLoading","deletePost","deletePostLoading","handleRefreshPost","handleDeletePost","handleSubmitComment","header","footer","bottom","borderTopWidth","onBlur","CreateImage","setIsEmojiShown","discoverPostInputs","setDiscoverPostInputs","TagInput","PinnedCheckBox","ImagePicker","imagePickerStatus","requestImagePickerPermission","cameraStatus","requestCameraPermission","onPressCamera","granted","mediaTypes","Images","canceled","assets","pickImage","allowsEditing","toast","Toast","show","duration","durations","LONG","shadow","setTimeout","hide","imagePicker","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","right","Feather","faImage","faCamera","newText","CreatePost","permissionLevel","selectedTagIndex","setSelectedTagIndex","selectedPostTypeIndex","setSelectedPostTypeIndex","setError","isEmojiShown","isPostPinned","setIsPostPinned","tagArray","submitImage","formdata","FormData","append","forEach","groupedData","multiSelect","SearchBar","inputProps","cancelButtonAction","cancelButtonStatus","alwaysShowCancelButton","selected","setSelected","LayoutAnimation","configureNext","autoCorrect","SearchPage","searchBarBackgroundColor","Discover","setSearchTerm","onPressIn","headerTitle","animation","CreateCustomEvent","View","Text","CalendarFunctions","hours","minutes","ampm","Number","parseInt","string","final","charIndex","toString","getColor","startTime","endTime","allClassData","renderCustomEvent","event","calendarFun","startHour","startMinute","endHour","endMinute","stringToColour","getMinutesDiff","adjustsFontSizeToFit","numberOfLines","days","masterClassInfo","handleClassSelected","thisTime","find","course","classLocation","withStyles","eva","scrollViewRef","dark","light","isAllowedToReviewRes","buildTimeString","convertTo12HourTime","scrollTo","y","animated","averageGradeMSGModal","subtitle","creditWeightHM","creditWeight","timeSpentOutOfClass","lineHeight","averageGrade","courseDescription","summary","boxed","prerequisites","corequisites","disclaimer","subHeader","section","headerText","sectionText","seatsFilled","seatsAvailable","daysOfTheWeek","isAllowed","date","professor","courseOpen","courseClosed","details","BodyContainer","borderTopColor","documentStyle","imageLabel","schedule","graphImage","aspectRatio","grade","reviewText","reviewBox","borderBottomWidth","indentedInput","letterSpacing","NEW_REVIEW_FIELDS","mandatory","NewReview","setBody","handleReviewSubmitted","changeValue","theValue","valueToChange","newBody","aspect","inputBig","clearButtonMode","field","hasChosen","setHasChosen","renderDropDown","alignContent","renderFilterParameters","renderTheFieldsNecessary","address","video","display","couponContainer","coupon","imageGallery","imageStyle","SingleClassPage","bottomSheetRef","InfoPage","PostReview","CalendarPage","threeDayWidth","fiveDayWidth","day","renderCustomEvents","elem","finalRender","customEvents","snapToIndex","renderDashes","borderBottomColor","renderClasses","getFullClassData","data2","topBar","x","startingOffset","horizontal","snapToInterval","showsHorizontalScrollIndicator","contentOffset","bounces","decelerationRate","scrollEventThrottle","onScroll","nativeEvent","useNativeDriver","onMomentumScrollBegin","base_URL","renderModal","names","setNames","users","setUsers","setValue","recipient","setRecipient","modal","ok","userList","json","user","realName","exportSchedule","JSON","stringify","recipients","convert","isSchedule","userNameContainsString","auser","toLowerCase","firstPar","secondPar","findUserNameFromName","option","renderEachDropItem","renderDropDownForExport","Button","returnValue","ModalContainer","backDropVisible","setBackDropVisible","backdropOpacity","isVisible","Calendar","showGuestModal","setShowGuestModal","Message","ClassListItemItem","handleAddClass","handleRemoveClass","added","selectedAnim","Animated","Value","dropDownItem","isAvailable","notAvailable","sequence","spring","toValue","speed","start","transform","scale","list__container","addedClassesContainer","borderTopRightRadius","borderBottomRightRadius","borderRightWidth","buttonContainer","dropDown","loadingMessage","loadingMessageRefresh","Item","menuOpen","setIsMenuOpen","inItem","useMemo","property","update","springDamping","UIManager","setLayoutAnimationEnabledExperimental","addClassButton","AddedClasses","FlatList","ListEmptyComponent","Entypo","FilterClasses","setFiltersMenuVisible","initialFilters","setIsHMC","setColleges","change","onChangeIsHMC","onChangeFilterCollege","ClassesList","setMenuOpen","addedClassesVisible","setAddedClassesVisible","filtersMenuVisible","listRef","setListRef","fetchUserInfo","getClasses","classListLoading","isCurrentSectionLoading","skip","userInfoSuccess","isSuccess","fetchClasses","courseInfo","maxToRenderPerBatch","initialNumToRender","refreshControl","RefreshControl","tintColor","titleColor","LinearGradient","colors","end","locations","scrollToOffset","offset","filteredColleges","c","renderFilteredCollegesList","Menu","menuItems","setMenuItems","sponsorsApiSlice","refreshSponsors","sponsors","a","b","textA","sponsorName","textB","sponsor","postSponsorVisit","sponsorId","useLazyRefreshSponsorsQuery","usePostSponsorVisitMutation","SponsorPage","isDarkMode","sponsorPageStyles","setImageIndex","setIsVisible","canOpenLink","setCanOpenLink","postSponsorVisitQuery","videoLinkArray","videoLink","Linking","canOpenURL","website","funct","phoneNumber","location","openURL","images","img","coupons","couponDescription","dayOfTheWeek","openTime","closeTime","SponsorsList","sponsorFilters","setSponsorFilters","gotSponsors","setGotSponsors","refreshSponsorsQuery","tabNames","temp","findIndex","splice","tempFilters","getFilters","shouldLimitPrint","filterName","sponsorsToSend","getTheSponsors","renderSponsorsBasedOnFilters","listingStyles","cardContainer","starredFinal","object","WrapItems","childStyle","LayoutProps","Children","child","EditProfileHeader","saveChanges","EditUser","inputs","profileDescription","propOptions","linkedin","setFields","changedFields","err","SettingsPage","colorScheme","useColorScheme","logOut","resetClassPages","resetDiscover","resetAppData","resetApiState","handleDeleteAccount","handleUseDeviceSettingToggled","handleDarkModeToggled","manifest","version","Settings","Group","presentation","NotificationHomePage","NotificationsNavigation","notifications","setNotifications","isOpen","setIsOpen","refreshNotifications","res","parse","bodyTosend","createNotificationButton","newUsers","navigationHeader","getDateText","spaceIndex","first","initialRouteName","setRefreshing","setIsMoving","useCallback","newNotifications","not","redirect","notification","disableRightSwipe","onSwipeValueChange","handleOnLeftSwipe","rightOpenValue","creationDate","useNavigation","listToRemove","jsonSchedule","message","thereIsAtLeastOne","repliable","done","setDone","SafeAreaView","tempBody","recipientSelector","renderInputFields","sendNotification","timeButton","timeText","actualTimeText","timeStyle","borderLeftColor","containerForNotifications","SearchClasses","numberOfNotifications","setNumberOfNotifications","setInterval","Ionicons","FontAwesomeIconsPack","icons","Proxy","target","IconProvider","toReactElement","flatten","iconStyle","FontAwesomeIcon","FeatherIconsPack","FeatherIcon","AdminHomePage","AdminHomeNavigation","adminCommands","setAdminCommands","getAdminCommands","adminURL","commands","command","AdminCommand","info","setInfo","isFileUpload","setIsFileUpload","fileUploads","setFileUploads","setSponsors","setStatus","allFieldsFilled","setAllFieldsFilled","buttonPushed","setButtonPushed","checkForFieldsFilled","imageName","sendApiData","additionToUrl","paramOverride","apiType","newUrl","text2","trueFalseTemplate","boolValues","displayValue","changeEverything","renderStringArray","valuesToSend","tempFinal","miniField","newFieldForBody","values","changeStringValue","stringArray","eachOne","renderMultiSelectDropDown","finalArray","littleIndex","finalObject","at","calculateSelectedValues","newSelection","isArray","toggleValue","cancelled","fileUploadTemplate","graphData","timeFrame","informationToShow","isDateGraph","dataToShow","labels","getDates","datasets","getData","verticalLabelRotation","fromZero","xLabelsOffset","segments","chartConfig","decimalPlaces","labelColor","propsForDots","r","strokeWidth","stroke","oneElement","renderOneCard","flexShrink","moment","tz","subtract","format","usersToday","instance","weekStart","weekEnd","usersMonth","monthStart","monthEnd","add","cardInfo","finalText","renderedActions","renderButtonForCard","parameter","showResponseData","imagesContainer","imageContainer","AdminStack","AdminPanel","persistor","persistStore","Tab","createBottomTabNavigator","App","initUserData","currentVersion","currentFrontEndVersion","ExpoSplashScreen","prepare","NavigationContainer","documentTitle","formatter","DarkTheme","DefaultTheme","Theme","StatusBar","TabsPage","tabBarHideOnKeyboard","tabBarIcon","focused","iconName","tabBarStyle","tabBarItemStyle","ClassPages","unmountOnBlur","tabBarLabel","registerRootComponent"],"mappings":"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QAAS,CAAEvI,aAAa,KAE1B,eAAC,GAAMC,OAAM,CACXnR,KAAK,iBACLoR,UAAWL,GACX0I,QAAS,CAAEvF,MAAO,uB,cCxBX,SAASyF,GAAO,GAMd,IALfC,EAAa,EAAbA,cACAjJ,EAAc,EAAdA,eACAuD,EAAK,EAALA,MACA2F,EAAM,EAANA,OAAO,EAAD,EACN/F,aAAK,MAAG,IAAG,EAEX,OACE,gBAAC,UAAM,CACLA,MAAOA,EACPvF,MAAO,CACL0B,WAAY6J,WAAUC,gBAAkB,GACxCtG,MAAO,OACP/E,eAAgB,gBAChB8F,cAAe,MACf/F,WAAY,SACZoJ,kBAAmB,IACnB,UACF,gBAAC,UAAM,CAAC/D,MAAOA,EAAOvF,MAAO,CAAEiG,cAAe,OAAQ,UACnDoF,EACD,eAAC,QAAI,CAACrL,MAAO,CAAEkG,WAAY,GAAIN,SAAU,GAAIC,WAAY,OAAQ,SAC9DF,OAGJ2F,EAEAlJ,K,cCnCMqJ,GAAa,CACxB,QACA,SACA,eACA,UACA,MACA,SACA,MACA,SACA,WAGWC,GAAkB,CAC7B,iBACA,QACA,SACA,eACA,UACA,MACA,SACA,MACA,SACA,WAKWC,GAAc,CAAC,aAAc,YAAa,QAK1CC,GAAa,CACxB,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,eACA,qEACA,qEACA,qEACA,eACA,mDACA,mDACA,mDACA,eACA,mDACA,mDACA,qEACA,qEACA,qEACA,mDACA,mDACA,qEACA,qEACA,qEACA,mDACA,mDACA,qEACA,qEACA,qEACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,SACA,qBACA,qBACA,qBACA,qBACA,qBACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,eACA,eACA,iCACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,2BACA,2BACA,2BACA,2BACA,2BACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,SACA,eACA,eACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,SACA,eACA,SACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,SACA,eACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,OACA,OACA,SACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,eACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,SACA,SACA,eACA,eACA,eACA,eACA,eACA,eACA,eqkBCpxDF,IAAMC,GAAeC,8BAAkC,CACrDC,SAAU,SAACC,GAAkB,OAAKA,EAAKC,OAKnCC,GAAmB,SAACC,EAAUnX,GAAQ,OAC1CmX,EAAS/b,KAAI,SAACgc,GAAO,gBAChBA,GAAO,IACVC,SAAUD,EAAQE,MAAMnY,OACxBoY,SAAUH,EAAQE,MAAM9P,SAASxH,SAGxBwX,GAAmB5Z,EAASa,gBAAgB,CACvDC,kBAAkB,EAClBP,UAAW,SAACC,GAAO,MAAM,CACvBqZ,iBAAkBrZ,EAAQE,MAAyB,CACjDoZ,kBAAmB,IACnBpZ,MAAO,gBAAGpC,EAAO,EAAPA,QAAS4F,EAAU,EAAVA,WAA2B,MAAQ,CACpDjD,IAAI,qBACJC,QAAS,CACP5C,WAEFgE,OAAQ,CACN2H,IAN8B,EAAHA,IAO3BjD,WAP0C,EAAVA,WAQhC9C,aACA6V,WDxC6B,KC2CjC5Y,kBAAmB,SAACuB,EAA0BsX,EAAE,GAAmB,IAAhB5X,EAAQ,EAARA,SAEjD,OAAO6W,GAAagB,QAClBhB,GAAaiB,gBAAgB,CAC3BC,aAAczX,EAASnB,OAAS,IAGlCmB,EAASlF,KAAI,SAAC4b,GAAI,gBACbA,GAAI,IACPK,SAAUL,EAAKM,MAAMnY,OACrBoY,SAAUP,EAAKM,MAAM9P,SAASxH,GAC9BmX,SAAUD,GAAiBF,EAAKG,SAAUnX,UAI1CkD,eAAc,qCAGjB,IAAD,EAFEhH,EAAO,EAAPA,QAAS4F,EAAU,EAAVA,WAAY9B,EAAQ,EAARA,SAAU4E,EAAU,EAAVA,WAAYiD,EAAG,EAAHA,IAC3CzE,EAAc,EAAdA,eAAgBD,EAAQ,EAARA,SAElB,GAAKrB,EAAL,CAGA,IAAQgR,SAAe1P,GAAf0P,MAEA,MAAJA,GAAS,OAAL,EAAJA,EAAMkF,UAAF,EAAJ,EAAW7Y,QAAS,GAEtBgE,EACEqU,GAAiBlU,KAAKC,gBACpB,mBACA,CAAErH,UAAS4F,WAAY,EAAG9B,WAAU4E,aAAYiD,QAChD,SAACrE,GACCqT,GAAagB,QAAQrU,EAAOyU,GAAeC,UAAUpF,QAKvDhR,EAAa,GAEfqB,EACEqU,GAAiBlU,KAAKC,gBACpB,mBACA,CAAErH,UAAS4F,aAAY9B,WAAU4E,aAAYiD,QAC7C,SAACrE,GACSqT,GAAaiB,uBAO7B3U,EACEqU,GAAiBlU,KAAKC,gBACpB,mBACA,CAAErH,UAAS4F,WAAY,EAAG9B,WAAU4E,aAAYiD,QAChD,SAACrE,GACCA,EAAMuU,cAAe,UAK9B,qDA7CmB,KAgDtBI,mBAAoB/Z,EAAQ2B,SAAS,CACnCzB,MAAO,YAUA,IAAD,EATJpC,EAAO,EAAPA,QACAyU,EAAK,EAALA,MACAyH,EAAI,EAAJA,KACAC,EAAO,EAAPA,QACAC,EAAI,EAAJA,KACAjL,EAAM,EAANA,OACAkL,EAAK,EAALA,MACAC,EAAa,EAAbA,cACAC,EAAM,EAANA,OAEA,MAAa,iBAATL,EACK,CACLvZ,IAAK,oBACLuB,OAAQ,OACRtB,QAAS,CAAE5C,WACXyE,KAAM6X,GAGH,CACL3Z,IAAK,oBACLuB,OAAQ,OACRtB,QAAS,CAAE5C,WACXyE,MAAI,GACFgQ,QACAyH,QAAI,MACHA,EAAOC,GAAO,aACfC,GAAI,eACJjL,GAAM,cACNkL,GAAK,eACLE,GAAM,KAINvV,eAAc,qCAGjB,IAFChH,EAAO,EAAPA,QAAS8D,EAAQ,EAARA,SACTmD,EAAQ,EAARA,SAAUC,EAAc,EAAdA,eAEZ,IACE,IAAcsV,SAAkBtV,GAAxB0P,KAGR3P,EACEqU,GAAiBlU,KAAKC,gBACpB,mBACA,CAAErH,UAAS8D,WAAU8B,WAAY,IACjC,SAAC0B,GACCqT,GAAa8B,OAAOnV,EAAM,SACrBkV,GAAO,IACVrB,SAAU,EACVE,UAAU,SAKlB,MAAO5b,GACPiE,QAAQC,KAAK,6BAA8BlE,OAE9C,qDAxBmB,KA0BtBid,mBAAoBxa,EAAQ2B,SAAS,CACnCzB,MAAO,YAAgC,MAAQ,CAC7CO,IAAK,uBACLuB,OAAQ,SACRtB,QAAS,CAAE5C,QAHI,EAAPA,SAIRyE,KAAM,CACJsW,IALkB,EAAHA,IAMfjX,SAN4B,EAARA,SAOpB2Q,MAPmC,EAALA,OAShCtQ,gBAAiB,SAACC,GAAQ,OAAKA,EAASC,UAEpC2C,eAAc,qCAGjB,IAFChH,EAAO,EAAPA,QAAS+a,EAAG,EAAHA,IAAKjX,EAAQ,EAARA,SAAU4E,EAAU,EAAVA,WAAYiD,EAAG,EAAHA,IACpC1E,EAAQ,EAARA,SAAUC,EAAc,EAAdA,eAEZ,GAAIwB,GAAciD,EAChB,IAAIgR,EAAoB1V,EACtBqU,GAAiBlU,KAAKC,gBACpB,mBACA,CAAErH,UAAS8D,WAAU8B,WAAY,EAAG8C,aAAYiD,QAChD,SAACrE,GACCqT,GAAaiC,UAAUtV,EAAOyT,OAMtC,IAAI5T,EAAcF,EAChBqU,GAAiBlU,KAAKC,gBACpB,mBACA,CAAErH,UAAS8D,WAAU8B,WAAY,IACjC,SAAC0B,GACCqT,GAAaiC,UAAUtV,EAAOyT,OAKpC,UACQ7T,EACN,SACAC,EAAYI,OACRoV,GACFA,EAAkBpV,WAGvB,qDAlCmB,KAqCtBsV,YAAa3a,EAAQE,MAAM,CACzBA,MAAO,YAAkB,MAAQ,CAC/BO,IAAI,wBACJC,QAAS,CACP5C,QAHa,EAAPA,SAKRgE,OAAQ,CACN3E,GANqB,EAANyd,UASb9V,eAAc,qCAGjB,IAFChH,EAAO,EAAPA,QAAS8c,EAAM,EAANA,OAAQhZ,EAAQ,EAARA,SAAU4E,EAAU,EAAVA,WAAYiD,EAAG,EAAHA,IACvC1E,EAAQ,EAARA,SAAUC,EAAc,EAAdA,eAIZ,IACE,IAAc6V,SAAsB7V,GAA5B0P,KACFoG,EAAiB,SAAC1V,GACtBqT,GAAasC,UAAU3V,EAAO,CAC5BjI,GAAIyd,EACJI,QAAQ,SACHH,GAAW,IACd5B,SAAU4B,EAAY3B,MAAMnY,OAC5BoY,SAAU0B,EAAY3B,MAAM9P,SAASxH,GACrCmX,SAAUD,GAAiB+B,EAAY9B,SAAUnX,QAIvDmD,EACEqU,GAAiBlU,KAAKC,gBACpB,mBACA,CACErH,UACA8D,WACA8B,WAAY,GAEdoX,KAGAtU,GAAciD,IAChB1E,EACEqU,GAAiBlU,KAAKC,gBACpB,mBACA,CACErH,UACA8D,WACA8B,WAAY,EACZ8C,aACAiD,OAEFqR,IAIN,MAAOvd,GACPiE,QAAQC,KAAK,+BAAgClE,OAEhD,qDAhDmB,KAmDtB0d,SAAUjb,EAAQ2B,SAAS,CACzBzB,MAAO,YAAkC,MAAQ,CAC/CO,IAAK,iBACLuB,OAAQ,QACRtB,QAAS,CAAE5C,QAHI,EAAPA,SAIRyE,KAAM,CACJsW,IALkB,EAAHA,IAMftG,MANyB,EAALA,MAOpB3Q,SAPqC,EAAVsZ,YAS7BjZ,gBAAiB,SAACC,GAAQ,OAAKA,EAASC,UAEpC2C,eAAc,qCAGjB,IAFChH,EAAO,EAAPA,QAAS+a,EAAG,EAAHA,IAAKjX,EAAQ,EAARA,SAAU4E,EAAU,EAAVA,WAAYiD,EAAG,EAAHA,IACpC1E,EAAQ,EAARA,SAAUC,EAAc,EAAdA,eAEN8V,EAAiB,SAAC1V,GACtB,IAAMwT,EAAOiB,GAAesB,WAAW/V,EAAOyT,GAE9CJ,GAAasC,UAAU3V,EAAO,CAC5BjI,GAAI0b,EACJmC,QAAS,CACP/B,SAAUL,EAAKO,SAAWP,EAAKK,SAAW,EAAIL,EAAKK,SAAW,EAC9DE,UAAWP,EAAKO,aAKtB,GAAI3S,GAAciD,EAChB,IAAIgR,EAAoB1V,EACtBqU,GAAiBlU,KAAKC,gBACpB,mBACA,CAAErH,UAAS4F,WAAY,EAAG9B,WAAU4E,aAAYiD,OAChDqR,IAIN,IAAI7V,EAAcF,EAChBqU,GAAiBlU,KAAKC,gBACpB,mBACA,CAAErH,UAAS4F,WAAY,EAAG9B,YAC1BkZ,IAIJ,UACQ9V,EACN,SACIyV,GACFA,EAAkBpV,OAEpBJ,EAAYI,WAEf,qDAzCmB,KA4CtB+V,WAAYpb,EAAQ2B,SAAS,CAC3BzB,MAAO,YAAqB,MAAQ,CAClCO,IAAK,uBACLuB,OAAQ,OACRtB,QAAS,CAAE5C,QAHI,EAAPA,SAIRyE,KAAM,CACJsW,IALkB,EAAHA,IAMf1W,KANwB,EAAJA,MAQtBF,gBAAiB,SAACC,GAAQ,OAAKA,EAASC,UAGpC2C,eAAc,qCAGjB,IAFChH,EAAO,EAAPA,QAAS+a,EAAG,EAAHA,IAAKjX,EAAQ,EAARA,SAAU4E,EAAU,EAAVA,WAAYiD,EAAG,EAAHA,IACpC1E,EAAQ,EAARA,SAAUC,EAAc,EAAdA,eAEZ,UACQA,EAGND,EACEqU,GAAiBrZ,UAAU4a,YAAYU,SAAS,CAC9Cvd,UACA8c,OAAQ/B,EACRjX,WACA4E,aACAiD,SAGJ,MAAOlM,GACPiE,QAAQC,KAAK,gCAAiClE,OAEjD,qDApBmB,KAuBtB+d,YAAatb,EAAQ2B,SAAS,CAC5BzB,MAAO,YAA6B,MAAQ,CAC1CO,IAAK,wBACLuB,OAAQ,QACRtB,QAAS,CAAE5C,QAHI,EAAPA,SAIRyE,KAAM,CACJqY,OALqB,EAANA,OAMfW,UANgC,EAATA,WAQzBtZ,gBAAiB,SAACC,GAAQ,OAAKA,EAASC,UAEpC2C,eAAc,qCAGjB,IAFChH,EAAO,EAAPA,QAAS8c,EAAM,EAANA,OAAQW,EAAS,EAATA,UAAW3Z,EAAQ,EAARA,SAAU4E,EAAU,EAAVA,WAAYiD,EAAG,EAAHA,IAClD1E,EAAQ,EAARA,SAAUC,EAAc,EAAdA,eAEN8V,EAAiB,SAAC1V,GACtB,IAAMwT,EAAOiB,GAAesB,WAAW/V,EAAOwV,GAE9CnC,GAAasC,UAAU3V,EAAO,CAC5BjI,GAAIyd,EACJI,QAAS,CACPjC,SAAUH,EAAKG,SAAS/b,KAAI,SAACgc,GAC3B,OAAIA,EAAQH,MAAQ0C,EACX,SACFvC,GAAO,IACVC,SAAUD,EAAQG,SACdH,EAAQC,SAAW,EACnBD,EAAQC,SAAW,EACvBE,UAAWH,EAAQG,WAGhBH,SAKf,GAAIxS,GAAciD,EAChB,IAAIgR,EAAoB1V,EACtBqU,GAAiBlU,KAAKC,gBACpB,mBACA,CAAErH,UAAS4F,WAAY,EAAG9B,WAAU4E,aAAYiD,OAChDqR,IAKN,IAAM7V,EAAcF,EAClBqU,GAAiBlU,KAAKC,gBACpB,mBACA,CAAErH,UAAS8D,WAAU8B,WAAY,GACjCoX,IAIJ,UACQ9V,EACN,SACAC,EAAYI,OACRoV,GACFA,EAAkBpV,WAGvB,qDAnDmB,KAsDtBmW,cAAexb,EAAQ2B,SAAS,CAC9BzB,MAAO,YAA6B,MAAQ,CAC1CO,IAAK,0BACLuB,OAAQ,SACRtB,QAAS,CAAE5C,QAHI,EAAPA,SAIRyE,KAAM,CACJqY,OALqB,EAANA,OAMfW,UANgC,EAATA,WAQzBtZ,gBAAiB,SAACC,GAAQ,OAAKA,EAASC,UAEpC2C,eAAc,qCAGjB,IAFChH,EAAO,EAAPA,QAAS8c,EAAM,EAANA,OAAQW,EAAS,EAATA,UAAW3Z,EAAQ,EAARA,SAAU4E,EAAU,EAAVA,WAAYiD,EAAG,EAAHA,IAClD1E,EAAQ,EAARA,SAAUC,EAAc,EAAdA,eAEN8V,EAAiB,SAAC1V,GACtB,IAAMwT,EAAOiB,GAAesB,WAAW/V,EAAOwV,GAE9CnC,GAAasC,UAAU3V,EAAO,CAC5BjI,GAAIyd,EACJI,QAAS,CACPjC,SAAUH,EAAKG,SAASvT,QACtB,SAACwT,GAAO,OAAKA,EAAQH,MAAQ0C,SAK/BtW,EAAcF,EAClBqU,GAAiBlU,KAAKC,gBACpB,mBACA,CACErH,UACA8D,WACA8B,WAAY,GAEdoX,IAIJ,GAAItU,GAAciD,EAChB,IAAIgR,EAAoB1V,EACtBqU,GAAiBlU,KAAKC,gBACpB,mBACA,CACErH,UACA8D,WACA8B,WAAY,GAEdoX,IAKN,UACQ9V,EACN,SACAC,EAAYI,OACRoV,GACFA,EAAkBpV,WAGvB,qDAlDmB,SAuDpBwU,GAAiBpB,GAAagD,eAKlCC,GAQEtC,GARFsC,6BACAC,GAOEvC,GAPFuC,8BACAC,GAMExC,GANFwC,8BACAC,GAKEzC,GALFyC,oBACAC,GAIE1C,GAJF0C,sBACAC,GAGE3C,GAHF2C,wBACAC,GAEE5C,GAFF4C,uBACAC,GACE7C,GADF6C,yB,qnCChfF,IAAMC,GCZS,SAAgCC,GAA+B,IAAbC,EAAI,uDAAG,IAChEC,EAAkB,0IAQnB,OARmB,oCACtBC,iBAAmB,WACjB,EAAKjJ,MAAMnG,SAAW,EAAKmG,MAAMnG,WACjC,EAEFA,QAAUqP,oBAAS,EAAKD,iBAAkBF,EAAM,CAC9CI,SAAS,EACTC,UAAU,IACV,EAID,OAJC,4BAEF,WACE,OAAO,eAACN,EAAgB,SAAKO,KAAKrJ,OAAK,IAAEnG,QAASwP,KAAKxP,eACxD,EAZqB,CAASiD,IAAMwM,eAkBvC,OAHAN,EAAmBO,YAAW,2BAC5BT,EAAiBS,aAAeT,EAAiB9d,MAAI,IAEhDge,EDPiBQ,CAAuBpL,WAAkB,KAEpD,SAASqL,GAAU,GAM9B,IALF5C,EAAI,EAAJA,KACArB,EAAG,EAAHA,IAAI,EAAD,EACHkE,wBAAgB,OAAO,MACvBvW,kBAAU,WAAGwW,EAAS,MACtBC,mBAAW,WAAGD,EAAS,EAEjBlf,EAAU0O,GAAenN,GACzBpB,EAAWuO,GAAetN,GAC1BuY,EAAQC,sBAEAwF,EACZ9c,EAAcL,UAAUQ,YAAY4c,cAAcrf,GAD5C4W,KAER,EAAmBmH,KAAZZ,EAAiC,SAAzB,GAETrC,EAAOQ,GAAiBrZ,UAAUsZ,iBAAiB8D,cACvD,CACEzZ,WAAY,EACZ5F,UACA8D,SAAUsb,EAAStb,SACnB4E,aACAiD,IAAKwT,GAEP,CACEG,iBAAkB,SAACC,GAAM,aACvBxD,GAAesB,WACF,OADY,EACvBkC,EAAO3I,MAAI,EAAI+D,GAAaiB,kBAC5Bb,MAKFyE,EAAW,sBAAG,YAClB,GAAK1E,EACL,UACQqC,EAAS,CACbnd,UACA+a,MACAtG,MAAOqG,EAAKrG,MACZ2I,WAAYtC,EAAKhX,SACjBA,SAAUsb,EAAStb,SACnB4E,aACAiD,IAAKwT,IACJ9O,SACH,MAAOqC,GACPhP,QAAQ+b,IAAI,qBAAsB/M,OAErC,kBAfgB,mCAiBjB,OACE,gBAAC,UAAM,CACL5D,MAAO,CACLkF,MAAO,OACPe,cAAe,MACfoD,gBAAiB,EACjBC,kBAAmB,IACnB,UACF,eAAC,UAAM,CACLtJ,MAAO,CACLiG,cAAe,MACf2K,SAAU,OACV3Q,KAAM,GACN,SAEDqN,EAAKld,KAAI,SAACyM,EAAa0D,GAAa,OACnC,eAAC,UAAM,CAELgF,MAAM,IACNvF,MAAO,CACLgK,QAAS,EACT7E,aAAc,EACdgB,YAAa,EACbd,UAAW,GACX,SACF,eAAC,QAAI,CAACrF,MAAO,CAAE4F,SAAU,IAAK,SAAE/I,KAR3B0D,QAcX,gBAAC,UAAM,CACLP,MAAO,CACLiG,cAAe,MACfhG,KAAM,EACNE,eAAgB,eAChBD,WAAY,UACZ,UACF,eAAC2Q,GAAA,QAAW,CACV7Q,MAAO,CAAEC,KAAM,EAAG6Q,QAASX,EAAmB,EAAI,GAClD1e,KAAK,aACLsf,KAAM,GACN7O,MAAO7Q,EAAW,OAAS,SAI7B,gBAACie,GAAiB,CAChBtP,MAAO,CACLiG,cAAe,MACfhG,KAAM,EACNE,eAAgB,eAChBD,WAAY,UAEdI,QAASoQ,EAAY,UACrB,eAAC,QAAI,CACH1Q,MAAO,CACL4F,SAAU,GACVlE,WAAY,GACZ,SACG,MAAJsK,OAAI,EAAJA,EAAMK,WAET,eAACwE,GAAA,QAAW,CACV7Q,MAAO,CAAEuG,UAAW,UACpBwK,KAAM,GACN7O,MACM,MAAJ8J,KAAMO,SACF1B,EAAM,qBACNxZ,EACA,OACA,OAENI,KAAU,MAAJua,KAAMO,SAAW,QAAU,qBEnI9B,SAASyE,GAAS,GAY7B,IAXFjR,EAAU,EAAVA,WACAuN,EAAI,EAAJA,KACA3H,EAAK,EAALA,MACAhQ,EAAI,EAAJA,KACA4X,EAAK,EAALA,MACAtB,EAAG,EAAHA,IAEArS,GADU,EAAV0U,WACU,EAAV1U,YACAyW,EAAW,EAAXA,YACAY,EAAU,EAAVA,WAAW,EAAD,EACVC,aAAK,OAAQ,EAIPC,GAFQrG,sBAES,WACrB,IAAIvV,EAAOI,EAEX,OAAIJ,EAAK6b,QAAQ,MAAQ,IAAM7b,EAAK6b,QAAQ,MAAQ,GAC3C7b,EAAKhB,MAAM,MAAM,GAAK,MACpBgB,EAAKpB,OAAS,GAChBoB,EAAK2F,UAAU,EAAG,IAAM,MAExB3F,IAeX,OACE,eAAC8b,GAAA,QAAkB,CACjB/Q,QAAS,WACPP,EAAWyB,SAAS,aAAc,CAAEyK,MAAKrS,aAAYyW,iBACrD,SACF,gBAAC,UAAM,WACJY,EAED,eAAC,YAAQ,CACP9O,UAAQ,EACRkJ,cAAe,kBACb,eAAC,QAAI,CAACrL,MAAO,CAAE4F,SAAU,GAAIO,YAAa,IAAK,SAAEoH,KAEnDvN,MAAO,CACL4J,YAAa,GACblI,WAAY,GACZ4P,cAAe,GAEjB3L,MAAO,kBACL,eAAC,QAAI,CAAC3F,MAAO,CAAE4F,SAAU,GAAI0L,cAAe,GAAI,SAAE3L,KAEpDiF,YAAa,kBACX,eAAC,QAAI,CAAC5K,MAAO,CAAEkC,MAAO,QAAS,SAC5BgP,EAhCT,gBAAC,QAAI,CAAClR,MAAO,CAAEkC,MAAO,QAAS,UAC7B,eAACqP,GAAA,QAAY,CAAC9f,KAAK,SAAS,IAE3BkE,EAAKxB,OAAS,GAAKwB,EAAKlB,MAAM,EAAG,IAAM,MAAQkB,KA6BnBwb,SAK7B,eAACjB,GAAS,CACR5C,KAAMA,EACNrB,IAAKA,EACLrS,WAAYA,EACZyW,YAAaA,S,mbC5EG,IAGLmB,GAAS,0IAiB3B,OAjB2B,oCAO5BC,QAAU,KAAK,EAGfC,gBAAkB,WAChB,IAAMC,EAAMC,KAAKD,MACb,EAAKF,SAAYE,EAAM,EAAKF,QAAW,EAAKhL,MAAMoL,MACpD,EAAKpL,MAAMqL,cAEX,EAAKL,QAAUE,GAElB,EAQA,OARA,4BAED,WACE,OACE,eAAC7N,GAAA,QAAwB,CAACxD,QAASwP,KAAK4B,gBAAgB,SACrD5B,KAAKrJ,MAAMsL,eAGjB,EAzB2B,CAASxO,IAAMyO,WCGtC,SAASC,GAAYC,GAC1B,MAAUC,2EAAoBD,EAAO,ODJlBV,GACZY,aAAe,CACpBP,MAAO,IACPC,YAAa,aACbC,SAAU,MCsEP,IAAMM,GAAgB,SAACC,GAC5B,IAAKA,EACH,MAAO,GAGT,IADA,IAAIC,EAAM,EACDC,EAAI,EAAGA,EAAIF,EAAIne,SAAUqe,EAChCD,GAAOD,EAAIG,WAAWD,IAAMA,EAG9B,OADc5G,GAAW2G,EAAM3G,GAAWzX,SC3E5C,IAAMue,GAAcC,WAAWC,IAAI,UAAU1N,MAE9B,SAAS2N,GAAU,GAW9B,IAVFlN,EAAK,EAALA,MACAsG,EAAG,EAAHA,IACAlM,EAAU,EAAVA,WACAmS,EAAO,EAAPA,QACA5E,EAAI,EAAJA,KACAgB,EAAU,EAAVA,WACAtZ,EAAQ,EAARA,SACA4E,EAAU,EAAVA,WACAyW,EAAW,EAAXA,YACAY,EAAU,EAAVA,WAEA,EAAmBhC,KAAZZ,EAAiC,SAAzB,GACTnd,EAAU0O,GAAenN,GAEzBqgB,EAAe,sBAAG,YACtB,UACQzE,EAAS,CACbnd,UACA+a,MACAtG,QACA2I,aACAtZ,WACA4E,aACAiD,IAAKwT,IACJ9O,SACH,MAAOqC,GACPhP,QAAQ+b,IAAI,qBAAsB/M,OAErC,kBAdoB,mCAgBrB,OACE,gBAAC,UAAM,CAAC5D,MAAO,CAAEC,KAAM,EAAGC,WAAY,UAAW,UAC9C+Q,EACD,gBAACpM,GAAA,QAAgB,CACfvE,QAAS,WACPP,EAAWyB,SAAS,aAAc,CAAEyK,MAAKrS,aAAYyW,iBAEvD0C,cAAe,GACf/S,MAAO,CACLC,KAAM,EACNC,WAAY,SACZmJ,gBAAiB,IACjB,UACF,eAAC,UAAM,CACLrJ,MAAO,CACLkF,MAAqB,GAAdwN,GACPpN,SPhCiB,IOiCjB+D,gBAAiB,IACjB,SACF,eAAC,QAAI,CAACrJ,MAAO,CAAE4F,SAAU,IAAK,SAAED,MAElC,eAAC,GAAS,CAACkM,MAAO,IAAKC,YAAagB,EAAgB,SAClD,eAAC3O,GAAA,QAAK,CACJC,OAAQ,CACN4O,IAAKf,GAAYC,IAEnBlS,MAAO,CACLmF,aAAc,EACdD,MAAqB,GAAdwN,GACPtN,OAAsB,GAAdsN,GACRO,UP9Ce,IO+Cf3N,SP/Ce,IOgDfU,aAAc,GACdkN,WAAY,eAKlB,eAAChD,GAAS,CACR5C,KAAMA,EACNrB,IAAKA,EACLrS,WAAYA,EACZyW,YAAaA,U,mlBCvDR,SAAS8C,GAAU,GAc9B,IAbFpT,EAAU,EAAVA,WACAlD,EAAG,EAAHA,IACAjD,EAAU,EAAVA,WACAkD,EAAc,EAAdA,eACAsW,EAAwB,EAAxBA,yBACAC,EAAuB,EAAvBA,wBASMxI,EAAQC,sBACR5Z,EAAU0O,GAAenN,GAIrBuC,GAHO4K,GAAetN,GAI5BkB,EAAcL,UAAUQ,YAAY4c,cAAcrf,GADpD4W,KAAQ9S,UAGJ8B,EAAa+J,iBAAO,GAC1B,EACEiO,KAA8B,WADzBwE,EAAU,YAAIC,EAAU,EAAVA,WAAYzS,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAG5C,EACEyL,GAAiBrZ,UAAUsZ,iBAAiB8D,cAC1C,CAAEzZ,WAAY,EAAG5F,UAAS8D,WAAU6H,MAAKjD,cACzC,CACE4W,iBAAkB,SAACC,GAAY,IAAD,IAC5B,MAAO,CACL1D,aAAyB,OAAb,EAAE0D,EAAO3I,WAAI,EAAX,EAAaiF,aAC3ByG,MAAOvG,GAAeC,UACT,OADkB,EAC7BuD,EAAO3I,MAAI,EAAI+D,GAAaiB,uBARhC0G,EAAK,EAALA,MAAOzG,EAAY,EAAZA,aAeT0G,EAAc,sBAAG,YACrB3c,EAAWqK,QAAU,QACfmS,EAAW,CACfpiB,UACA4F,WAAYA,EAAWqK,QACvBnM,WACA6H,MACAjD,kBAEH,kBATmB,mCAWd8Z,EAAc,sBAAG,YAChB3G,IAAgBwG,IACrBzc,EAAWqK,gBACLmS,EAAW,CACfpiB,UACA4F,WAAYA,EAAWqK,QACvBnM,WACA6H,MACAjD,mBAEH,kBAVmB,mCAYpBsH,qBAAU,WACRuS,MACC,CAAC7Z,EAAYiD,IAEhB,IAAM8W,EACJ,gBAAC,UAAM,CACL3T,MAAO,CACLiG,cAAe,MACfD,aAAc,EACdX,UAAW,GACXa,WAAY,IACZ,UACF,eAAC0N,GAAA,QAAa,CACZniB,KAAK,WACLsf,KAAM,GACN7O,MAAO2I,EAAM,uBAEf,eAAC,QAAI,CAAC7K,MAAO,CAAEkC,MAAO2I,EAAM,sBAAuB,SAAC,cAoGpDwC,EAAU,+BA+Fd,OA7FEA,EADEvM,EAEA,eAAC,UAAM,CAACd,MAAO,CAAEqF,UAAW,GAAInF,WAAY,UAAW,SACrD,eAAC,WAAO,MAGHa,EAEP,gBAAC,UAAM,CAACf,MAAO,CAAEE,WAAY,SAAUmF,UAAW,IAAK,UACrD,eAACkM,GAAA,QAAY,CACX9f,KAAK,cACLsf,KAAM,GACN7O,MAAO2I,EAAM,sBAEf,eAAC,QAAI,CAAC7K,MAAO,CAAE8F,UAAW,SAAUF,SAAU,IAAK,SAAC,2BAK9B,IAAjB4N,EAAMrf,OAEb,gBAAC,UAAM,CAAC6L,MAAO,CAAEE,WAAY,SAAUmF,UAAW,IAAK,UACrD,eAACkM,GAAA,QAAY,CACX9f,KAAK,WACLsf,KAAM,GACN7O,MAAO2I,EAAM,sBAEf,eAAC,QAAI,CAAC7K,MAAO,CAAE8F,UAAW,SAAUF,SAAU,IAAK,SAAC,sBAKhC,KAAfhM,GAA6B,KAARiD,GACZ,MAAdC,OAAc,EAAdA,EAAgB3I,QAAS,EAEzB,eAAC,UAAM,CAAC6L,MAAO,CAAEC,KAAM,GAAI,SACzB,eAAC,QAAI,CACH4T,0BAA0B,UAC1BC,oBAAqB,kBACnB,eAAC,QAAI,CACHzR,OAAO,UACPrC,MAAO,CAAE+T,UAAW,SAAU7N,WAAY,IAAK,SAAC,qBAIpD4B,KAAMkM,MAAMC,KAAKnX,GACjBoX,WA3FiB,SAAH,GAAoC,IAA9BC,EAAI,EAAJA,KAC5B,OACE,eAAC,YAAQ,CACP7T,QAAS,WACP+S,EAAwBc,GACxBnS,WAASC,WAEXjC,MAAO,CACLqJ,gBAAiB,GACjB+K,eAAgB,EAChBpP,gBAAiB,eAEnBW,MAAOwO,EACP9I,cAAe,kBACb,eAAC,QAAI,CACH5Z,KAAK,QACLuO,MAAO,CACLoF,OAAQ,GACRlD,MAAO2I,EAAM,mBACbwJ,iBAAkB,OAIxBjS,eAAgB,SAACqE,GAAK,OACpB,eAAC,UAAM,CACL6N,WAAW,QACXhU,QAAS,kBAAM8S,EAAyBe,IACxC9I,cAAe,eAAC,QAAI,SAAK5E,GAAK,IAAEhV,KAAK,IAAI8iB,KAAK,uBAsElD,eAAC,UAAM,CAACvU,MAAO,CAAEC,KAAM,GAAI,SACzB,gBAAC,UAAM,CAACD,MAAO,CAAEqF,UAAW,GAAIlF,eAAgB,UAAW,UACzD,eAAC,QAAI,CAACH,MAAO,CAAE8F,UAAW,SAAUF,SAAU,IAAK,SAAC,qBAGpD,eAAC,QAAI,CACH5F,MAAO,CACL8F,UAAW,SACXF,SAAU,GACV1D,MAAO2I,EAAM,oBACb,SAAC,0CASX,eAAC,UAAM,CAAC7K,MAAO,CAAEC,KAAM,GAAI,SACzB,eAAC,QAAI,CACHuU,sBAAuB,CAAEtP,MAAO,QAChCuP,UAAWhB,EACXiB,WAAY5T,EACZgH,KAAM0L,EACNmB,aAAc,SAACR,GAAI,OAAKA,EAAKlI,KAC7BiI,WA7KW,SAAH,GAA0C,IAApCC,EAAI,EAAJA,KACdS,EAAc,CAClBjP,MAAOwO,EAAKxO,MACZ2H,KAAM6G,EAAK7G,KACXrB,IAAKkI,EAAKlI,IACVqC,WAAY6F,EAAKnf,SACjB+K,aACApI,IAAKwc,EAAKlI,IACVrS,aACAyW,YAAaxT,EACboU,WAAYkD,EAAK1G,OAASkG,EAAU,MAKtC,OAAQQ,EAAK/G,MACX,IAAK,cACH,OACE,eAAC4D,GAAQ,SACH4D,GAAW,IACfjf,KAAMwe,EAAKU,YACXtH,MAAO4G,EAAK5G,MACZ2D,OAAO,KAGb,IAAK,aACH,OACE,eAACF,GAAQ,SACH4D,GAAW,IACfjf,KAAMwe,EAAKW,WACXvH,MAAO4G,EAAK5G,MACZ2D,OAAO,KAGb,IAAK,eACH,OACE,eAAC2B,GAAS,SACJ+B,GAAW,IACf1C,QAASiC,EAAKY,aACdzG,WAAY6F,EAAKnf,SACjBA,SAAUA,KAIhB,QAEE,OADAJ,QAAQ+b,IAAI,sCAA2C,MAAJwD,OAAI,EAAJA,EAAM/G,MAClD,OAgIL4H,sBAAuB,GACvBC,aAAcvB,EACdwB,oBA5Fc,WACpB,GAAI3B,EACF,OACE,eAAC,UAAM,CAACvT,MAAO,CAAEE,WAAY,SAAUmJ,gBAAiB,IAAK,SAC3D,eAAC,WAAO,OAyFR8L,8BAA8B,EAC9BC,uBAAwC,QAAhBjX,UAASC,GAAe,KAAOiX,eAWxD,eAAC,UAAM,CAACrV,MAAO,CAAEC,KAAM,GAAI,SAAEoN,IChTvB,SAASiI,GAAmB,GAAiB,IAAhBC,EAAY,EAAZA,aAC1C,OACE,eAAC,SAAK,CACJC,SAAS,EACTC,cAAeC,GAASC,SACxB3V,MAAO,CAAEkF,MAAO,OAChB0Q,gBAAiB,kBAAML,GAAa,IAAO,SAC3C,gBAAC,QAAI,CAACpT,UAAU,EAAK,UACnB,eAAC,QAAI,CAACnC,MAAO,CAAE4F,SAAU,GAAIlE,WAAY,EAAG4P,cAAe,IAAK,SAAC,0IAKjE,eAAC,UAAM,CACLhR,QAAS,WACPiV,GAAa,IACb,SAAC,iBAQb,IAAMG,GAAWjQ,WAAWC,OAAO,CACjCiQ,SAAU,CACR3Q,gBAAiB,yB,oBCZN,SAAS6Q,GAAQ,GAU5B,IATFlgB,EAAI,EAAJA,KACAqY,EAAM,EAANA,OACAW,EAAS,EAATA,UACAmH,EAAY,EAAZA,aACA9gB,EAAQ,EAARA,SACAqX,EAAQ,EAARA,SACAE,EAAQ,EAARA,SACA3S,EAAU,EAAVA,WACAyW,EAAW,EAAXA,YAEMxF,EAAQC,sBACR5Z,EAAU0O,GAAenN,GACzBpB,EAAWuO,GAAetN,GAChC,EAAoCoO,oBAAS,GAAK,WAA3CqV,EAAU,KAAEC,EAAa,KAChC,EAAsB5G,KAAfV,EAAuC,SAA5B,GAClB,EAA8CW,KAA0B,WAAjET,EAAa,KAEdqH,GAFoC,KAEnB,sBAAG,YACxB,UACQvH,EAAY,CAChBC,YACAX,SACA9c,UACA8D,WACA4E,aACAiD,IAAKwT,IACJ9O,SACH,MAAOqC,GACPhP,QAAQC,KAAK,wBAAyB+O,OAEzC,kBAbsB,oCAejBsS,EAAsB,WAC1B,IACEtH,EAAc,CACZD,YACAX,SACA9c,UACA8D,WACA4E,aACAiD,IAAKwT,IACJ9O,SACH,MAAOqC,GACPhP,QAAQC,KAAK,0BAA2B+O,KAI5C,OACI,gBAACiB,GAAA,QAAgB,CACf7E,MAAO,CAAEiG,cAAe,MAAOmO,eAAgB,GAAIC,iBAAkB,IACrE/T,QAAS,kBAAM0V,GAAeD,IAC9BI,YAAa,WACPL,GACFM,WAAM3U,MAAM,GAAI9L,EAAM,CACpB,CACEJ,KAAM,SACNyK,MAAO,UAET,CACEzK,KAAM,SACN+K,QAAS4V,MAIf,UACF,gBAAC,UAAM,CACLlW,MAAO,CACLoF,OAAQ,OACRa,cAAe,MACfhG,KAAM,IACN,UACF,eAAC,UAAM,CACLD,MAAO,CACLmF,aAAc,IACdD,MAAO,GACPE,OAAQ,GACRe,YAAa,GACbnB,gBAAiB3T,EACbwZ,EAAM,mBACNA,EAAM,mBACV1K,eAAgB,SAChBD,WAAY,UACZ,SACF,eAAC,QAAI,CAACF,MAAO,CAAE4F,SAAU,IAAK,SAAEyM,GAAc1c,OAGhD,gBAAC,QAAI,CAACqK,MAAO,CAAE6F,WAAY,SAAU5F,KAAM,EAAGyB,WAAY,GAAI,eAE3DqU,GAAcpgB,EAAKxB,QAAU,GAAKwB,EAAUA,EAAKlB,MAAM,EAAG,IAAG,YAIlE,gBAACoQ,GAAA,QAAgB,CACf7E,MAAO,CACLiG,cAAe,MACfM,UAAW,SACXrG,WAAY,UAEdI,QAAS2V,EAAkB,UAC3B,eAAC,QAAI,CAACjW,MAAO,CAAEgK,QAAS,EAAGpE,SAAU,IAAK,SAAEyG,IAC5C,eAAC,mBAAe,CACd0E,KAAM,GACN7O,MACEqK,EAAW1B,EAAM,qBAAuBA,EAAM,mBAEhDwL,KAAMC,mB,cCjHZ5D,GAAcC,WAAWC,IAAI,UAAU1N,MAE9B,SAASqR,GAAe,GAAiC,IL6E/CjE,EK7EgBlF,EAAI,EAAJA,KAAMzX,EAAI,EAAJA,KAAM6gB,EAAc,EAAdA,eAC7CnlB,EAAWuO,GAAetN,GAEhC,MAAa,gBAAT8a,EAEA,eAAC,SAAK,CACJqJ,eAAe,EACfC,WAAS,EACTvU,UAAQ,EACRvK,MAAOjC,EACPqK,MAAO,CACLgF,gBAAiB,cACjBqB,YAAa,GAEfsQ,UAAW,CAAEzU,MAAO7Q,EAAW,QAAU,WAG3B,eAAT+b,GL4DYkF,EK3DR3c,EL4DD,IAAIihB,OAChB,wKAMA,KAEeC,KAAKvE,GKnEhB,eAAC,KAAC,CAACtS,MAAO,CAAEkC,MAAO,QAAU4U,KAAMnhB,EAAK,SACrCA,IAIE,eAAC,QAAI,UAAEA,KAKd,eAAC,GAAS,CAACmc,YAAa0E,EAAe,SACrC,eAAC,UAAM,CACLxW,MAAO,CACLE,WAAY,UACZ,SACF,eAACiE,GAAA,QAAK,CACJC,OAAQ,CACN4O,IAAKf,GAAYtc,IAEnBqK,MAAO,CACLmF,aAAc,EACdD,MAAqB,GAAdwN,GACPtN,OAAsB,GAAdsN,GACRO,UX5Be,IW6Bf3N,SX7Be,IW8BfU,aAAc,GACdkN,WAAY,iBCxDX,SAAS6D,GAAgB,GAAkB,IAAD,IAAhBjG,eAAO,MAAG,GAAG,EACpD,OACE,eAAC,UAAM,CACL9Q,MAAO,CACLG,eAAgB,SAChBD,WAAY,SACZgF,MAAO,OACPE,OAAQ,OACRL,SAAU,WACVC,gBAAiB,QACjB/E,KAAM,EACN6Q,UACA5H,OAAQ,KACR,SACF,eAAC,WAAO,CAAC6H,KAAK,YC2BL,SAASiG,GAAW,GAK/B,IAAD,IAJDC,MACE/hB,OAAU+W,EAAG,EAAHA,IAAKrS,EAAU,EAAVA,WAAYyW,EAAW,EAAXA,YAE7BtQ,EAAU,EAAVA,WAEM8K,EAAQC,sBACRzZ,EAAWuO,GAAetN,GAC1BpB,EAAU0O,GAAenN,GAC/B,EAAkCiO,oBAAS,GAAM,WAA1CwW,EAAS,KAAE3B,EAAY,KAC9B,EAA8B7U,mBAAS,IAAG,WAAnC0L,EAAO,KAAE+K,EAAU,KAC1B,EAAwCzW,oBAAS,GAAM,WAAhD0W,EAAY,KAAEC,EAAe,KAEpC,EAAmBpI,KAAZZ,EAAiC,SAAzB,GACf,EACEc,KAAyB,WADpBmI,EAAW,KAAeC,EAAkB,KAA7BzW,UAEtB,EACEoO,KAAuB,WADlBV,EAAU,KAAegJ,EAAiB,KAA5B1W,UAErB,EACEkO,KAA+B,WAD1ByI,EAAU,KAAeC,EAAiB,KAA5B5W,UAEPwP,EACZ9c,EAAcL,UAAUQ,YAAY4c,cAAcrf,GAD5C4W,KAEFkE,EAAOQ,GAAiBrZ,UAAUsZ,iBAAiB8D,cACvD,CAAEzZ,WAAY,EAAG5F,UAAS8D,SAAUsb,EAAStb,UAC7C,CACEwb,iBAAkB,SAACC,GAAM,aACvBxD,GAAesB,WACF,OADY,EACvBkC,EAAO3I,MAAI,EAAI+D,GAAaiB,kBAC5Bb,MAKF0L,EAAiB,sBAAG,YACxB,UACQL,EAAY,CAChBtJ,OAAQ/B,EACR/a,UACA8D,SAAUsb,EAAStb,SACnB4E,aACAiD,IAAKwT,IACJ9O,SACH,MAAOqC,GACPhP,QAAQC,KAAK,wBAAyB+O,OAEzC,kBAZsB,mCAcjBgU,EAAgB,sBAAG,YACvB,UACQH,EAAW,CACfxL,MACA/a,UACA8D,SAAUsb,EAAStb,SACnB2Q,MAAOqG,EAAKrG,MACZ/L,aACAiD,IAAKwT,IACJ9O,SACH,MAAOqC,GACPhP,QAAQC,KAAK,uBAAwB+O,OAExC,kBAbqB,mCAehBiU,EAAmB,sBAAG,YAC1B,UACQrJ,EAAW,CACfvC,MACA/a,UACA8D,SAAUsb,EAAStb,SACnBO,KAAM6W,EACNxS,aACAiD,IAAKwT,IACJ9O,SACH4V,EAAW,IACXE,GAAgB,GAChBrV,WAASC,UACT,MAAOtR,GACPiE,QAAQC,KAAK,2BAA4BlE,OAE5C,kBAhBwB,mCAkBnBmiB,EAAe,sBAAG,YACtB,UACQzE,EAAS,CACbnd,UACA+a,MACAtG,MAAOqG,EAAKrG,MACZ2I,WAAYtC,EAAKhX,SACjBA,SAAUsb,EAAStb,SACnB4E,aACAiD,IAAKwT,IACJ9O,SACH,MAAOqC,GACPhP,QAAQ+b,IAAI,qBAAsB/M,OAErC,kBAdoB,mCAoErB,OAAKoI,EAMH,gBAAC,UAAM,CAAChM,MAAO,CAAEC,KAAM,GAAI,UACxBiX,GAAa,eAAC5B,GAAkB,CAACC,aAAcA,IAEhD,eAAC,QAAI,CACHd,UAAWkD,EACXjD,WAAY6C,EACZzD,oBAhEa,WACjB,OACE,gBAAC,UAAM,CAAC9T,MAAO,CAAEsF,SblHM,IakHmBiB,UAAW,UAAW,UAC9D,eAAC,QAAI,CACHpE,UAAQ,EACRnC,MAAO,CAAEI,OAAQ,EAAGiG,YAAa,GACjCyR,OACE,eAAC,UAAM,UACL,eAAC,QAAI,CAAC9X,MAAO,CAAE6F,WAAY,OAAQD,SAAU,IAAK,SAC/CoG,EAAKrG,UAIZoS,OACE,eAAC,UAAM,CAAC/X,MAAO,CAAEI,OAAQ,EAAG4J,QAAS,GAAI,SACvC,eAACkG,GAAS,CACRC,kBAAkB,EAClB7C,KAAMtB,EAAKsB,KACXrB,IAAKD,EAAKC,QAGf,SACD,eAACsK,GAAc,CACbC,eAAgB1D,EAChB1F,KAAMpB,EAAKoB,KACXzX,KAAMqW,EAAK6I,aAAe7I,EAAK8I,YAAc9I,EAAK+I,iBAGrD/I,EAAKhX,WAAasb,EAAStb,SAC1B,eAAC,UAAM,CAACgL,MAAO,CAAEiG,cAAe,MAAOf,MAAO,QAAS,SACrD,eAAC,UAAM,CACL7C,OAAO,SACPrC,MAAO,CAAEI,OAAQ,EAAGH,KAAM,GAC1BK,QAASsX,EAAiB,SAAC,kBAO7B,KAEJ,eAAC,QAAI,CAACzV,UAAQ,EAACnC,MAAO,CAAEqG,YAAa,GAAI,SACvC,eAAC,QAAI,CACHrG,MAAO,CACL6F,WAAY,OACZ,sBAAemG,EAAKG,SAAShY,OAAM,YAmBzCqgB,sBAAuB,CACrBH,iBAAkB,GAClB/O,SAAU,IACViB,UAAW,UAEbvG,MAAO,CAAEgF,gBAAiB,eAC1B8C,KAAMkE,EAAKG,SACXiJ,uBAAwBC,WACxBnB,WAAY,gBAAGC,EAAI,EAAJA,KAAI,OACjB,eAAC0B,GAAO,CACNlgB,KAAMwe,EAAK5e,KACXyY,OAAQhC,EAAKC,IACb0C,UAAWwF,EAAKlI,IAChBI,SAAU8H,EAAK9H,SACfE,SAAU4H,EAAK5H,SACfvX,SAAUsb,EAAStb,SACnB8gB,aAAc3B,EAAKnf,WAAasb,EAAStb,SACzC4E,WAAYA,EACZyW,YAAaA,KAGjBsE,aAAc,SAACvI,GACb,OAAOA,EAAQH,OAGnB,gBAAC,UAAM,CACLjM,MAAO,CACLiG,cAAe,MACf/F,WAAY,SACZkF,OAAQ,GACR4S,OAAQ,EACR9S,MAAO,OACPmE,gBAAiB,GACjBQ,aAAc,GACdzD,YAAa/U,EACTwZ,EAAM,mBACNA,EAAM,mBACVoN,eAAgB,GAChB,UACF,eAAC,UAAM,CACLjY,MAAO,CACLC,KAAM,EACNC,WAAY,SACZC,eAAgB,UAChB,SACF,eAAC,UAAM,CACLH,MAAO,CACLmF,aAAc,IACdD,MAAO,GACPE,OAAQ,GACRJ,gBAAiB3T,EACbwZ,EAAM,mBACNA,EAAM,mBACV1K,eAAgB,SAChBD,WAAY,UACZ,SACF,eAAC,QAAI,CAACF,MAAO,CAAE4F,SAAU,IAAK,SAC3ByM,GAAc/B,EAAStb,gBAK9B,eAAC,SAAK,CACJoN,eACEgV,EACE,eAACvS,GAAA,QAAgB,CAACvE,QAASuX,EAAoB,SAC7C,eAACtG,GAAA,QAAY,CACX9f,KAAK,yBACLsf,KAAM,GACN7O,MAAO2I,EAAM,yBAGf,KAEN7K,MAAO,CAAEC,KAAM,GACf2B,YAAY,mBACZiH,QAAS,kBAAMwO,GAAgB,IAC/Ba,OAAQ,kBAAMb,GAAgB,IAC9Bzf,MAAOwU,EACPtK,aAAc,SAACvM,GAAI,OAAK4hB,EAAW5hB,IACnCwM,gBAAiB8V,QAGnBH,GAAqBF,IAAsB,eAACT,GAAe,QA/F/DhX,EAAW4G,SACJ,M,gnBClLSgM,WAAWC,IAAI,UAAU1N,MAE9B,SAASiT,GAAY,GAMhC,IALFC,EAAe,EAAfA,gBACAC,EAAkB,EAAlBA,mBACAC,EAAqB,EAArBA,sBACAC,EAAQ,EAARA,SACAC,EAAc,EAAdA,eAEA,EACEC,gCAAwC,WADnCC,EAAiB,KAAEC,EAA4B,KAEtD,EACEF,0BAAkC,WAD7BG,EAAY,KAAEC,EAAuB,KAGtCC,EAAa,sBAAG,YAEpB,UADuBD,KACVE,SAAWH,EAAaG,QAAS,CAC5C,IAAItI,QAAegI,qBAA8B,CAC/CO,WAAYP,oBAA6BQ,SAEtCxI,EAAOyI,UACVZ,EAAsB,SACjBD,GAAkB,IACrBtD,aAActE,EAAO0I,OAAO,WAIhC/C,WAAM3U,MACJ,0FAGL,kBAjBkB,mCAmBb2X,EAAS,sBAAG,YAEhB,UADuBT,KACVI,SAAWL,EAAkBK,QAAS,CACjD,IAAItI,QAAegI,2BAAoC,CACrDY,eAAe,IAEjB,IAAK5I,EAAOyI,WACVZ,EAAsB,SACjBD,GAAkB,IACrBtD,aAActE,EAAO0I,OAAO,MAGV,YAAhBhb,UAASC,IAAkB,CAC7B,IAAIkb,EAAQC,WAAMC,KAChB,sDACA,CACEC,SAAUF,WAAMG,UAAUC,KAC1B7I,QAAS,EACT/L,UAAW,IACXC,gBAAiB,OACjB4U,QAAQ,IAIZC,YAAW,WACTN,WAAMO,KAAKR,KACV,WAIPlD,WAAM3U,MACJ,+FAGL,kBAlCc,mCAoCXsY,EAAc,+BA2GlB,OAvGEA,EAFoB,MAAlB1B,KAAoBtD,aAGpB,gBAAC,UAAM,CACLxP,MAAM,IACNvF,MAAO,CACLoF,OAAQ,IACRgP,eAAgB,GAChBjP,aAAc,GACd6U,YAAa,OACbC,aAAc,CACZ/U,MAAO,EACPE,OAAQ,GAEV8U,cAAe,IACfC,aAAc,KAEdC,UAAW,IACX,UACF,eAACvV,GAAA,QAAgB,CACfvE,QAAS,WACPgY,EAAsB,OAExBtY,MAAO,CAAE+E,SAAU,WAAYsV,MAAO,GAAIlR,IAAK,EAAGD,OAAQ,GAAI,SAC9D,eAACoR,GAAA,QAAO,CAAC7oB,KAAK,WAAWsf,KAAM,GAAI7O,MAAO,WAG5C,eAACiC,GAAA,QAAK,CACJC,OAAQ,CACN4O,IAAKqF,EAAmBtD,aAAa/B,KAEvChT,MAAO,CACLmF,aAAc,EACdD,MAAO,OACPE,OAAQ,OACR8N,WAAY,gBAQlB,gBAAC,UAAM,CAAClT,MAAO,CAAEiG,cAAe,OAAQ,UACtC,eAACpB,GAAA,QAAgB,CACfvE,QAAS,WACP8X,GAAgB,GAChBgB,KAEFpZ,MAAO,CACLoF,OAAQ,GACRjF,eAAgB,SAChBD,WAAY,SACZD,KAAM,EACNoJ,gBAAiB,EACjBpD,cAAe,OACf,SACF,gBAAC,UAAM,CACLV,MAAM,IACNvF,MAAO,CACLC,KAAM,EACNgG,cAAe,MACfb,OAAQ,OACRiP,iBAAkB,GAClBhL,gBAAiB,GACjBC,kBAAmB,EACnBnE,aAAc,EACdjF,WAAY,SACZC,eAAgB,gBAChB,UACF,eAAC,mBAAe,CAACkW,KAAMkE,WAASxJ,KAAM,GAAI7O,MAAO,SACjD,eAAC,QAAI,UAAC,sBAGV,eAAC2C,GAAA,QAAgB,CACfvE,QAASwY,EACT9Y,MAAO,CACLoF,OAAQ,GACRjF,eAAgB,SAChBD,WAAY,SACZD,KAAM,EACNoJ,gBAAiB,EACjBpD,cAAe,OACf,SACF,gBAAC,UAAM,CACLV,MAAM,IACNvF,MAAO,CACLC,KAAM,EACNgG,cAAe,MACfb,OAAQ,OACRiP,iBAAkB,GAClBhL,gBAAiB,GACjBC,kBAAmB,EACnBnE,aAAc,EACdjF,WAAY,SACZC,eAAgB,gBAChB,UACF,eAAC,mBAAe,CAACkW,KAAMmE,YAAUzJ,KAAM,GAAI7O,MAAO,SAClD,eAAC,QAAI,UAAC,uBAQd,uCACE,eAAC,UAAM,CACLlC,MAAO,CACLiG,cAAe,MACf9F,eAAgB,eAChBD,WAAY,SACZmF,UAAW,IACX,SACF,eAAC,SAAK,CACJhD,OAAO,UACPT,YAAY,aACZiH,QAAS,WACPuP,GAAgB,IAElBxgB,MAAyB,MAAlBygB,KAAoB1S,MAAQ0S,EAAmB1S,MAAQ,GAC9D3F,MAAO,CAAEC,KAAM,GACf6B,aAAc,SAAC2Y,GACbnC,EAAsB,SACjBD,GAAkB,IACrB1S,MAAO8U,UAMdlC,IACD,eAACC,EAAc,IACduB,K,qkBCvLQ,SAASW,KACtB,IAAM7P,EAAQC,sBACRzZ,EAAWuO,GAAetN,GAC1BpB,EAAU0O,IAAe,SAAC/N,GAAK,OAAKA,EAAMU,QAAQC,OAAOtB,WAGD,EAA1DsC,EAAcL,UAAUQ,YAAY4c,cAAcrf,GADpD4W,KAAQ9S,EAAQ,EAARA,SAAU2lB,EAAe,EAAfA,gBAEpB,EAAoDja,mBAAS,MAAK,WAA3D2X,EAAkB,KAAEC,EAAqB,KAChD,EAAgD5X,mBAAsB,IAAG,WAAlEka,EAAgB,KAAEC,EAAmB,KAC5C,EAA0Dna,mBACxD,IAAI2G,aAAU,IACf,WAFMyT,EAAqB,KAAEC,EAAwB,KAGtD,EAA0Bra,mBAAS,MAAK,WAAjCkD,EAAK,KAAEoX,EAAQ,KACtB,EAAwCta,oBAAS,GAAM,WAAhDua,EAAY,KAAE7C,EAAe,KACpC,EAAwC1X,oBAAS,GAAM,WAAhDwa,EAAY,KAAEC,EAAe,KAEpC,EAA4CpM,KAA+B,WAApE5B,EAAkB,KAAIrM,EAAS,KAATA,UAEvBsa,EAA+B,UAApBT,EAA8BjP,GAAkBD,GAE3D4P,EAAW,sBAAG,UAAO/N,GACzB,IAAIgO,EAAW,IAAIC,SACfL,GACFI,EAASE,OAAO,SAAU,QAE5BF,EAASE,OAAO,QAASnD,EAAmB1S,OAC5C2V,EAASE,OAAO,OAAQ,gBACxBF,EAASE,OAAO,UAAW,CACzBxI,IAAKqF,EAAmBtD,aAAa/B,IACrCvhB,KAAM,gBACN2b,KAAM,cAERE,EAAKmO,SAAQ,SAAC5e,GACZye,EAASE,OAAO,OAAQ3e,MAG1B,UACQsQ,EAAmB,CACvBC,KAAM,eACNlc,UACA8D,WACAwY,cAAe8N,IACd/Z,SAEH,IAAI+X,EAAQC,WAAMC,KAAK,uBAAwB,CAC7CC,SAAUF,WAAMG,UAAUC,KAC1B7I,QAAS,EACT/L,UAAW,IACXC,gBAAiB6F,EAAM,qBACvB+O,QAAQ,IAGVC,YAAW,WACTN,WAAMO,KAAKR,KACV,KAEHhB,EAAsB,MACtBuC,EAAoB,IACpBG,EAAS,MACT,MAAOrqB,GACP,IAAI2oB,EAAQC,WAAMC,KAAK,uBAAwB,CAC7CC,SAAUF,WAAMG,UAAUC,KAC1B7I,QAAS,EACT/L,UAAW,IACXC,gBAAiB6F,EAAM,qBACvB+O,QAAQ,IAGVC,YAAW,WACTN,WAAMO,KAAKR,KACV,SAEN,gBApDgB,sCAsDXjY,EAAQ,sBAAG,YAIf,GACiC,IAA9ByZ,EAAsB9R,OACnBqP,IACCA,EAAmB1S,QACnB0S,EAAmBxD,cACO,IAA9BiG,EAAsB9R,OACnBqP,IACCA,EAAmB1S,QACnB0S,EAAmBvD,aACO,IAA9BgG,EAAsB9R,OACnBqP,IACCA,EAAmB1S,QACnB0S,EAAmBtD,cAIxB,OAFAngB,QAAQ+b,IAAI,iBAAkB0H,QAC9B2C,EAAS,6BAgBX,IAAM1N,EAAOsN,EAAiBxqB,KAAI,SAACmQ,GAAK,OAAK6a,EAAS7a,EAAMyI,QAG5D,GAAkC,IAA9B8R,EAAsB9R,IAA1B,CAKA,IAAIoE,EAAO,GACuB,IAA9B0N,EAAsB9R,IACxBoE,EAAO,cACgC,IAA9B0N,EAAsB9R,MAC/BoE,EAAO,cAET,UACQD,EAAmB,CACvBC,OACAlc,UACA8D,WACAsY,OACAD,QAASgL,EAAmBjL,GAC5BzH,MAAO0S,EAAmB1S,MAC1B4H,MAAO8K,EAAmB9K,MAC1BE,OAAQyN,IACP3Z,SAEH,IAAI+X,EAAQC,WAAMC,KAAK,uBAAwB,CAC7CC,SAAUF,WAAMG,UAAUC,KAC1B7I,QAAS,EACT/L,UAAW,IACXC,gBAAiB6F,EAAM,qBACvB+O,QAAQ,IAGVC,YAAW,WACTN,WAAMO,KAAKR,KACV,KAEHhB,EAAsB,MACtBuC,EAAoB,IACpBG,EAAS,MACT,MAAOrqB,GACP,IAAI2oB,EAAQC,WAAMC,KAAK,uBAAwB,CAC7CC,SAAUF,WAAMG,UAAUC,KAC1B7I,QAAS,EACT/L,UAAW,IACXC,gBAAiB6F,EAAM,qBACvB+O,QAAQ,IAGVC,YAAW,WACTN,WAAMO,KAAKR,KACV,WAhDH+B,EAAY/N,MAkDf,kBAzFa,mCA2FRkL,EAAiB,WACrB,OACE,eAAC,YAAQ,CACPxY,MAAO,CAAEoU,eAAgB,IACzB7K,QAAS2R,EACT1R,SAAU,SAACC,GAAW,OAAK0R,EAAgB1R,IAAa,SAAC,YAMzD8O,EAAW,WACf,IAAMmD,EAAcd,EAAiBxqB,KAAI,SAACmQ,GACxC,OAAO6a,EAAS7a,EAAMyI,QAExB,OACE,gBAAC,UAAM,WACL,eAAC,UAAM,CACL2S,aAAW,EACX/jB,MAAO8jB,EAAYhnB,KAAK,MACxBkN,YAAY,cACZ0F,cAAesT,EACf9R,SAAU,SAACvI,GACTsa,EAAoBta,IAEtBP,MAAOgE,GAAOiG,MAAM,SACnBmR,EAAShrB,KAAI,SAACuV,EAAO6M,GAAC,OACrB,eAAC,cAAU,CAAC7M,MAAOA,GAAY6M,QAGnC,eAAC,QAAI,CACHxS,MAAO,CACLuG,UAAW,WACXJ,YAAa,EACbjE,MAAO,OACP0D,SAAU,IACV,SAAC,iBA6JX,OACE,gBAAC,UAAM,CAAC5F,MAAO,CAAEC,KAAM,GAAI,UACzB,eAAC8D,GAAA,QAAoB,CACnBG,SAA0B,QAAhB/F,UAASC,GAAe,UAAY,SAC9C4B,MAAO,CAAEC,KAAM,GAAI,SACnB,eAACgJ,GAAA,QAAU,CAACjJ,MAAO,CAAEC,KAAM,GAAI,SAC7B,eAAC6D,GAAA,QAAwB,CACvB9D,MAAO,CAAEC,KAAM,GACfK,QAAS,WACP0B,WAASC,WACT,SACF,gBAAC,UAAM,CACLjC,MAAO,CAAEC,KAAM,EAAG+F,aAAc,IAAKqO,iBAAkB,IAAK,UAC5D,gBAAC,UAAM,CACLzN,MAAM,mBACNhP,MAAO+T,GAAYmP,EAAsB9R,KACzC1B,cAAewT,EACfhS,SAAU,SAACvI,GACTwa,EAAyBxa,GACzBsa,EAAoB,IACpBvC,EAAsB,MACtB0C,EAAS,MACT5C,GAAgB,IAElBpY,MAAOgE,GAAOiG,MAAM,UACpB,eAAC,cAAU,CACTtE,MAAM,aACN0F,cACE,eAACkG,GAAA,QAAY,CACX9f,KAAK,QACLsf,KAAM,GACN7O,MAAO7Q,EAAW,OAAS,WAIjC,eAAC,cAAU,CACTsU,MAAM,YACN0F,cACE,eAACkG,GAAA,QAAY,CACX9f,KAAK,WACLsf,KAAM,GACN7O,MAAO7Q,EAAW,OAAS,WAIjC,eAAC,cAAU,CACTsU,MAAM,OACN0F,cACE,eAACkG,GAAA,QAAY,CACX9f,KAAK,OACLsf,KAAM,GACN7O,MAAO7Q,EAAW,OAAS,cAKlCuS,GACC,eAAC,UAAM,UACL,eAAC,QAAI,CACH5D,MAAO,CACL8F,UAAW,SACX5D,MAAO,MACP6R,UAAW,UACX,SACDnQ,MAxLiB,IAA9BkX,EAAsB9R,IAEtB,uCACE,eAAC,UAAM,CACLhJ,MAAO,CACLiG,cAAe,MACf9F,eAAgB,eAChBD,WAAY,SACZmF,UAAW,IACX,SAGF,eAAC,SAAK,CACJhD,OAAO,UACPT,YAAY,aACZiH,QAAS,WACPuP,GAAgB,IAElBxgB,MAAyB,MAAlBygB,KAAoB1S,MAAQ0S,EAAmB1S,MAAQ,GAC9D3F,MAAK,SAAOgE,GAAOiG,OAAK,IAAEhK,KAAM,IAChC6B,aAAc,SAAC2Y,GACbnC,EAAsB,SACjBD,GAAkB,IACrB1S,MAAO8U,UAKdlC,IACD,eAAC,SAAK,CACJ7B,WAAS,EACT9U,YAAY,YACZiH,QAAS,WACPuP,GAAgB,IAElBzB,UAAW,CAAEvM,UAAW,KACxBpK,MAAK,SAAOgE,GAAOiG,OAAK,IAAE1D,UAAW,SAAUrB,MAAO,SACtDtN,MACoB,MAAlBygB,KAAoBxD,YAChBwD,EAAmBxD,YACnB,GAEN/S,aAAc,SAAC2Y,GACbnC,EAAsB,SACjBD,GAAkB,IACrBxD,YAAa4F,QAIE,UAApBE,GAA+B,eAACnC,EAAc,OAGZ,IAA9BsC,EAAsB9R,IAG7B,uCACE,eAAC,UAAM,CACLhJ,MAAO,CACLiG,cAAe,MACf9F,eAAgB,eAChBD,WAAY,SACZmF,UAAW,IACX,SAEF,eAAC,SAAK,CACJhD,OAAO,UACPT,YAAY,aACZiH,QAAS,WACPuP,GAAgB,IAElBxgB,MAAyB,MAAlBygB,KAAoB1S,MAAQ0S,EAAmB1S,MAAQ,GAC9D3F,MAAK,SAAOgE,GAAOiG,OAAK,IAAEhK,KAAM,IAChC6B,aAAc,SAAC2Y,GACbnC,EAAsB,SACjBD,GAAkB,IACrB1S,MAAO8U,UAMf,eAAC,SAAK,CACJ7Y,YAAY,YACZ5B,MAAOgE,GAAOiG,MACdpB,QAAS,WACPuP,GAAgB,IAElBxgB,MACoB,MAAlBygB,KAAoBvD,WAChBuD,EAAmBvD,WACnB,GAENhT,aAAc,SAAC2Y,GACbnC,EAAsB,SACjBD,GAAkB,IACrBvD,WAAY2F,QAKjBlC,IACoB,UAApBoC,GAA+B,eAACnC,EAAc,OAGZ,IAA9BsC,EAAsB9R,IAG7B,eAACmP,GAAW,CACVC,gBAAiBA,EACjBC,mBAAoBA,EACpBC,sBAAuBA,EACvBC,SAAUA,EACVC,eACsB,UAApBmC,EAA8BnC,EAAiB,kBAAM,uCATtD,GAuFKyC,GACA,eAAC,UAAM,CACLjb,MAAOgE,GAAOiG,MACd3J,QAASe,EACTc,SAAUrB,EAAU,SAAC,WAKzB,eAAC,UAAM,CACLd,MAAO,CACLkJ,QAAS,EACTnE,SAAU,WACVG,MAAO,OACPE,OAAQ,OACRlF,WAAY,SACZ8X,QAAS,gBAWpBlX,GACC,eAAC,UAAM,CACLd,MAAO,CACLG,eAAgB,SAChBD,WAAY,SACZgF,MAAO,OACPE,OAAQ,OACRL,SAAU,WACVC,gBAAiB,QACjB/E,KAAM,EACN6Q,QAAS,IACT,SACF,eAAC,WAAO,CAACC,KAAK,gBAOxB,IAAM/M,GAASyB,WAAWC,OAAO,CAC/BuE,MAAO,CACLmK,eAAgB,K,+kBC/dL,SAASwH,GAAU,GAYd,IAXlB9Z,EAAY,EAAZA,aACAlI,EAAU,EAAVA,WACAyR,EAAa,EAAbA,cACAzJ,EAAW,EAAXA,YACAhB,EAAQ,EAARA,SACA4H,EAAU,EAAVA,WACAqT,EAAU,EAAVA,WAAW,EAAD,EACVC,0BAAkB,MAAG,aAAQ,MAC7B/Z,uBAAe,MAAG,aAAQ,MAC1Bga,0BAAkB,MAAG,UAAS,MAC9BC,8BAAsB,OAAQ,EAE9B,EAAgCtb,oBAAS,GAAM,WAAxCub,EAAQ,KAAEC,EAAW,KAEtB7qB,EAAWuO,GAAetN,GAC1BuY,EAAQC,sBAoBd,OACE,gBAAC,UAAM,CACL9K,MAAO,CACLgF,gBAAiB,cACjBiB,cAAe,OACf,UACDoF,EAED,eAAC,SAAK,IACJrL,MAAK,SACAwI,GAAU,IACbrD,aAAc,GACdlF,KAAM,EACNoG,YAAa,EACbD,YAAa/U,EACTwZ,EAAM,mBACNA,EAAM,qBAEZpG,qBAAsBoG,EAAM,mBAC5BzI,eACE6Z,GAAYriB,EAAWzF,OAAS,EAC5B,SAACsS,GAAK,OACJ,eAAC5B,GAAA,QAAgB,CAACvE,QAAS,kBAAMwB,EAAa,KAAI,SAChD,eAAC,QAAI,SAAK2E,GAAK,IAAEhV,KAAK,QAAQ8iB,KAAK,oBAGvC,KAEN1L,QA9CS,WACbqT,GAAY,GACPF,GACHG,WAAgBC,cACdD,WAAgBzW,OAAO,IAAK,SAAU,YA2CtCwS,OAtCW,WACfgE,GAAY,GACPF,GACHG,WAAgBC,cACdD,WAAgBzW,OAAO,IAAK,SAAU,aAmCtC9D,YAAaA,EACbhK,MAAOgC,EACPkI,aAAc,SAACvM,GACbuM,EAAavM,IAEfwM,gBAAiBA,EACjBF,IAAKjB,EACLyb,aAAa,GACTR,IAGLG,GAA0BC,EACzB,eAAC,UAAM,CACLlL,KAAK,QACL1O,OAAQ0Z,EACRzH,WAAW,QACXhU,QAAS,WACP0B,WAASC,UACT6Z,KACA,SAAC,WAGH,QCxGK,SAASQ,GAAW,GAAiB,IAAfvc,EAAU,EAAVA,WAC7B5H,EAAWuH,KAEX9F,EAAagG,GAAerC,IAC5BV,EAAM+C,GAAelC,IACrBd,EAAsBgD,GAAenC,IACrCX,EAAiB8C,GAAejC,IAEhCiD,EAAWC,iBAAc,MAEzBxP,EAAWuO,GAAetN,GAC1BuY,EAAQC,sBAEd5J,qBAAU,WAAO,IAAD,EACE,OAAhB,EAAAN,EAASO,UAAT,EAAkBC,UACjB,IAEH,IAAMW,EAAe,sBAAG,YACtB5J,EAAS6E,GAAoBpD,OAC9B,kBAFoB,mCAgBjB2iB,EAA2B,GAO/B,OALEA,EADElrB,EACyBwZ,EAAM,mBAENA,EAAM,mBAIjC,gBAAC,UAAM,CAAC7K,MAAO,CAAEC,KAAM,GAAI,UACzB,eAAC,UAAM,CAACsF,MAAM,IAAIvF,MAAO,CAAEsR,cAAe,IAAK,SAC7C,eAAClG,GAAM,CACL7F,MAAM,IACN+F,OACE,eAAC,UAAM,CACL/F,MAAM,IACNvF,MAAO,CAAEC,KAAM,EAAG+E,gBAAiB,eAAgB,SACnD,eAAC4W,GAAS,CACRhb,SAAUA,EACV4H,WAAY,CACVsI,QAAS,EACT9L,gBAAiBuX,GAEnB3iB,WAAYA,EACZkI,aAnCO,SAACvM,GACpB4C,EAAS+E,GAAkB3H,KAmCfwM,gBAAiBA,EACjBH,YAAY,kBACZka,mBAAoB,kBAAM/b,EAAW4G,UACrCoV,mBAAmB,QACnBC,wBAAsB,MAI5BrW,MAAM,OAGV,eAACwN,GAAS,CACRpT,WAAYA,EACZlD,IAAKA,EACLjD,WAAYgD,EACZE,eAAgBA,EAChBsW,yBAhD2B,SAACxZ,GAChCzB,EAASkF,GAAwBzD,KAgD7ByZ,wBA7C0B,SAACzZ,GAC/BzB,EAASgF,GAAyBvD,UC9BtC,IAAM0I,GAAQC,qBAEC,SAASia,GAAS,GAAiB,IAAfzc,EAAU,EAAVA,WAC3B8K,EAAQC,sBACRzZ,EAAWuO,GAAetN,GAChC,EAAoCoO,mBAAS,IAAG,WAAzC9G,EAAU,KAAE6iB,EAAa,KAE1Bra,EACJ,eAACyC,GAAA,QAAgB,CAACvE,QAAS,kBAAMP,EAAWyB,SAAS,eAAc,SACjE,eAAC+P,GAAA,QAAY,CAAC9f,KAAK,OAAOsf,KAAM,GAAI7O,MAAO2I,EAAM,yBAIjD0R,EAA2B,GAO/B,OALEA,EADElrB,EACyBwZ,EAAM,mBAENA,EAAM,mBAIjC,gBAAC,GAAMpI,UAAS,WACd,eAAC,GAAMG,OAAM,CACXnR,KAAK,YACLoR,UAAWsQ,GACXjI,QAAS,CACP4M,OAAQ,kBACN,eAAC,UAAM,CAACvS,MAAM,IAAIvF,MAAO,CAAEsR,cAAe,IAAK,SAC7C,eAAClG,GAAM,CACL7F,MAAM,IACNI,MAAM,WACNvD,eAAgBA,EAChBkJ,OACE,eAAC,UAAM,CAAC/F,MAAM,IAAIvF,MAAO,CAAEC,KAAM,EAAGoU,iBAAkB,IAAK,SACxC,QAAhBlW,UAASC,GACR,eAACwd,GAAS,CACRpT,WAAY,CACVsI,QAAS,GACT9L,gBAAiBuX,GAEnB3iB,WAAYA,EACZkI,aAAc2a,EACd7a,YAAY,kBACZia,WAAY,CACV1Z,UAAU,EACVua,UAAW,WACT3c,EAAWyB,SAAS,eAGtB0W,OAAQ,WACNnY,EAAW4G,aAKjB,eAAC,UAAM,CACL3G,MAAO,CACLoK,UAAW,GACXR,YAAa,GACbzE,aAAc,GACdlF,KAAM,EACNoG,YAAa,EACbD,YAAa/U,EACTwZ,EAAM,mBACNA,EAAM,mBACV1K,eAAgB,UAChB,SACF,eAAC2D,GAAA,QAAwB,CACvBxD,QAAS,WACPP,EAAWyB,SAAS,eACpB,SACF,eAAC,QAAI,CACHxB,MAAO,CACLkC,MAAO2I,EAAM,mBACbjF,SAAU,IACV,SAAC,kCAazB,eAAC,GAAMhD,OAAM,CACXnR,KAAK,aACLoR,UAAW6X,GACXxP,QAAS,CAAEyR,YAAa,mBAE1B,eAAC,GAAM/Z,OAAM,CACXnR,KAAK,aACLoR,UAAWmU,GACX9L,QAAS,CACPyR,YAAa,MAGjB,eAAC,GAAM/Z,OAAM,CACXnR,KAAK,aACLoR,UAAWyZ,GACXpR,QAAS,CAAEvI,aAAa,EAAOia,UAAW,a,sBCtHnC,SAASC,KACtB,OACE,eAACC,GAAA,QAAI,UACH,eAACC,GAAA,QAAI,UAAC,wB,ICFSC,GAAiB,qCA8CjC,OA9CiC,yCAClC,SAAoBxN,GACI,IAAhBA,EAAKrb,SACLqb,EAAO,IAAMA,GAEjB,IAAIyN,EAAQzN,EAAK/a,MAAM,EAAG,GACtByoB,EAAU1N,EAAK/a,MAAM,EAAG,GACxB0oB,EAAOC,OAAOC,SAASJ,GAAS,GAAK,KAAO,KAMhD,OAJc,KADdA,GAAgB,MAEZA,EAAQ,GACRE,EAAO,MAEJF,EAAQ,IAAMC,EAAUC,IAClC,sBAED,SAASG,GAEL,IADA,IAAIC,EAAQ,EACHC,EAAY,EAAGA,EAAYF,EAAOnpB,OAAQqpB,IAC/CD,GAASD,EAAO7K,WAAW+K,GAI/B,OAFAD,GAASH,OAAOG,EAAME,WAAW,IAAG,SAAI,GAAOF,EAAME,WAAWtpB,OAAS,GAElE,OAAS,KADhBopB,GAAa,SAAI,GAAMA,EAAME,WAAWtpB,SACV,KACzB,GAAK,GAAKopB,GAAS,MACnB,GAAK,GAAKA,GAAS,OAC3B,4BAED,SAAejL,GACX,OAAOxC,KAAK4N,SAASpL,KACxB,4BAED,SAAeqL,EAAWC,GACtB,OAAIA,EAAUD,EACqB,IAAvBC,EAAUD,GACXA,IAAcC,EACd,GAEyB,IAAxBD,EAAYC,KAE3B,8BAED,SAAiBxpB,EAAoBypB,GAGjC,OAFgBA,EACUzpB,EAAWG,MAAM,KAAKE,MAAM,GAAI,GAAGC,KAAK,UAErE,EA9CiC,GCEvB,SAASopB,GAAkBC,EAAOzN,GAC7C,IAAM0N,EAAc,IAAIhB,GAExB,EAAiCe,EAAMJ,UAAUppB,MAAM,KAAI,WAApD0pB,EAAS,KAAEC,EAAW,KAC7B,EAA6BH,EAAMH,QAAQrpB,MAAM,KAAI,WAA9C4pB,EAAO,KAAEC,EAAS,KACrBlc,EAAQ8b,EAAYK,eAAeN,EAAMtsB,MAG7C,OACI,eAACqrB,GAAA,QAAI,CAED9c,MAAO,CACHgF,gBAAiB9C,EACjBiH,IAAM,KAAO8U,EAA4B,GAAdC,EAC3B9Y,OACI,MAAQ+Y,EAAUF,GAAaD,EAAYM,eAAeJ,EAAaE,GAC3ElZ,MAAO,OACPH,SAAU,WACV3E,OAAQ,EACRD,eAAgB,UAClB,SACF,eAAC0E,GAAA,QAAgB,CACbsR,YAAa,aAqBZ,SACD,eAAC4G,GAAA,QAAI,CACDwB,sBAAsB,EACtBC,cAAeL,EAAUF,EAAY,EACrCje,MAAO,CAAEkC,MAAO,QAAS4D,UAAW,UAAW,SAC9CiY,EAAMtsB,UAtCVssB,EAAMtsB,KAAOssB,EAAMU,MCNrB,SAASvK,GACtBwK,EACAtqB,GAEC,IADDuqB,EAAmB,uDAAG,SAACrB,KAEjBU,EAAc,IAAIhB,GAClB4B,EAAWF,EAAgBhjB,MAAMmjB,MACrC,SAACC,GAAM,OAAKA,EAAO1qB,aAAeA,KAGpC,EAAiCwqB,EAASjB,UAAUppB,MAAM,KAAI,WAAvD0pB,EAAS,KAAEC,EAAW,KAC7B,EAA6BU,EAAShB,QAAQrpB,MAAM,KAAI,WAAjD4pB,EAAO,KAAEC,EAAS,KACrBlc,EAAQ8b,EAAYK,eAAeK,EAAgBlqB,kBACnD3D,EAAOuD,EAAWG,MAAM,KAC5B,OACE,eAACuoB,GAAA,QAAI,CAEH9c,MAAO,CACLgF,gBAAiB9C,EACjBiH,IAAK,KAAO8U,EAA0B,GAAdC,EACxB9Y,OACE,MAAQ+Y,EAAUF,GAClBD,EAAYM,eAAeJ,EAAaE,GAC1ClZ,MAAO,OACPH,SAAU,WACV3E,OAAQ,EACRD,eAAgB,UAChB,SACF,eAAC0E,GAAA,QAAgB,CACfvE,QAAS,WACPqe,EAAoBD,EAAgBlqB,mBAEtC2hB,YACE,aAoBD,SACD,gBAAC4G,GAAA,QAAI,CACHwB,sBAAoB,EACpBC,cAAe,EACfxe,MAAO,CACLkC,MAAOmb,SAASnb,EAAMzN,MAAM,GAAI,IAAM,QAAU,QAAU,QAC1DmR,SAAU,GACVyO,iBAAkB,EAClBvO,UAAW,UACX,UACDjV,EAAK,GAAG,IAAEA,EAAK,GACf,KACAA,EAAK,GACL+tB,EAASG,cAAgB,MAAQH,EAASG,cAAgB,IAAM,WAlDhEH,EAAS3S,K,qkBC8PL+S,8BAzQf,SAAyB,GAAsB,IAApBC,EAAG,EAAHA,IAAKlf,EAAU,EAAVA,WAC9B,EAAkCW,oBAAS,GAAM,WAA1CwW,EAAS,KAAE3B,EAAY,KACxB2J,EAAgBre,iBAAO,MAEvB3P,EAAU0O,GAAenN,GACzBpB,EAAWuO,GAAetN,GAC1BwH,EAAU8F,IAAe,SAAC/N,GAAK,OAAKA,EAAMU,QAAQoK,WAAW7C,WAC7DH,EAAgBiG,IACpB,SAAC/N,GAAK,OAAKA,EAAMU,QAAQoK,WAAWhD,iBAGhCqL,EAAkB3T,EAAW4tB,EAAIjf,MAAMmf,KAAOF,EAAIjf,MAAMof,MAEhDC,EAAyBjmB,GAA0B,CAC/DlI,UACAsD,iBAAkBmF,EAAcnF,mBAF1BsT,KAcR,SAASwX,EAAgB9P,GACvB,OAAKA,EAAKmO,WAAgC,KAAnBnO,EAAKmO,WAAuC,OAAnBnO,EAAKmO,UAInD4B,EAAoB/P,EAAKmO,WACzB,MACA4B,EAAoB/P,EAAKoO,SACzB,KANO,SAUX,SAAS2B,EAAoB/P,GACP,IAAhBA,EAAKrb,SACPqb,EAAO,IAAMA,GAEf,IAAIyN,EAAQzN,EAAK/a,MAAM,EAAG,GACtByoB,EAAU1N,EAAK/a,MAAM,EAAG,GACxB0oB,EAAOC,OAAOC,SAASJ,GAAS,GAAK,KAAO,KAMhD,OAJc,KADdA,GAAgB,MAEdA,EAAQ,GACRE,EAAO,MAEFF,EAAQ,IAAMC,EAAUC,EAjCjCjc,qBAAU,WACS,MAAbge,KAAe/d,SACjB+d,EAAc/d,QAAQqe,SAAS,CAC7BC,EAAG,EACHC,UAAU,MAGb,CAAC/lB,IA6BJ,IAAMgmB,EACJ,eAAC,SAAK,CACJnK,QAAS0B,EACTzB,cAAezR,GAAO2R,SACtB3V,MAAO,CAAEkF,MAAO,OAChB0Q,gBAAiB,kBAAML,GAAa,IAAO,SAC3C,gBAAC,QAAI,CAACpT,UAAU,EAAK,UACnB,eAAC,QAAI,CAACnC,MAAO,CAAE4F,SAAU,GAAIlE,WAAY,EAAG4P,cAAe,IAAK,SAAC,4WAQjE,eAAC,UAAM,CAAChR,QAAS,kBAAMiV,GAAa,IAAO,SAAC,iBAKlD,OAAK5b,EAAc+B,MAKjB,gBAACuN,GAAA,QAAU,CACTuL,sBAAuB,CAAEjO,UAAW,SAAUjB,SAAU,KACxDtF,MAAOgF,EACPnD,IAAKqd,EAAc,UACnB,gBAAC,UAAM,CAAClf,MAAO,CAAC,CAAEE,WAAY,UAAY8E,GAAiB,UACzD,eAAC,QAAI,CAAChF,MAAOgE,GAAO2B,MAAM,SAAEhM,EAAc8B,aAC1C,eAAC,QAAI,CAACuE,MAAO,CAAE0B,WAAY,IAAK,SAAE/H,EAAcnF,mBAEhD,eAAC,QAAI,CAACwL,MAAOgE,GAAO4b,SAAS,SACvBjmB,EAActF,WAAU,qBAC1ByF,EAAQC,MACJJ,EAAckmB,eACdlmB,EAAcmmB,gBAGrBnmB,EAAcomB,qBACb,gBAAC,UAAM,CACL/f,MAAO,CACL,CACEiG,cAAe,MACf/F,WAAY,aACZ2J,aAAc,GAEhB7E,GACA,UACF,eAAC,QAAI,CAAChF,MAAOgE,GAAO4b,SAAS,SAAC,wBAC9B,eAAC,QAAI,CAAC5f,MAAO,CAAE4F,SAAU,GAAIoa,WAAY,IAAK,SAAC,MAC/C,gBAAC,QAAI,CAAChgB,MAAOgE,GAAO4b,SAAS,UAAC,KACzBjmB,EAAcomB,oBAAoB,eAI1CpmB,EAAcsmB,cACb,gBAAC,UAAM,CACLjgB,MAAO,CACL,CACEiG,cAAe,MACf/F,WAAY,aACZ2J,aAAc,GAEhB7E,GACA,UACF,eAAC,QAAI,CAAChF,MAAOgE,GAAO4b,SAAS,SAAC,kBAC9B,eAAC,QAAI,CAAC5f,MAAO,CAAE4F,SAAU,GAAIoa,WAAY,IAAK,SAAC,MAC/C,gBAAC,QAAI,CAAChgB,MAAOgE,GAAO4b,SAAS,UAAC,KAAGjmB,EAAcsmB,mBAGlDtmB,EAAcnC,YACb,gBAAC,UAAM,CACLwI,MAAO,CACL,CACEiG,cAAe,MACf/F,WAAY,aACZ2J,aAAc,GAEhB7E,GACA,UACF,eAAC,QAAI,CAAChF,MAAOgE,GAAO4b,SAAS,SAAC,yBAC9B,eAAC,QAAI,CAAC5f,MAAO,CAAE4F,SAAU,GAAIoa,WAAY,IAAK,SAAC,MAC/C,gBAAC,QAAI,CAAChgB,MAAOgE,GAAO4b,SAAS,UAAC,KACzBjmB,EAAcnC,WAAW,aAIjCmC,EAActC,QACb,gBAAC,UAAM,CACL2I,MAAO,CACL,CACEiG,cAAe,MACf/F,WAAY,aACZ2J,aAAc,GAEhB7E,GACA,UACF,eAAC,QAAI,CAAChF,MAAOgE,GAAO4b,SAAS,SAAC,mBAC9B,eAAC,QAAI,CAAC5f,MAAO,CAAE4F,SAAU,GAAIoa,WAAY,IAAK,SAAC,MAC/C,gBAAC,QAAI,CAAChgB,MAAOgE,GAAO4b,SAAS,UAAC,KAAGjmB,EAActC,OAAO,gBAI5D,eAAC,UAAM,CAAC2I,MAAOgF,EAAgB,SAC7B,eAAC,QAAI,CAAChF,MAAOgE,GAAOkc,kBAAkB,SAAEvmB,EAAcwmB,YAExD,gBAAC,UAAM,CAACngB,MAAK,SAAOgF,GAAoBhB,GAAOoc,OAAQ,UACrD,eAAC,QAAI,CAACpgB,MAAO,CAAE4F,SAAU,GAAIC,WAAY,QAAS,SAAC,0BAGnD,eAAC,QAAI,CAAC7F,MAAO,CAAE4F,SAAU,IAAK,SACK,KAAhCjM,EAAc0mB,cACX1mB,EAAc0mB,cACd,SAGN,eAAC,QAAI,CAACrgB,MAAO,CAAE4F,SAAU,GAAIC,WAAY,QAAS,SAAC,yBAGnD,eAAC,QAAI,CAAC7F,MAAO,CAAE4F,SAAU,IAAK,SACI,KAA/BjM,EAAc2mB,aACX3mB,EAAc2mB,aACd,YAGR,eAAC,UAAM,CAACtgB,MAAO,CAAC,CAAEE,WAAY,YAAc8E,GAAiB,UACzDrL,EAAcomB,qBACdpmB,EAAcsmB,cACdtmB,EAAcnC,YACdmC,EAActC,SACd,eAACwN,GAAA,QAAgB,CAACvE,QAAS,kBAAMiV,GAAc2B,IAAW,SACxD,gBAAC,UAAM,CACLlX,MAAO,CACL,CACEiG,cAAe,MACf/F,WAAY,aACZ2J,aAAc,GAEhB7E,GACA,UACF,eAAC,QAAI,CAAChF,MAAO,CAAE4F,SAAU,GAAIoa,WAAY,IAAK,SAAC,MAC/C,eAAC,QAAI,CAAChgB,MAAOgE,GAAOuc,WAAW,SAAC,oCAKxC,gBAAC,UAAM,CAACvgB,MAAOgF,EAAgB,UAC5BrL,EAAc+B,MAAMvH,OAAS,GAC5B,gBAAC,UAAM,CAAC6L,MAAOgF,EAAgB,UAC7B,eAAC,QAAI,CAAChF,MAAOgE,GAAOwc,UAAU,SAAC,aAC/B,gBAAC,UAAM,CAACxgB,MAAO,CAACgE,GAAOyc,QAASzb,GAAiB,UAC/C,eAAC,QAAI,CAAChF,MAAOgE,GAAO0c,WAAW,SAAC,gBAChC,eAAC,QAAI,CAAC1gB,MAAOgE,GAAO0c,WAAW,SAAC,UAChC,eAAC,QAAI,CAAC1gB,MAAOgE,GAAO0c,WAAW,SAAC,cAChC,eAAC,QAAI,CAAC1gB,MAAOgE,GAAO0c,WAAW,SAAC,SAChC,eAAC,QAAI,CAAC1gB,MAAOgE,GAAO0c,WAAW,SAAC,mBAIrC/mB,EAAc+B,MAAMtL,KAAI,SAACof,GACxB,OACE,gBAAC,UAAM,CAELxP,MAAK,IAAIgF,mBAAoBhB,GAAOyc,SAAU,UAC9C,eAAC,QAAI,CAACzgB,MAAOgE,GAAO2c,YAAY,SAAEnR,EAAKpb,aACvC,gBAAC,QAAI,CAAC4L,MAAOgE,GAAO2c,YAAY,UAC7BnR,EAAKoR,YAAY,MAAIpR,EAAKoR,YAAcpR,EAAKqR,kBAEhD,eAAC,QAAI,CAAC7gB,MAAOgE,GAAO2c,YAAY,SAAEnR,EAAKlT,gBACvC,gBAAC,QAAI,CAAC0D,MAAOgE,GAAO2c,YAAY,UAC7BrB,EAAgB9P,GAChBA,EAAKsR,cAAcpsB,KAAK,SAE3B,eAAC,QAAI,CAACsL,MAAOgE,GAAO2c,YAAY,SAC7BnR,EAAKuP,cAAgBvP,EAAKuP,cAAgB,UAZxCvP,EAAKpb,eAiBfurB,KAEkB,MAApBN,KAAsB0B,UACrB,eAAC,UAAM,CACL/gB,MAAO,CAAEI,OAAQ,IACjBE,QAAS,WACPP,EAAWyB,SAAS,eACpB,SAAC,gBAGH,KACJ,eAAC,QAAI,CAACxB,MAAOgE,GAAOwc,UAAU,SAAC,YACG,IAAjC7mB,EAAc1C,QAAQ9C,OACrB,eAAC,QAAI,CAAC6L,MAAO,CAAEuG,UAAW,SAAUP,aAAc,IAAK,SAAC,mBAIxDrM,EAAc1C,QAAQ7G,KAAI,SAACgH,EAAQmJ,GAAK,OACtC,gBAAC,QAAI,WACH,eAAC,QAAI,UAAEnJ,EAAO7B,KAAO,eAAiB6B,EAAO4pB,OAC5C5pB,EAAO6pB,WACN,eAAC,QAAI,UAAE,cAAgB7pB,EAAO6pB,cAHvB1gB,SAlLV,QA8LgC,SAACsK,GAAK,MAAM,CACrDsU,KAAM,CACJna,gBAAiB6F,EAAM,oBAEzBuU,MAAO,CACLpa,gBAAiB6F,EAAM,wBAIrB7G,GAASyB,WAAWC,OAAO,CAC/BC,MAAO,CACLC,SAAU,GACVP,UAAW,GACXQ,WAAY,QAEd+Z,SAAU,CACRha,SAAU,IAEZsb,WAAY,CACVlc,gBAAiB,QACjB9C,MAAO,OACP8H,QAAS,EACT7D,YAAa,IAEfgb,aAAc,CACZnc,gBAAiB,MACjB9C,MAAO,OACP8H,QAAS,EACT7E,aAAc,GAEhB2S,OAAQ,CACN5X,WAAY,UAEdkhB,QAAS,CACPnb,cAAe,MACf+D,QAAS,GACT9J,WAAY,SACZC,eAAgB,cAElB+f,kBAAmB,CACjBrW,aAAc,GACdD,YAAa,GACblI,WAAY,GACZ4P,cAAe,EACf1L,SAAU,IAEZyb,cAAe,CACbpJ,eAAgB,EAChBqJ,eAAgB,QAChBrb,cAAe,MACf2K,SAAU,OACVzQ,eAAgB,eAChB6J,QAAS,GACTtI,WAAY,GACZ4P,cAAe,IAEjB8O,MAAO,CACLlgB,WAAY,SACZE,OAAQ,EACRgG,YAAa,QACbC,YAAa,EACb2D,QAAS,GAEXuX,cAAe,CACbrc,MAAO,IACPE,OAAQ,IACR1D,WAAY,KAEd8f,WAAY,CACV5b,SAAU,GACV1D,MAAO,QACP8H,QAAS,GACTlE,UAAW,UAEb2b,SAAU,CACR7X,YAAa,GACblI,WAAY,IAEdggB,WAAY,CACVxc,MAAO,OACPyc,YAAa,EACbzO,WAAY,WAEd0O,MAAO,CACLhc,SAAU,GACVC,WAAY,OACZ3D,MAAO,SAET2f,WAAY,CACVjc,SAAU,GACVmO,UAAW,UAEb+N,UAAW,CACT5c,MAAO,MACP8E,QAAS,GACT3D,YAAa,EACbD,YAAa,QACbjB,aAAc,EACda,aAAc,IAEhBya,QAAS,CACPxa,cAAe,MACf2D,YAAa,EACbmY,kBAAmB,EACnB5hB,eAAgB,SAChBD,WAAY,UAEdwgB,WAAY,CACV7a,WAAY,OACZD,SAAU,GACV3F,KAAM,GAER0gB,YAAa,CACX1gB,KAAM,GAERsgB,WAAY,CACV3a,SAAU,GACVmO,UAAW,UAEb4B,SAAU,CACR3Q,gBAAiB,sBAEnBiF,MAAO,CACL7E,OAAQ,GACRhF,OAAQ,GACRiG,YAAa,EACb2D,QAAS,IAEXpB,cAAe,CACbxD,OAAQ,GACRhF,OAAQ,GACRiG,YAAa,GAEf2b,cAAe,CACb5c,OAAQ,GACRgP,eAAgB,GAChB/N,YAAa,EACb2D,QAAS,GACT7D,YAAa,GACbD,WAAY,IAEd3Q,KAAM,CACJqQ,SAAU,GACVoa,WAAY,GACZna,WAAY,OACZoc,cAAe,IACf/f,MAAO,SAETse,UAAW,CACT5a,SAAU,GACVgE,YAAa,GACb0H,cAAe,GACf5P,WAAY,GACZmE,WAAY,UChbHqc,GAAoB,CAC/B,CACEtb,MAAO,YACPrW,GAAI,YACJ4xB,WAAW,EACX/U,KAAM,UAER,CACExG,MAAO,QACPrW,GAAI,QACJ6c,KAAM,WACN+U,WAAW,EACXjX,QAAS,CACP,CACEtE,MAAO,KACPrW,GAAI,KAEN,CACEqW,MAAO,IACPrW,GAAI,KAEN,CACEqW,MAAO,KACPrW,GAAI,KAEN,CACEqW,MAAO,KACPrW,GAAI,KAEN,CACEqW,MAAO,IACPrW,GAAI,KAEN,CACEqW,MAAO,KACPrW,GAAI,KAEN,CACEqW,MAAO,KACPrW,GAAI,KAEN,CACEqW,MAAO,IACPrW,GAAI,KAEN,CACEqW,MAAO,KACPrW,GAAI,KAEN,CACEqW,MAAO,KACPrW,GAAI,KAEN,CACEqW,MAAO,IACPrW,GAAI,KAEN,CACEqW,MAAO,KACPrW,GAAI,KAEN,CACEqW,MAAO,KACPrW,GAAI,KAEN,CACEqW,MAAO,IACPrW,GAAI,KAEN,CACEqW,MAAO,KACPrW,GAAI,OAIV,CACEqW,MAAO,8BACPrW,GAAI,YACJ4xB,WAAW,EACX/U,KAAM,W,qkBC9DK,SAASgV,GAAU,GAAiB,IAAfriB,EAAU,EAAVA,WAClC,EAAwBW,mBAAS,IAAG,WAA7B/K,EAAI,KAAE0sB,EAAO,KACdnxB,EAAU0O,GAAenN,GACzBpB,EAAWuO,IAAe,SAAC/N,GAAK,OAAKA,EAAMU,QAAQC,OAAOnB,YAC1DsI,EAAgBiG,IACpB,SAAC/N,GAAK,OAAKA,EAAMU,QAAQoK,WAAWhD,iBAEtC,EAAoCN,KAAuB,WAApDN,EAAU,KAAI+H,EAAS,KAATA,UAEf+J,EAAQC,sBAER9F,EAAkB3T,EACpBwZ,EAAM,mBACNA,EAAM,mBAEJ3I,EAAQ7Q,EAAWwZ,EAAM,mBAAqBA,EAAM,mBAEpDyX,EAAqB,sBAAG,YAC5B,UACQvpB,EAAW,CACfpD,KAAK,SACAA,GAAI,IACPnB,iBAAkBmF,EAAcnF,mBAElCtD,YACCqQ,SACH6U,WAAM3U,MACJ,mBAAmB,mBACA9H,EAAc8B,WAAU,kEAC3C,CACE,CACElG,KAAM,KACN+K,QAAS,WACPP,EAAW4G,aAKnB,MAAO/C,GACPwS,WAAM3U,MACJ,QAAQ,sEAGV7M,QAAQC,KAAK,4BAA6B+O,OAE7C,kBA5B0B,mCA6J3B,OACE,gBAACqF,GAAA,QAAU,CAACjJ,MAAO,CAAEgF,mBAAkB,UACrC,gBAAC,UAAM,CAAChF,MAAK,IAAIgF,mBAAoBhB,GAAOC,WAAY,UACtD,eAAC,UAAM,CAACjE,MAAO,CAAEgF,mBAAkB,SAlIzC,SAAkCpP,GAChC,IAAM2sB,EAAc,SAACC,EAAUC,GAC7B,IAAIC,EAAU/sB,EACd,IAAK,IAAMgtB,KAAUD,EAEG,OAApBA,EAAQC,SACYvS,IAApBsS,EAAQC,IACY,KAApBD,EAAQC,WAEDD,EAAQC,QAGFvS,IAAboS,EACFE,EAAQD,GAAiBD,EAErBE,EAAQD,WACHC,EAAQD,GAGnBJ,EAAQK,IAsBNnF,EAAQ,GA4CZA,EAAM5oB,KACJ,eAAC,SAAK,CAEJgN,eAAgB,YAChBG,aAAc,SAAC0gB,GAAQ,OAAKD,EAAYC,EAAU,SAClDxiB,MAAK,SAAOgE,GAAO4e,UAAQ,IAAE5d,kBAAiB9C,UAC9CwU,WAAW,EACXjS,qBAAsBpT,EAAWwZ,EAAM,mBAAqB,OAC5DjJ,YAAa,2BANR,gBAST,IADE,kBAEA,IAAMwL,EAAOxX,EAAO4c,GAAGpF,KACV,WAATA,EACFmQ,EAAM5oB,KACJ,eAAC,SAAK,CAEJgN,eAAgB,QAChBkhB,gBAAiB,SACjB/gB,aAAc,SAAC0gB,GAAQ,OAAKD,EAAYC,EAAU5sB,EAAO4c,GAAGjiB,KAC5DyP,MAAK,SAAOgE,GAAOiG,OAAK,IAAEjF,kBAAiB9C,UAC3CuC,qBAAsBpT,EAAWwZ,EAAM,mBAAqB,OAC5DjJ,YACEhM,EAAO4c,GAAG2P,UACNvsB,EAAO4c,GAAG5L,MAAQ,eAClBhR,EAAO4c,GAAG5L,OATX4L,IAaS,aAATpF,GACTmQ,EAAM5oB,KAxEa,SAACmuB,GACtB,MAA0CpiB,mBAAS,IAAI2G,aAAU,IAAG,WAA7DC,EAAa,KAAEC,EAAgB,KACtC,EAAkC7G,oBAAS,GAAM,WAA1CqiB,EAAS,KAAEC,EAAY,KA2B9B,OACE,gBAAC,UAAM,CACLhjB,MAAK,SAAOgE,GAAO4E,eAAa,IAAE5D,oBAClCpN,MA5BJ,WACE,OACE,gBAAC,QAAI,WACDmrB,EAIED,EAAM5X,QAAQ5D,EAAc0B,IAAM,GAAGpC,MAHrC,UACAkc,EAAMlc,OACLkc,EAAMX,UAAY,eAAiB,IACQ,MALvC,iBA2BX7a,cAAeA,EACfwB,SAlBJ,SAAyBvI,GACvBgH,EAAiBhH,GACjBgiB,EACgB,IAAdhiB,EAAMyI,SAAYoH,EAAY0S,EAAM5X,QAAQ3K,EAAMyI,IAAM,GAAGzY,GAC3DuyB,EAAMvyB,IAEU,IAAdgQ,EAAMyI,IACRga,GAAa,GAEbA,GAAa,IASa,UAC1B,eAAC,cAAU,CAACrd,MAAO,MAClBmd,EAAM5X,QAAQ9a,KAAI,WAAYmQ,GAAK,IAAdqG,EAAK,EAALA,MAAK,OACzB,eAAC,cAAU,CAACjB,MAAOiB,GAAYrG,SAmCxB0iB,CAAertB,EAAO4c,MAnB5BA,EAAI,EAAGA,EAAI5c,EAAOzB,OAAQqe,IAAG,KAuBtC,OACE,gBAAC,UAAM,CAACxS,MAAO,CAAEgF,mBAAkB,UAnGN,SAACpP,GAC9B,OAAsB,IAAlBA,EAAOzB,OACF,KAGP,eAAC,UAAM,CAAC6L,MAAO,CAAEiG,cAAe,MAAOjB,mBAAkB,SACvD,eAAC,QAAI,CACHhF,MAAO,CACL4F,SAAU,GACVgE,YAAa,GACb0H,cAAe,EACf5P,WAAY,EACZwhB,aAAc,SACdrd,WAAY,QACZ,SAAC,qBAsFNsd,CAAuBvtB,GACxB,eAAC,UAAM,CAACoK,MAAO,CAAEgF,mBAAkB,SAAEuY,OASlC6F,CAAyBxtB,MAE5B,eAAC,UAAM,CAACoK,MAAO,CAAEI,OAAQ,IAAME,QAASgiB,EAAsB,SAAC,mBAIhExhB,EACC,eAAC,UAAM,CACLd,MAAO,CACLgF,gBAAiB,cACjBD,SAAU,WACVsV,MAAO,MACPlR,IAAK,OACL,SACF,eAAC,WAAO,MAER,QAKV,IAAMnF,GAASyB,WAAWC,OAAO,CAC/BuE,MAAO,CACL7E,OAAQ,GACRhF,OAAQ,GACR4J,QAAS,GACT5D,YAAa,UACbjB,aAAc,EACdkB,YAAa,GAEfuc,SAAU,CACRxd,OAAQ,IACRhF,OAAQ,GACR4J,QAAS,GACT5D,YAAa,UACbjB,aAAc,EACdkB,YAAa,GAEfuC,cAAe,CACbxD,OAAQ,GACRhF,OAAQ,IAEV4hB,cAAe,CACb5c,OAAQ,GACRgP,eAAgB,GAChBpK,QAAS,GACT7D,YAAa,GACbD,WAAY,IAEd3Q,KAAM,CACJqQ,SAAU,GACVoa,WAAY,GACZna,WAAY,OACZoc,cAAe,KAEjBhe,UAAW,CACThE,KAAM,GAGR6X,OAAQ,CACNzS,UAAW,GACXnF,WAAY,SACZC,eAAgB,SAChB+E,MAAO,QAETme,QAAS,CACPnjB,WAAY,SACZE,OAAQ,GACR4J,QAAS,IAEXsZ,MAAO,CACLje,UAAW,GACXke,QAAS,OACTpjB,eAAgB,cAElBwF,MAAO,CACLC,SAAU,GACVM,WAAY,IAEd7B,KAAM,CACJa,MAAO,OACPE,OAAQ,KAEVoe,gBAAiB,CACfte,MAAO,OACP/E,eAAgB,SAChBD,WAAY,SACZmF,UAAW,GACXW,aAAc,IAEhByd,OAAQ,CACNve,MAAO,IACPE,OAAQ,KAEVse,aAAc,CACZzd,cAAe,MACf2K,SAAU,OACVxQ,OAAQ,GACR4F,aAAc,GAEhB2d,WAAY,CACVze,MAAO,IACPE,OAAQ,IACR1D,WAAY,IACZtB,OAAQ,GAEVsgB,WAAY,CACV9a,SAAU,GACVC,WAAY,UC5SVvD,GAAQC,qBAEC,SAASqhB,GAAgB,GAAgB,EAAdC,eACxC,OACE,gBAAC,GAAMphB,UAAS,WACd,eAAC,GAAMG,OAAM,CACXnR,KAAK,WACLoR,UAAWihB,GACX5Y,QAAS,CAAEvF,MAAO,MAEpB,eAAC,GAAM/C,OAAM,CACTnR,KAAK,aACLoR,UAAWkhB,GACX7Y,QAAS,CAAEvF,MAAO,mBCcb,SAASqe,GAAa,GAAiB,IAAD,EAAdjkB,EAAU,EAAVA,WAC/BnC,EAAagC,IACjB,SAAC/N,GAAK,OAAKA,EAAMU,QAAQyM,SAASpB,cAE9BzF,EAAWuH,KACXmkB,EAAiBhjB,iBAAoB,MACrCxP,EAAoBuO,GAAetN,GACnC0rB,EAAc,IAAIhB,GAClBiH,GAAiBtR,WAAWC,IAAI,UAAU1N,MAAQ,IAAM,EACxDgf,GAAgBvR,WAAWC,IAAI,UAAU1N,MAAQ,IAAM,EACvDuZ,EAAO,CACX,CAAE0F,IAAK,MAAO5zB,GAAI,UAClB,CAAE4zB,IAAK,OAAQ5zB,GAAI,WACnB,CAAE4zB,IAAK,MAAO5zB,GAAI,aAClB,CAAE4zB,IAAK,QAAS5zB,GAAI,YACpB,CAAE4zB,IAAK,MAAO5zB,GAAI,UAClB,CAAE4zB,IAAK,MAAO5zB,GAAI,YAClB,CAAE4zB,IAAK,MAAO5zB,GAAI,WA6BN+f,EAAana,EAAoByJ,GAAenN,IAAtDqV,KACJ5T,EAAuB,MAARoc,GAAsB,OAAd,EAARA,EAAUpc,mBAAF,EAAR,EAAwBF,QACrC6pB,EAAeje,GAAelD,IACpC,EACE1D,KADYU,EAAc,EAApBoO,KAGFsc,GAH0D,EAAlCtjB,UAGH,SAACujB,GAC1B,IAAIC,EAAc,GAClB,IAAKhU,EAASiU,aACZ,OAAO,KAET,IAAK,IAAMxG,KAASzN,EAASiU,aACvBxG,EAAMU,KAAKjiB,SAAS6nB,EAAK9zB,KAC3B+zB,EAAY3vB,KAAKmpB,GAAkBC,IAGvC,OAAOuG,IAGH3F,EAAsB,SAACvqB,GAInB,IAAD,GAHP+D,EAASyC,GAAcxG,IACH,QAAhB+J,UAASC,IACX2B,EAAWyB,SAAS,mBAEE,OAAtB,EAAAqiB,EAAe1iB,UAAf,EAAwBqjB,YAAY,IAIxC,SAASC,IAEP,IADA,IAAIlH,EAAQ,GACH/K,EAAI,EAAGA,EAAI,GAAIA,IACtB+K,EAAM5oB,KACJ,eAACmoB,GAAA,QAAI,CACH9c,MAAO,CACLkF,MAAqD,QAA7CtH,EAAaqmB,EAAgBC,GACrChe,WAA0D,QAA7CtI,EAAaqmB,EAAgBC,GAC1C/a,IAAK,KAAOqJ,EACZzN,SAAU,WACVK,OAAQ,KACR2c,kBAAmB,GACnB2C,kBAAmBrzB,EAAW,gBAAkB,uBAKxD,OAAOksB,EAGT,IAAMoH,EAAgB,SAACN,GACrB,IAAIrwB,EAAU,GAwBd,OAvBAjD,OAAOD,KAAKoD,GAAc9D,KAAI,SAACkN,GACzBA,IAAS5D,GACX3I,OAAOD,KAAKoD,EAAaoJ,IAAOlN,KAAI,SAACoE,GAAsB,IAAD,cAEtD,IACE,IAAIsT,EAAOkW,EAAY4G,iBAAiBxwB,EAAYypB,GAChDgH,EAAQ/c,EAAKpM,MAAMmjB,MACrB,SAACrP,GAAI,OAAKA,EAAKpb,aAAeA,KAEhC,IAAK,IAAM+vB,KAAOU,EAAqB,cACjCA,EAAqB,cAAEV,KAASE,EAAK9zB,IACvCyD,EAAQW,KACNuf,GAAWpM,EAAM1T,EAAYuqB,IAInC,MAAOhuB,GACPiE,QAAQ+b,IAAIhgB,KAdhB,IAAK,IAAMyD,KAAcF,EAAaoJ,GAAM9I,GAAiB,WAoB5DR,GAGH8wB,EAASjkB,iBAAO,MACtB,EAA4CH,mBAAS,CAAEqkB,EAAG,EAAGtF,EAAG,MAAM,WAA/DuF,EAAc,KAAmB,KAExC,OACE,gBAAClI,GAAA,QAAI,CAAC9c,MAAO,CAAEC,KAAM,GAAI,UAEvB,eAACgJ,GAAA,QAAU,CACTgc,YAAY,EACZC,eAAgBtnB,EAAaqmB,EAAgBC,EAC7CiB,gCAAgC,EAChCnlB,MAAO,CAAEkG,WAAY,IACrBrE,IAAKijB,EAAO,SACZ,eAAChI,GAAA,QAAI,CAAC9c,MAAO,CAAEiG,cAAe,OAAQ,SACnCwY,EAAKruB,KAAI,SAACi0B,GACT,OACE,eAACvH,GAAA,QAAI,UACH,eAACA,GAAA,QAAI,CACH9c,MAAO,CACLoG,YAAa/U,EAAW,UAAY,UACpC0wB,kBAAmB,EACnB7c,MAAO,QACP,SACF,eAAC6X,GAAA,QAAI,CACH/c,MAAO,CACL8F,UAAW,SACX5D,MAAO7Q,EAAW,UAAY,UAC9B6T,MAAOtH,EAAaqmB,EAAgBC,GACpC,SACDG,EAAKF,iBAQpB,eAAClb,GAAA,QAAU,CACTmc,cAAeJ,EACf7P,8BAA8B,EAC9BkQ,SAAS,EAAM,SACf,gBAACvI,GAAA,QAAI,CAAC9c,MAAO,CAAEiG,cAAe,OAAQ,UACpC,eAAC6W,GAAA,QAAI,CACH9c,MAAO,CACLG,eAAgB,eAChBiF,OAAQ,KACR,SApJE,CACZ,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,YA6HehV,KAAI,SAACof,GACV,OACE,eAACuN,GAAA,QAAI,CACH/c,MAAO,CACL0B,WAAY,MACZ0D,OAAQ,GACRF,MAAO,GACPmB,YAAa,EACbD,YAAa/U,EAAW,UAAY,UACpCyU,UAAW,SACX5D,MAAO7Q,EAAW,UAAY,WAC9B,SACDme,SAMT,eAACvG,GAAA,QAAU,CACTgc,YAAY,EACZC,eAAgBtnB,EAAaqmB,EAAgBC,EAC7CoB,iBAAkB,SAClBH,gCAAgC,EAChCE,SAAS,EACTE,oBAAqB,EACrBC,SAAU,SAAC70B,GAAC,OACVm0B,EAAO3jB,QAAQqe,SAAS,CACtBuF,EAAGp0B,EAAE80B,YAAYL,cAAcL,EAC/BrF,UAAU,EACVgG,iBAAiB,KAGrBC,sBAAuB,SAACh1B,GAAC,OACvBm0B,EAAO3jB,QAAQqe,SAAS,CACtBuF,EAAGp0B,EAAE80B,YAAYL,cAAcL,EAC/BrF,UAAU,EACVgG,iBAAiB,KAEpB,SACD,eAAC5I,GAAA,QAAI,CAAC9c,MAAO,CAAEiG,cAAe,OAAQ,SACnCwY,EAAKruB,KAAI,SAACi0B,GACT,OACE,gBAACvH,GAAA,QAAI,WACF2H,IACD,gBAAC3H,GAAA,QAAI,CAEH9c,MAAO,CACLkF,MAAOtH,EAAaqmB,EAAgBC,GACpC,WACO,MAAR5T,OAAQ,EAARA,EAAUpc,eAAgBywB,EAAcN,IAChC,MAAR/T,OAAQ,EAARA,EAAUpc,eAAgBkwB,EAAmBC,KALzCA,EAAKF,KAOZ,eAACrH,GAAA,QAAI,CACH9c,MAAO,CACLoF,OAAQ,OACRF,MAAO,EACPF,gBAAiB3T,EAAW,UAAY,4BAWzC,QAAhB8M,UAASC,IACR,eAAC,GAAe,CAACylB,eAAgBA,OAMzC,IC/Qa+B,GAAW,gC,UCQT,SAASC,GAAYtQ,EAAc2B,GAC9C,IAAa5G,EAAYna,EAAoByJ,GAAenN,IAArDqV,KACMpO,EAAkBV,KAAxB8O,KACDzW,EAAWuO,GAAetN,GAC1BpB,EAAU0O,GAAenN,GAC/B,EAA4BiO,mBAAS,IAAG,WAAhColB,EAAK,KAAEC,EAAQ,KACvB,EAA4BrlB,mBAAS,IAAG,WAAhCslB,EAAK,KAAEC,EAAQ,KACvB,EAA4BvlB,mBAAS,IAAG,WAAhC9I,EAAK,KAAEsuB,EAAQ,KACvB,EAAoCxlB,oBAAS,GAAM,WAAhCsiB,GAAF,KAAc,MAC/B,EAAoCtiB,mBAAS,MAAK,WAA1CylB,EAAS,KAAEC,EAAY,KAEzB1Q,EAAW,CACb2Q,MAAO,CACHzgB,SAAU,GAAI0L,cAAe,GAAIzL,WAAY,OAC7CC,UAAW,SAAUZ,MAAO,OAAQhD,MAAO7Q,EAAW,mBAAqB,cAE/EskB,SAAU,CACN3Q,gBAAiB3T,EAAW,wBAA0B,sBAE1DuX,cAAe,CACXyB,SAAU,IACViH,cAAe,KAIvBpQ,qBAAU,WACNwC,MAAMkiB,GAAW,2BAA4B,CACzCxwB,OAAQ,MACRtB,QAAS,CACL,eAAgB,mBAChB,QAAW5C,KAEhByS,KAAK,WAAD,WAAC,UAAOmE,GACX,GAAIA,EAAKwe,GAAI,CACT,IAAMC,QAAiBze,EAAK0e,OAC5BT,EAASQ,EAASn2B,KAAI,SAAAq2B,GAClB,GAAIA,EACA,OAAOA,EAAKC,SAAW,KAAOD,EAAKzxB,SAAW,QAGtDixB,EAASM,OAEhB,mDAVO,MAWT,IACH,IAoEMI,EAAc,sBAAG,UAAOR,GAAe,IAAD,EA8BxC,aAbmBziB,MAAMkiB,GAAW,0BAA2B,CAC3DxwB,OAAQ,OACRtB,QAAS,CACL,eAAgB,mBAChB,QAAW5C,GAEfyE,KAAMixB,KAAKC,UAAU,CACjBC,WAAY,CAACX,GACb5wB,KAAMqxB,KAAKC,UAxBnB,SAAiB3yB,GACb,IAAIqpB,EAAQ,GAaZ,OAZAxsB,OAAOD,KAAKoD,GAAc9D,KAAI,SAACkN,GACvBA,IAAS5D,GACT3I,OAAOD,KAAKoD,EAAaoJ,IAAOlN,KAAI,SAACoE,GACjC,IAAK,IAAMJ,KAAcF,EAAaoJ,GAAM9I,GACxC+oB,EAAM5oB,KAAK,CACPP,aACAC,WAAYqF,UAMzB6jB,EAUkBwJ,CAA6B,OAAtB,EAACzW,EAASpc,mBAAY,EAArB,EAAuBF,UACpD2R,MAAO2K,EAASvJ,cAAgB,cAChCigB,YAAY,OAGNV,MACjB,gBA/BmB,sCAgCpB,OACI,eAAC,SAAK,CACF9Q,QAAS0B,EACTzB,cAAeC,EAASC,SACxB3V,MAAO,CAAEkF,MAAO,MAAOE,OAAQ,OAC/BwQ,gBAAiB,kBAAML,GAAa,IAAO,SAC3C,gBAAC,QAAI,CAACpT,UAAU,EAAK,UACjB,eAAC4a,GAAA,QAAI,CAAC/c,MAAO0V,EAAS2Q,MAAM,SAAC,wBA3GT,WAgC5B,IAAMY,EAAyB,SAACx1B,EAAM6B,GAElC,YAAgB8c,IADH4V,EAAMnH,MAAK,SAAAqI,GAAK,OAAS,MAALA,OAAK,EAALA,EAAOlyB,SAASmyB,cAAc3qB,SAASlJ,EAAM6zB,kBAAuB,MAALD,OAAK,EAALA,EAAOR,YAAaj1B,MAuBxH,OACI,gBAAC,gBAAY,CACTuO,MAAO0V,EAAS9M,cAChBhR,MAAOA,EACPkK,aA7Ca,SAACxO,GAClByyB,EASOC,EAAM51B,KAAI,SAAAq2B,GACb,GAAIA,EACA,OAAOA,EAAKC,SAAW,KAAOD,EAAKzxB,SAAW,OAVrC4D,QAAO,SAAAnH,GAAI,OAChB,MAAJA,OAAI,EAAJA,EAAM01B,cAAc3qB,SAASlJ,EAAM6zB,iBAChCF,EAAuBx1B,EAAM6B,OAExC4yB,EAAS5yB,IAwCLwV,SAxBR,SAAyBvI,GACP,IAAVA,GACAyiB,GAAa,GACboD,EAAa,MAEbF,EAAS,MAETlD,GAAa,GACbkD,EAASJ,EAAMvlB,EAAQ,IACvB6lB,EAIR,SAA8B30B,GAC1B,IAAM21B,EAAW31B,EAAK2f,QAAQ,KACxBiW,EAAY51B,EAAK2f,QAAQ,KAC/B,OAAO3f,EAAKgD,MAAM2yB,EAAW,EAAGC,GAPfC,CAAqBxB,EAAMvlB,EAAQ,OAetB,UAC1B,eAAC,oBAAgB,CAACoF,MAAO,MA5DjC,WACI,IAAI4X,EAAQ,GACZ,IAAK,IAAMgK,KAAUzB,EACjBvI,EAAM5oB,KACF,eAAC,oBAAgB,CACbgR,MAAOmgB,EAAMyB,IACRA,IAIjB,OAAOhK,EAmDFiK,MA+CAC,GACD,gBAAC3K,GAAA,QAAI,WACD,eAAC4K,GAAA,QAAM,CAACvlB,SAAwB,OAAdgkB,EAAoBxgB,MAAO,OAAQrF,QAAS,WAC1DqmB,EAAeR,GAAWxiB,MAAK,SAACgkB,GAC5BpS,GAAa,GACboS,EAAcvR,WAAM3U,MAAM,gBACtB2U,WAAM3U,MAAM,wBAAyB,gCAGjD,eAACimB,GAAA,QAAM,CAAC/hB,MAAO,UAAWrF,QAAS,WAC/BiV,GAAa,c,6OClKtB,SAASqS,GAAe,GAKd,IAJvB7V,EAAQ,EAARA,SACA8V,EAAe,EAAfA,gBACAC,EAAkB,EAAlBA,mBACAniB,EAAK,EAALA,MAEMkF,EAAQC,sBACRzZ,EAAWuO,GAAetN,GAEhC,OACE,eAAC,WAAK,CACJy1B,gBAAiB,EACjBnS,gBAAiB,kBAAMkS,GAAmB,IAC1CE,UAAWH,EACX7nB,MAAO,CACLgF,gBAAiB3T,EACbwZ,EAAM,mBACNA,EAAM,kBACV1F,aAAc,GACdlF,KAAM,EACNoF,UAAW,IACXW,aAAc,GACdgU,YAAa,OACbC,aAAc,CACZ/U,MAAO,EACPE,OAAQ,IAEV8U,cAAe,IACfC,aAAc,GAEdC,UAAW,IACX,SACF,gBAAC,UAAM,CACLpa,MAAO,CACLC,KAAM,EACNC,WAAY,SACZiF,aAAc,GACdH,gBAAiB3T,EACbwZ,EAAM,mBACNA,EAAM,oBACV,UACF,eAAC,UAAM,CACLyJ,WAAW,QACXtU,MAAO,CACL+E,SAAU,WACVoE,IAAK,EACLkR,MAAO,EACPpa,KAAM,EACNkF,aAAc,IAEhB/C,eAAgB,SAACqE,GAAK,OACpB,eAAC,Q,mWAAI,EAAC8N,KAAK,cAAc9iB,KAAK,cAAiBgV,KAEjDnG,QAAS,kBAAMwnB,GAAmB,MAEpC,eAAC,QAAI,CAACznB,SAAS,KAAKL,MAAO,CAAEoU,eAAgB,IAAK,SAC/CzO,IAEFoM,OCrDT,IAAMzP,GAAQC,qBAEC,SAAS0lB,KACtB,IAAMrqB,EAAagC,IACjB,SAAC/N,GAAK,OAAKA,EAAMU,QAAQyM,SAASpB,cAE9BzF,EAAWuH,KACXvO,EAAUyO,GAAelN,GACzBrB,EAAWuO,GAAetN,GAEhC,GADgBsN,GAAenN,GACGiO,oBAAS,IAAM,WAA1CwW,EAAS,KAAE3B,EAAY,KAC5B,EAA4C7U,oBAAS,GAAM,WAApDwnB,EAAc,KAAEC,EAAiB,KAW1C,IAAM9c,EACJ,eAAClH,GAAA,QAAK,CACJnE,MAAO,CACLoF,OAAQ,GACRF,MAAO,GACPhF,WAAY,UAEdkE,OAAQrB,EAAQ,OAIdX,EACJ,gBAAC0a,GAAA,QAAI,CACH9c,MAAO,CACLsJ,kBAAmB,GACnBpJ,WAAY,SACZ+F,cAAe,OACf,UAeF,eAACpB,GAAA,QAAgB,CACfvE,QAAS,WACPnI,EAAS2F,IAAeF,KAE1BoC,MAAO,CACLE,WAAY,SACZ2J,aAAc,IACd,SACD8I,WAAWC,IAAI,UAAU1N,MAAQ,KAChC,eAACqM,GAAA,QAAY,CACX9f,KAAMmM,EAAa,eAAiB,cACpCmT,KAAM,GACN7O,MAAO7Q,EAAW,QAAU,YAIlC,eAACwT,GAAA,QAAgB,CACfvE,QAAS,WACDnP,EACAg3B,GAAkB,GAElB5S,GAAa,IAGrBvV,MAAO,CACLE,WAAY,UACZ,SACF,eAACqR,GAAA,QAAY,CACX9f,KAAM,cACNsf,KAAM,GACN7O,MAAO7Q,EAAW,QAAU,YAI1B62B,GACA,eAACN,GAAc,CACXjiB,MAAM,QACNoM,SAAU,eAAC,QAAI,CAAC/R,MAAO,CAACsJ,kBAAmB,IAAI,SAAC,oHAChDue,gBAAiBK,EACjBJ,mBAAoBK,IAG7BtC,GAAYtQ,EAAc2B,MAG/B,OACE,gBAAC,GAAMzU,UAAS,WACd,eAAC,GAAMG,OAAM,CACXnR,KAAK,eACLoR,UAAWmhB,GACX9Y,QAAS,CACP4M,OAAQ,WACN,OACE,eAAC,UAAM,CAAC9X,MAAO,CAAEsR,cAAe,IAAK,SACnC,eAAClG,GAAM,CACLC,cAAeA,EACfjJ,eAAgBA,EAChBuD,MAAM,mBAOlB,eAAC,GAAM/C,OAAM,CACXnR,KAAK,oBACLoR,UAAWga,GACX3R,QAAS,CAAEvI,aAAa,KAET,QAAhBxE,UAASC,IACR,eAAC,GAAMwE,OAAM,CACXnR,KAAK,kBACLoR,UAAW+gB,GACX1Y,QAAS,CAAEvI,aAAa,EAAOga,YAAa,oB,wBC9IvC,SAASyL,GAAQ,GAAkB,IAAhBziB,EAAK,EAALA,MAAOwO,EAAI,EAAJA,KACvC,OACE,gBAAC,UAAM,CACLnU,MAAO,CACLC,KAAM,EACNoF,UAAW,GACXnF,WAAY,SACZ8E,gBAAiB,eACjB,UACF,eAAC,QAAI,CAAChF,MAAO,CAAEI,OAAQ,GAAI8B,MAAO,QAAS,SAAEyD,IAC5CwO,K,sBCHQ,SAASkU,GAAkB,GAStC,IARFj0B,EAAU,EAAVA,WACAysB,EAAc,EAAdA,eACAD,EAAW,EAAXA,YACA0H,EAAc,EAAdA,eACAC,EAAiB,EAAjBA,kBACAl3B,EAAQ,EAARA,SACAm3B,EAAK,EAALA,MACAh0B,EAAgB,EAAhBA,iBAEMi0B,EAAe5nB,iBAAO,IAAI6nB,WAASC,MAAM,IAAIxnB,QAEnD,OACE,gBAAC,UAAM,CAACnB,MAAOgE,GAAO4kB,aAAa,UACjC,eAAC,QAAI,oBAAYx0B,IACjB,gBAAC,QAAI,CACH4L,MAAO6gB,EAAiB,EAAI7c,GAAO6kB,YAAc7kB,GAAO8kB,aAAa,UACpElI,EAAY,MAAIA,EAAcC,KAGjC,eAAChc,GAAA,QAAgB,CACfkO,cAAe,EACfzS,QAAS,WACHkoB,EACFD,EAAkBn0B,EAAYI,GAE9B8zB,EAAel0B,EAAYI,GAE7Bk0B,WAASK,SAAS,CAChBL,WAASM,OAAOP,EAAc,CAC5BQ,QAAS,EACTC,MAAO,GACPxD,iBAAiB,MAElByD,OAAM,WACPT,WAASM,OAAOP,EAAc,CAC5BQ,QAAS,EACTC,MAAO,GACPxD,iBAAiB,IAChByD,YAEL,SACF,eAACT,GAAA,QAAS5L,KAAI,CACZ9c,MAAO,CACLkF,MAAO,GACPhF,WAAY,SACZkpB,UAAW,CACT,CACEC,MAAOZ,KAGX,SACF,eAAClX,GAAA,QAAY,CACXvR,MAAO,CAAEgK,QAAS,GAClB+G,KAAM,GACNtf,KAAM+2B,EAAQ,QAAU,OACxBtmB,MAAO7Q,EAAW,QAAU,iBAQxC,IAAM2S,GAASyB,WAAWC,OAAO,CAC/B4jB,gBAAiB,CACflpB,OAAQ,GACR8F,WAAY,EACZd,OAAQ,MACRF,MAAO,QAETqkB,sBAAuB,CACrBxkB,SAAU,WACVmE,OAAQ,EACRhE,MAAO,MACPskB,qBAAsB,GACtBC,wBAAyB,GACzBrjB,YAAa,UACbpB,gBAAiB,UACjBtD,WAAY,EACZuW,eAAgB,IAChB8J,kBAAmB,IACnB2H,iBAAkB,KAEpBx1B,aAAc,CACZ6Q,SAAU,WACVsV,MAAO,EACPlR,IAAK,EACLa,QAAS,EACT5J,OAAQ,EACR4E,gBAAiB,UACjBG,aAAc,KAEhBgP,KAAM,CACJnO,aAAc,GACdX,UAAW,IAEbM,MAAO,CACLC,SAAU,GACVC,WAAY,OACZG,aAAc,GAEhB2jB,gBAAiB,CACftP,MAAO,EACPtV,SAAU,WACVG,MAAO,GACPhF,WAAY,SACZC,eAAgB,SAChBiF,OAAQ,QAEV8E,OAAQ,CACNF,QAAS,EACT5D,YAAa,QAEfwjB,SAAU,CACR5kB,gBAAiB,UACjB4E,YAAa,GACb0H,cAAe,GACf5P,WAAY,IAEdknB,aAAc,CACZ3iB,cAAe,MACf9F,eAAgB,gBAChBD,WAAY,SACZkF,OAAQ,IAEVyjB,YAAa,CACX3mB,MAAO,SAET4mB,aAAc,CACZ5mB,MAAO,OAET2nB,eAAgB,CACdjkB,SAAU,GACV1D,MAAO,QACPqE,UAAW,SACXwN,UAAW,UAEb+V,sBAAuB,CACrBlkB,SAAU,GACVlE,WAAY,GACZQ,MAAO,QACPqE,UAAW,SACXV,WAAY,QAEd/L,QAAS,CACPkL,gBAAiB,QACjB9E,WAAY,SACZ8J,QAAS,MCxIE,SAAS+f,GAAK,GAWzB,IAVFtuB,EAAU,EAAVA,WACAjH,EAAgB,EAAhBA,iBACAitB,EAAQ,EAARA,SACAuI,EAAQ,EAARA,SACAC,EAAa,EAAbA,cACA54B,EAAQ,EAARA,SACAstB,EAAmB,EAAnBA,oBACA2J,EAAc,EAAdA,eACAC,EAAiB,EAAjBA,kBACA2B,EAAM,EAANA,OAuFA,OAnFqBC,mBAAQ,WAC3B,OACE,eAAC,UAAM,CACLnqB,MAAO,CACLmF,aAAc,GACd2L,QAAS,EACTzL,UAAW,EACXc,YAAa,EACbD,WAAY,GACZ,SAEF,gBAAC,UAAM,CAAClG,MAAO,CAAEqU,iBAAkB,IAAK,UACtC,gBAAC,UAAM,CAACrU,MAAO,CAAEoF,OAAQ,IAAK,UAC5B,eAACP,GAAA,QAAgB,CACfvE,QAAS,WACPqe,EAAoBnqB,IACpB,SACF,gBAAC,UAAM,CAACwL,MAAOgE,GAAOmQ,KAAK,UACzB,eAAC,QAAI,CAACnU,MAAOgE,GAAO2B,MAAM,SAAElK,IAC5B,eAAC,QAAI,UAAEjH,SAKX,eAACqQ,GAAA,QAAgB,CACf7E,MAAOgE,GAAO2lB,gBACdrpB,QAAS,WACH0pB,IAAax1B,GACfy1B,EAAc,IACd9N,WAAgBC,cAAc,CAC5B3C,SAAU,IACV/T,OAAQ,CAAE0H,KAAM,gBAAiBgd,SAAU,WAC3CC,OAAQ,CAAEjd,KAAM,SAAUkd,cAAe,QAG3CL,EAAcz1B,GACd2nB,WAAgBC,cAAc,CAC5B3C,SAA0B,YAAhBtb,UAASC,GAAmB,IAAM,IAC5CsH,OAAQ,CAAE0H,KAAM,gBAAiBgd,SAAU,WAC3CC,OAAQ,CAAEjd,KAAM,SAAUkd,cAAe,QAG7C,SACF,eAAC,UAAM,CAACtqB,MAAOgE,GAAOkG,OAAO,SAC3B,eAACqH,GAAA,QAAY,CACX9f,KACEu4B,IAAax1B,EACT,aACA,eAENuc,KAAM,GACN7O,MAAO7Q,EAAW,QAAU,iBAOnC24B,IAAax1B,GACZ,eAAC,UAAM,UACJitB,EAASrxB,KACR,gBAAG6b,EAAG,EAAHA,IAAK7X,EAAU,EAAVA,WAAYysB,EAAc,EAAdA,eAAgBD,EAAW,EAAXA,YAAa4H,EAAK,EAALA,MAAK,OACpD,eAACH,GAAiB,CAEhBj0B,WAAYA,EACZysB,eAAgBA,EAChBD,YAAaA,EACb0H,eAAgBA,EAChBC,kBAAmBA,EACnBl3B,SAAUA,EACVm3B,MAAOA,EACPh0B,iBAAkBA,GARbyX,eAiBpB,CAAC+d,EAAUE,EAAQ74B,IApGN,YAAhB8M,UAASC,IACTmsB,WAAUC,uCAEVD,WAAUC,uCAAsC,GAuGlD,IAAMxmB,GAASyB,WAAWC,OAAO,CAC/B4jB,gBAAiB,CACflpB,OAAQ,GACR8F,WAAY,EACZd,OAAQ,MACRF,MAAO,QAETqkB,sBAAuB,CACrBxkB,SAAU,WACVmE,OAAQ,EACRhE,MAAO,MACPskB,qBAAsB,GACtBC,wBAAyB,GACzBrjB,YAAa,UACbpB,gBAAiB,UACjBtD,WAAY,EACZuW,eAAgB,IAChB8J,kBAAmB,IACnB2H,iBAAkB,KAEpBx1B,aAAc,CACZ6Q,SAAU,WACVsV,MAAO,EACPlR,IAAK,EACLa,QAAS,EACT5J,OAAQ,EACR4E,gBAAiB,UACjBG,aAAc,KAEhBgP,KAAM,CACJnO,aAAc,GACdX,UAAW,IAEbM,MAAO,CACLC,SAAU,GACVC,WAAY,OACZG,aAAc,GAEhB2jB,gBAAiB,CACftP,MAAO,EACPtV,SAAU,WACVG,MAAO,GACPhF,WAAY,SACZC,eAAgB,SAChBiF,OAAQ,QAEV8E,OAAQ,CACNF,QAAS,EACT5D,YAAa,QAEfwjB,SAAU,CACR5kB,gBAAiB,UACjB4E,YAAa,GACb0H,cAAe,GACf5P,WAAY,IAEdknB,aAAc,CACZ3iB,cAAe,MACf9F,eAAgB,gBAChBD,WAAY,SACZkF,OAAQ,IAEVyjB,YAAa,CACX3mB,MAAO,SAET4mB,aAAc,CACZ5mB,MAAO,OAET2nB,eAAgB,CACdjkB,SAAU,GACV1D,MAAO,QACPqE,UAAW,SACXwN,UAAW,UAEb+V,sBAAuB,CACrBlkB,SAAU,GACVlE,WAAY,GACZQ,MAAO,QACPqE,UAAW,SACXV,WAAY,QAEd4kB,eAAgB,CACdzgB,QAAS,IAEXlQ,QAAS,CACPkL,gBAAiB,QACjB9E,WAAY,SACZ8J,QAAS,M,mBCrME,SAAS0gB,GAAa,GAId,IAHrBx2B,EAAY,EAAZA,aACAq0B,EAAiB,EAAjBA,kBACAl3B,EAAQ,EAARA,SAEMwZ,EAAQC,sBAEV9W,EAAU,GACdjD,OAAO2G,QAAQxD,GAAcunB,SAAQ,YAAsC,IAAD,WAAnCjnB,EAAgB,KAAa,KACtDinB,SAAQ,SAACrnB,GACnBJ,EAAQW,KAAK,CAACH,EAAkBJ,UA2BpC,OACE,eAAC,UAAM,CACL4L,MAAO,CACLC,KAAM,EACNqR,cAAe,GACftM,gBAAiB3T,EACbwZ,EAAM,mBACNA,EAAM,oBACV,SACF,eAAC8f,GAAA,QAAQ,CACPnW,sBAAuB,CAAEtP,MAAO,KAChC0lB,mBACE,gBAAC,QAAI,WAAC,8BACwB,IAC5B,eAAC,QAAI,CAAC5qB,MAAO,CAAE6F,WAAY,QAAS,SAAC,MAAQ,qCAIjDuP,uBAAwB,kBAAM,eAAC,WAAO,KACtCtN,KAAM9T,EACNkgB,WA3Ca,SAAH,GAAkB,IAAZC,EAAI,EAAJA,KACpB,MAAuCA,EAAI,GAApC3f,EAAgB,KAAEJ,EAAU,KACnC,OACE,gBAAC,UAAM,CACL4L,MAAO,CACLiG,cAAe,MACf9F,eAAgB,gBAChBD,WAAY,SACZmJ,gBAAiB,EACjBrE,gBAAiB3T,EACbwZ,EAAM,mBACNA,EAAM,oBACV,UACF,eAAC,QAAI,CAAC7K,MAAO,CAAE4F,SAAU,IAAK,SAAExR,IAEhC,eAACyQ,GAAA,QAAgB,CACfvE,QAAS,kBAAMioB,EAAkBn0B,EAAYI,IAAkB,SAC/D,eAACq2B,GAAA,QAAM,CAACp5B,KAAK,QAAQsf,KAAM,GAAI7O,MAAO,kB,qkBC7BjC,SAAS4oB,GAAc,GAAsC,IAApCz5B,EAAQ,EAARA,SAAU05B,EAAqB,EAArBA,sBAC1ClgB,EAAQC,sBACRkgB,EAAiB1wB,GAAgBwS,kBAAkBhT,QACnDA,EAAU8F,IAAe,SAAC/N,GAAK,OAAKA,EAAMU,QAAQoK,WAAW7C,WAEnE,EAA0B4G,mBAAS5G,EAAQC,OAAM,WAA1CA,EAAK,KAAEkxB,EAAQ,KACtB,EAAgCvqB,mBAAS5G,EAAQE,UAAS,WAAnDA,EAAQ,KAAEkxB,EAAW,KAEtB/yB,EAAWuH,KAqBjB,OACE,gBAAC,UAAM,CACLM,MAAO,CACLgF,gBAAiB3T,EACbwZ,EAAM,mBACNA,EAAM,mBACV3K,WAAY,SACZ8J,QAAS,IACT,UACF,gBAAC,UAAM,CACLhK,MAAO,CACLiG,cAAe,MACf9F,eAAgB,SAChBD,WAAY,SACZ8F,aAAc,GACdhB,gBAAiB3T,EACbwZ,EAAM,mBACNA,EAAM,oBACV,UACF,eAAC,QAAI,UAAC,gBACN,eAAC,UAAM,CACLtB,QAASxP,EACTyP,SAAU,SAAC2hB,IAzCG,SAACA,GACrBF,EAASE,GAyCDC,CAAcD,MAGlB,eAAC,QAAI,UAAC,oBAER,eAAC,WAAO,IACR,eAAC,QAAI,CAACnrB,MAAO,CAAEoU,eAAgB,GAAI,SAAC,aACpC,eAAC,UAAM,CACLpU,MAAO,CACLiG,cAAe,MACf9F,eAAgB,SAChBD,WAAY,UACZ,SACDnP,OAAOD,KAAKkJ,GAAU5J,KAAI,SAAC+K,GAAO,OACjC,eAAC,YAAQ,CACP6E,MAAO,CACLgF,gBAAiB3T,EACbwZ,EAAM,mBACNA,EAAM,oBAGZtB,QAASvP,EAASmB,GAClBqO,SAAU,SAAC2hB,IA5DS,SAAChwB,EAAiBgwB,GAC9CD,EAAY,SAAKlxB,GAAQ,UAAGmB,EAAUgwB,KA4D5BE,CAAsBlwB,EAASgwB,IAC/B,SACDhwB,GALIA,QAyBX,eAAC,UAAM,CAAC6E,MAAO,CAAEqF,UAAW,IAAM/E,QAzElB,WAClBnI,EAAS2C,GAAa,CAAEf,QAAOC,cAC/B+wB,GAAsB,IAuEmC,SAAC,mBAGxD,eAAC,UAAM,CACLha,KAAK,QACL/Q,MAAO,CAAEqF,UAAW,IACpBhD,OAAO,OACP/B,QAtFe,WACnB2qB,EAASD,EAAejxB,OACxBmxB,EAAYF,EAAehxB,UAC3B7B,EAAS4C,OAmFiB,SAAC,qB,qkBC/EhB,SAASuwB,GAAY,GAAiB,IAAD,IAAdvrB,EAAU,EAAVA,WACpC,EAAgCW,mBAAS,MAAK,WAAvCspB,EAAQ,KAAEuB,EAAW,KAC5B,EAAsD7qB,oBAAS,GAAM,WAA9D8qB,EAAmB,KAAEC,EAAsB,KAClD,EAAoD/qB,oBAAS,GAAM,WAA5DgrB,EAAkB,KAAEX,EAAqB,KAChD,EAA8BrqB,mBAAS,MAAK,WAArCirB,EAAO,KAAEC,EAAU,KAE1B,EAAmB1yB,KAAZlB,EAAiC,SAAzB,GACf,EAAsBmB,KAAfT,EAAuC,SAA5B,GAClB,EAAwBtC,IAAjBy1B,EAA0C,SAA7B,GACpB,EACEvyB,KAA2B,WADtBwyB,EAAU,YAAeC,EAAgB,EAA3BjrB,UAA6BC,EAAO,EAAPA,QAElD,EACE/H,KADYU,EAAc,EAApBoO,KAAiCkkB,EAAuB,EAAlClrB,UAIxBhH,EAAU8F,IAAe,SAAC/N,GAAK,OAAKA,EAAMU,QAAQoK,WAAW7C,WAC7D9F,EAAU4L,GAAelD,IACzBxL,EAAU0O,GAAenN,GACzBoH,EAAO+F,IAAe,SAAC/N,GAAK,OAAKA,EAAMU,QAAQoK,WAAW9C,QAC1DxI,EAAWuO,GAAetN,GAC1BsH,EAAagG,IACjB,SAAC/N,GAAK,OAAKA,EAAMU,QAAQoK,WAAW/C,cAEhCH,EAAkBmG,IACtB,SAAC/N,GAAK,OAAKA,EAAMU,QAAQoK,WAAWlD,mBAMtC,GAJsBmG,IACpB,SAAC/N,GAAK,OAAKA,EAAMU,QAAQoK,WAAWhD,iBAGiBxD,EACrDjF,EACA,CACE+6B,MAAO/6B,KAHGof,EAAQ,EAAdxI,KAA2BokB,EAAe,EAA1BC,UAMlBp1B,GAAsB,MAARuZ,OAAQ,EAARA,EAAUvZ,cAAe,oBAEvC/B,EAAmB,MAARsb,OAAQ,EAARA,EAAUtb,SACrBd,GAAuB,MAARoc,GAAsB,OAAd,EAARA,EAAUpc,mBAAF,EAAR,EAAwBF,QACvCG,GAAiB,MAARmc,GAAsB,OAAd,EAARA,EAAUpc,mBAAF,EAAR,EAAwBC,OAGjC0W,GAAQC,sBACR3S,GAAWuH,KACXmkB,GAAiBhjB,iBAAoB,MAE3CK,qBAAU,WACRkrB,OACC,IAEH,IA6JI/e,GA7JE+e,GAAe,WACnB,GAAoC,IAAhCr7B,OAAOD,KAAKkD,GAASG,OACvB,IACE23B,EAAW,CAAE56B,UAAS6F,gBAAewK,SACrC,MAAO5Q,GACPiE,QAAQC,KAAK,0BAA2BlE,QAG1CwH,GAASsC,OAgBPkkB,GAAsB,SAACvqB,GAInB,IAAD,GAHP+D,GAASyC,GAAcxG,IACH,QAAhB+J,UAASC,IACX2B,EAAWyB,SAAS,mBAEE,OAAtB,EAAAqiB,GAAe1iB,UAAf,EAAwBqjB,YAAY,IAIlC8D,GAAiB,SAACl0B,EAAoBI,GAC1C,IAAIw3B,EAGJ,IACEh0B,EAAS,CACP9G,UACAkD,aACAC,WAAYqF,EACZ1E,WACAR,qBACC+M,SACH,MAAO5Q,GACPiE,QAAQC,KAAK,oBAAqBlE,KAIhC43B,GAAoB,SAACn0B,EAAoBI,GAC7C,IAAIw3B,EAGJ,IACEtzB,EAAY,CACVxH,UACAkD,aACAC,WAAYqF,EACZ1E,WACAR,qBACC+M,SACH,MAAO5Q,GACPiE,QAAQC,KAAK,oBAAqBlE,KAqChC0a,GACJ,gBAAC,UAAM,CAACrL,MAAO,CAAEiG,cAAe,MAAOjB,gBAAiB,eAAgB,UACtE,gBAACH,GAAA,QAAgB,CACfvE,QAAS,kBAAMmrB,GAAwBD,IACvCxrB,MAAO,CAAEG,eAAgB,SAAUgG,YAAa,IAAK,UACrD,eAACoL,GAAA,QAAY,CACX9f,KAAK,UACLsf,KAAM,GACN7O,MAAO7Q,EAAWwZ,GAAM,mBAAqBA,GAAM,qBAEpD1W,GAAS,EACR,eAAC,UAAM,CACL6L,MAAO,CACL+E,SAAU,WACVC,gBAAiB3T,EAAW,MAAQ,OACpC8T,aAAc,GACdmE,kBAAmB,EACnB+Q,OAAQ,EACRlR,KAAM,GACN,SACF,eAAC,QAAI,UAAEhV,OAEP,QAEN,eAAC0Q,GAAA,QAAgB,CACf7E,MAAO,CAAEG,eAAgB,SAAUgG,YAAa,IAChD7F,QAAS,kBAAMyqB,GAAuBW,IAAoB,SAC1D,eAACna,GAAA,QAAY,CACX9f,KAAMi6B,EAAqB,aAAe,eAC1C3a,KAAM,GACN7O,MAAO7Q,EAAWwZ,GAAM,mBAAqBA,GAAM,0BA2E3D,OA7CEwC,GADE0e,GAAoBC,IAA4BE,EACxC,eAAC9D,GAAO,CAACziB,MAAM,kBAAkBwO,KAAM,eAAC,WAAO,MAChDpT,EAEP,eAACqnB,GAAO,CACNziB,MAAM,wBACNwO,KAAM,eAAC,UAAM,CAAC7T,QAAS8rB,GAAa,SAAC,cAKvC,eAAC,QAAI,CACHpsB,MAAO,CAAEgF,gBAAiB,eAC1B8C,KAAM/W,OAAO2G,QAAQ+B,GAAiBhF,MACpC,EbtQ4B,GauQHoF,GAE3Bqa,WA7Ga,SAAH,GAAkD,IAAD,QAA3CC,KAAI,GAAG3f,EAAgB,KAAE63B,EAAU,KAEnDnC,EAAS,GACPzI,EAAW4K,EAAW3wB,MAAMtL,KAAI,SAACof,GACrC,OACE9V,KAAkBxF,IAClBM,KAAoBN,GAAawF,IACjCxF,GAAawF,GAAgBlF,GAAkBgI,SAASgT,EAAKpb,aAE7D81B,EAAOv1B,KAAK6a,EAAKpb,YACV,SAAKob,GAAI,IAAEgZ,OAAO,MAEzB0B,EAAOv1B,KAAK6a,EAAKpb,YACV,SAAKob,GAAI,IAAEgZ,OAAO,QAI7B,OACE,eAACuB,GAAI,CACHtuB,WAAY4wB,EAAW5wB,WACvBjH,iBAAkBA,EAClBitB,SAAUA,EACVuI,SAAUA,EACVC,cAAesB,EACfl6B,SAAUA,EACVstB,oBAAqBA,GACrB2J,eAAgBA,GAChBC,kBAAmBA,GACnB2B,OAAQA,KAkFRvV,aAAc,2BAAEvgB,EAAU,KAAG,YAAMA,GACnCk4B,oBAAqB,GACrB1B,mBACE,eAACxC,GAAO,CACNziB,MAAM,mBACNwO,KAAM,eAAC,UAAM,CAAC7T,QAAS8rB,GAAa,SAAC,cAGzCG,mBAAoB,GAEpBvX,sBAAuB,GACvBC,aAAc,kBAAM9c,GAASqC,OAC7BgyB,eACE,eAACC,GAAA,QAAc,CACb/X,WAAYqX,EACZtX,UApLY,WACpBoX,EAAc36B,GACdk7B,MAmLQzmB,MAAM,kBACN+mB,UAAW7hB,GAAM,mBACjB8hB,WAAY9hB,GAAM,qBAGtBhJ,IAAK,SAACA,GACJ+pB,EAAW/pB,MAOjB,gBAAC,UAAM,CAAC7B,MAAO,CAAEC,KAAM,GAAI,UACzB,gBAAC2sB,GAAA,eAAc,CACbC,OACEx7B,EACI,CAACwZ,GAAM,oBAAqBA,GAAM,qBAClC,CAACA,GAAM,qBAAsBA,GAAM,sBAEzC7K,MAAO,CAAEkF,MAAO,OAAQ9E,OAAQ,EAAGH,KAAM,GACzCkpB,MAAO,CAAEpE,EAAG,EAAGtF,EAAG,GAClBqN,IAAK,CAAE/H,EAAG,EAAGtF,EAAG,IAAM,UACtB,gBAACmN,GAAA,eAAc,CACbC,OAAQ,CAIN,qBACA,sBAIFE,UAAW,CAAC,EAAG,GACf/sB,MAAO,CACLkJ,OAAQ,EACRhE,MAAO,OACPoE,kBAAmB,GACnB5H,WAAY,IACZ,UACF,eAACka,GAAS,CACRvQ,cAAeA,GACfzR,WAAYA,EACZkI,aA3NW,SAAC/F,GAChB4vB,GACFA,EAAQqB,eAAe,CAAEtN,UAAU,EAAMuN,OAAQ,IAEnD90B,GAASkD,GAAkBU,KAwNnB8f,WAAY,CAAEQ,aAAa,GAC3Bza,YAAY,sBAtGa,WACjC,IAAMsrB,EAAmBn8B,OAAOD,KAAKgJ,EAAQE,UAAUpB,QACrD,SAACu0B,GAAC,OAAKrzB,EAAQE,SAASmzB,MAG1B,OAAID,EAAiB/4B,OAAS,EAE1B,eAAC,QAAI,CACHkM,SAAS,QACTL,MAAO,CAAE+T,UAAW,SAAU1O,UAAW,EAAGnD,MAAO,QAAS,sBAC9CgrB,EAAiBx4B,KAAK,QAKtC,eAAC,UAAM,CAACsL,MAAO,CAAEgF,gBAAiB,cAAeK,UAAW,MAyFzD+nB,MAGF/f,MAGH,eAACua,GAAc,CACbE,mBAAoB2D,EACpB5D,gBAAiB2D,EACjB7lB,MAAM,gBAAe,SACpBzR,IAAgBwF,EACf,eAACgxB,GAAY,CACXe,uBAAwBA,EACxBv3B,aAAcA,GAAawF,IAAmB,GAC9C6uB,kBAAmBA,GACnBl3B,SAAUA,IAGZ,gBAAC,UAAM,CACL2O,MAAO,CACLC,KAAM,EACNC,WAAY,SACZiF,aAAc,GACdzD,WAAY,IACZ,UACF,eAAC,QAAI,UAAC,YACN,eAAC,WAAO,SAKd,eAACkmB,GAAc,CACbE,mBAAoBiD,EACpBlD,gBAAiB6D,EACjB/lB,MAAM,UAAS,SACf,eAACmlB,GAAa,CACZC,sBAAuBA,EACvB15B,SAAUA,MAGG,QAAhB8M,UAASC,IACR,eAAC,GAAe,CAACylB,eAAgBA,Q,qkBC5W1B,SAASwJ,GAAK,GAA8B,IAA5BC,EAAS,EAATA,UAAWC,EAAY,EAAZA,aAClC1iB,EAAQC,sBAEd,OACE,gBAACgS,GAAA,QAAI,CAAC9c,MAAO,CAAEoU,eAAgB,IAAK,UAClC,eAACnL,GAAA,QAAU,CACTkc,gCAAgC,EAChCF,YAAY,EACZjlB,MAAO,CAAEiG,cAAe,OAAQ,SAC/BlV,OAAO2G,QAAQ41B,GAAWl9B,KAAI,WAAuBmQ,GAAW,IAAD,WAA/B9O,EAAI,KAAEmG,EAAK,KAC1C,IAAKA,EAAMqkB,SACT,OACE,eAAC,UAAM,CACL3b,QAAS,WACPitB,EAAa,SACRD,GAAS,UACX77B,EAAO,CAAEwqB,UAAWrkB,EAAMqkB,cAG/B5Z,OAAQzK,EAAMqkB,SAAW,OAAS,UAClCjc,MAAO,CACLoF,OAAQ,GACRiP,iBAAkB,GAClBlP,aAAc,GACdH,gBAAgB,QAAS6F,EAAM,qBAAoB,MAAK,EAAI,IAAOtK,GAAK,IACxE6F,YAAY,QAASyE,EAAM,qBAAoB,MAAK,EAAI,IAAOtK,GAAK,KACpE,SAEF,eAACuc,GAAA,QAAI,CACH9c,MAAO,CAAEE,WAAY,SAAUC,eAAgB,UAAW,SAC1D,gBAAC4c,GAAA,QAAI,CAAC/c,MAAO,CAAEkC,MAAO,SAAU,UAC7BzQ,EACAmG,EAAMqkB,UACL,gBAACc,GAAA,QAAI,kBAEH,eAACzC,GAAA,QAAO,CAAC7oB,KAAK,IAAIsf,KAAM,cAR3BxQ,QAkBf,eAAC0I,GAAA,QAAU,CACTkc,gCAAgC,EAChCF,YAAY,EACZjlB,MAAO,CAAEiG,cAAe,MAAOZ,UAAW,EAAGa,WAAY,GAAI,SAC5DnV,OAAO2G,QAAQ41B,GAAWl9B,KAAI,WAAwBmQ,GAAW,IAAD,WAAhC9O,EAAI,KAAEmG,EAAK,KAC1C,GAAIA,EAAMqkB,SACR,OACE,eAAC,UAAM,CACL7Z,eACE,eAACmP,GAAA,QAAY,CAAC9f,KAAK,QAAQsf,KAAM,GAAI7O,MAAM,UAE7C5B,QAAS,WACPitB,EAAa,SACRD,GAAS,UACX77B,EAAO,CAAEwqB,UAAWrkB,EAAMqkB,cAG/Bjc,MAAO,CACLoF,OAAQ,GACRiP,iBAAkB,EAClBlP,aAAc,GACdH,gBAAiB6F,EAAM,qBACvBzE,YAAayE,EAAM,sBACnB,SAEF,eAACiS,GAAA,QAAI,CACH9c,MAAO,CAAEE,WAAY,SAAUC,eAAgB,UAAW,SAC1D,eAAC4c,GAAA,QAAI,CAAC/c,MAAO,CAAEkC,MAAO,SAAU,SAAEzQ,OAH/B8O,W,wBCzERitB,GAAmB56B,EAASa,gBAAgB,CACvDC,kBAAkB,EAClBP,UAAW,SAACC,GAAO,MAAM,CACvBq6B,gBAAiBr6B,EAAQE,MAAM,CAC7BA,MAAO,SAACpC,GAAO,MAAM,CACnB2C,IAAK,YACLC,QAAS,CACP5C,aAGJ6C,kBAAmB,SAAC25B,GAOlB,MAAM,EANNA,EAAWA,EAAS71B,MAAK,SAAU81B,EAAGC,GACpC,IAAMC,EAAQF,EAAEG,YAAYrxB,cACtBsxB,EAAQH,EAAEE,YAAYrxB,cAC5B,OAAOoxB,EAAQE,EAAQ,EAAIF,EAAQE,GAAS,EAAI,MAIvClP,MAAK,SAACmP,GAAO,MAA6B,aAAxBA,EAAQF,gBAA2B,YAC3DJ,EAAS90B,QAAO,SAACo1B,GAAO,MAA6B,aAAxBA,EAAQF,oBAI9CG,iBAAkB76B,EAAQ2B,SAAS,CACjCzB,MAAO,YAAqB,MAAQ,CAClCO,IAAK,0BACLuB,OAAQ,OACRtB,QAAS,CACP5C,QAJa,EAAPA,SAMRyE,KAAM,CACJu4B,UAPwB,EAATA,WASjB74B,gBAAiB,SAACC,GAAQ,OAAKA,EAASC,gBAMjC44B,GACbX,GADaW,4BAA6BC,GAC1CZ,GAD0CY,4BCjB/BC,GAAc,SAAH,GAIjB,IAFOvmB,EAAI,EADhBmP,MACE/hB,OAAU4S,KAGNwmB,EAAa1uB,GAAetN,GAC5Bi8B,EAAoB9oB,WAAWC,OAAO,CAC1CzB,UAAW,CACThE,KAAM,GAER6X,OAAQ,CACNzS,UAAW,GACXnF,WAAY,SACZC,eAAgB,SAChB+E,MAAO,QAETme,QAAS,CACPnhB,MAAOosB,EAAa,QAAU,QAC9BpuB,WAAY,SACZE,OAAQ,GACRgG,YAAa,QACbC,YAAa,EACb2D,QAAS,IAEXsZ,MAAO,CACLje,UAAW,GACXke,QAAS,OACTpjB,eAAgB,cAElBwF,MAAO,CACLzD,MAAOosB,EAAa,QAAU,QAC9B1oB,SAAU,GACVM,WAAY,IAEd0Z,SAAU,CACR1d,MAAOosB,EAAa,QAAU,QAC9B1oB,SAAU,GACVzF,eAAgB,UAElBkE,KAAM,CACJa,MAAO,OACPE,OAAQ,KAEVwF,YAAa,CACXvE,YAAa,EACbjG,OAAQ,GACRgG,YAAa,UACbjB,aAAc,EACdD,MAAO,MACP8E,QAAS,IAGXwZ,gBAAiB,CACfte,MAAO,OACP/E,eAAgB,SAChBD,WAAY,SACZmF,UAAW,GACXW,aAAc,IAEhByd,OAAQ,CACNve,MAAO,IACPE,OAAQ,KAEVse,aAAc,CACZzd,cAAe,MACf2K,SAAU,OACVxQ,OAAQ,GACR4F,aAAc,GAEhB2d,WAAY,CACVze,MAAO,IACPE,OAAQ,IACR1D,WAAY,IACZtB,OAAQ,GAEVsgB,WAAY,CACVxe,MAAOosB,EAAa,QAAU,QAC9B1oB,SAAU,GACVC,WAAY,UAGhB,EAAoCnF,mBAAS,GAAE,WAA5B8tB,GAAF,KAAe,MAChC,EAAgC9tB,oBAAS,GAAM,WAA/B+tB,GAAF,KAAc,MAC5B,EAAsC/tB,oBAAS,GAAM,WAA9CguB,EAAW,KAAEC,EAAc,KAElC,EAAgCP,KAAzBQ,EAAsD,SAAjC,GAEtB19B,EAAU0O,GAAenN,GAEzBo8B,EAAiB/mB,EAAKgnB,WAAahnB,EAAKgnB,UAAUv6B,MAAM,KAC5CuT,EAAKgnB,WAAaD,EAAeA,EAAe16B,OAAS,GAc3E,IAAM85B,EAAgB,sBAAG,YACvB,UACQW,EAAsB,CAAE19B,UAASg9B,UAAWpmB,EAAKmE,MAAO1K,SAC9D,MAAO5Q,GACPiE,QAAQC,KAAK,gCAAiClE,OAEjD,kBANqB,mCA8CtB,OAtCAuQ,qBAAU,YACG,sBAAG,YACZytB,QAAqBI,WAAQC,WAAWlnB,EAAKmnB,UAC7ChB,OACD,kBAHU,mCAIXiB,KACC,IAiCD,eAAC,UAAM,CAAClvB,MAAO,CAAEC,KAAM,GAAI,SACzB,eAACgJ,GAAA,QAAU,UACT,gBAAC,UAAM,CAACjJ,MAAOuuB,EAAkBtqB,UAAU,UACzC,eAAC6Y,GAAA,QAAI,CAAC9c,MAAOuuB,EAAkBzW,OAAO,SACpC,eAAC3T,GAAA,QAAK,CACJ+O,WAAW,UACXlT,MAAOuuB,EAAkBlqB,KACzBD,OAAQ,CAAE4O,IAAKlL,EAAKzD,UAGxB,gBAACyY,GAAA,QAAI,CACH9c,MAAO,CAAEkF,MAAO,OAAQqe,QAAS,OAAQrjB,WAAY,UAAW,UAChE,eAAC6c,GAAA,QAAI,CAAC/c,MAAOuuB,EAAkB5oB,MAAM,SAAEmC,EAAKgmB,cAC5C,eAAC/Q,GAAA,QAAI,CAAC/c,MAAOuuB,EAAkB3O,SAAS,SAvE5C9X,EAAKqnB,aAAernB,EAAK7R,MACpB6R,EAAKqnB,YAAc,WAAarnB,EAAK7R,MACnC6R,EAAKqnB,YACPrnB,EAAKqnB,YACHrnB,EAAK7R,MACP6R,EAAK7R,MAEL,UAmEF6R,EAAKsnB,UACJ,eAACtS,GAAA,QAAI,CAAC9c,MAAOuuB,EAAkBlL,QAAQ,SACrC,eAACtG,GAAA,QAAI,CACH/c,MAAO,CAAE4F,SAAU,GAAI1D,MAAOosB,EAAa,QAAU,SAAU,SAC9DxmB,EAAKsnB,aAKZ,eAACtS,GAAA,QAAI,CACH9c,MAAO,CAAEkF,MAAO,OAAQqe,QAAS,OAAQrjB,WAAY,UAAW,SAxDpEwuB,EAEA,eAAC5R,GAAA,QAAI,UACH,gBAACjY,GAAA,QAAgB,CACfvE,QAAS,WACPyuB,WAAQM,QAAQvnB,EAAKmnB,UAEvBjvB,MAAO,CACLujB,QAAS,OACTtd,cAAe,MACf/F,WAAY,UACZ,UACF,eAAC6c,GAAA,QAAI,CACH/c,MAAO,CACL4F,SAAU,GACV1D,MAAOosB,EAAa,UAAY,UAChCzkB,aAAc,GACd,SAAC,2BAGL,eAAC0H,GAAA,QAAY,CAAC9f,KAAK,OAAOsf,KAAM,GAAI7O,MAAM,iBAKzC,OAqCH,eAAC,UAAM,CAAClC,MAAOuuB,EAAkB3jB,YAAY,SAC3C,eAACmS,GAAA,QAAI,CACH/c,MAAO,CAAE4F,SAAU,GAAI1D,MAAOosB,EAAa,QAAU,SAAU,SAC9DxmB,EAAK8C,gBAGV,eAACkS,GAAA,QAAI,CACH9c,MAAO,CACLkF,MAAO,OACPqB,UAAW,aACXL,WAAY,GACZwe,kBAAmB,UACnB3C,kBAAmB,EACnBzQ,cAAe,GACf,SACF,eAACyL,GAAA,QAAI,CAAC/c,MAAOuuB,EAAkB7N,WAAW,SAAC,oBAG7C,eAAC5D,GAAA,QAAI,CAAC9c,MAAOuuB,EAAkB7K,aAAa,SACzC5b,EAAKwnB,OAAOl/B,KAAI,SAACm/B,EAAKhvB,GACrB,OACE,eAACsE,GAAA,QAAgB,CACfvE,QAAS,WACPkuB,EAAcjuB,GACdkuB,GAAa,IACb,SACF,eAACtqB,GAAA,QAAK,CACJnE,MAAOuuB,EAAkB5K,WACzBvf,OAAQ,CAAE4O,IAAKuc,YAOxBznB,EAAK0nB,QAAQ,IACZ,gBAAC,UAAM,CAACxvB,MAAOuuB,EAAkB/K,gBAAgB,UAC/C,eAACrf,GAAA,QAAK,CACJ+O,WAAY,UACZ9O,OAAQrB,EAAQ,KAChB/C,MAAOuuB,EAAkB9K,SAE3B,eAAC1G,GAAA,QAAI,CACH/c,MAAO,CACL+E,SAAU,WACVa,SAAU,GACVE,UAAW,SACX3F,eAAgB,SAChB+E,MAAO,MACPoM,cAAe,GACfzH,aAAc,GACd,SACD/B,EAAK0nB,QAAQ,GAAGC,oBAEnB,eAAC1S,GAAA,QAAI,CACH/c,MAAO,CAAE4F,SAAU,GAAI1D,MAAOosB,EAAa,QAAU,SAAU,SAAC,gDAMtE,eAACxR,GAAA,QAAI,CACH9c,MAAO,CACLkF,MAAO,OACPqB,UAAW,aACXL,WAAY,GACZwe,kBAAmB,UACnB3C,kBAAmB,EACnBzQ,cAAe,GACf,SACF,eAACyL,GAAA,QAAI,CAAC/c,MAAOuuB,EAAkB7N,WAAW,SAAC,YAE7C,eAAC5D,GAAA,QAAI,CACH9c,MAAO,CACLuG,UAAW,aACXL,WAAY,GACZF,aAAc,IACd,SACD8B,EAAKmV,MAAM7sB,KAAI,SAAC+zB,EAAK3R,GACpB,OACE,gBAAC,UAAM,CAELxS,MAAO,CACLG,eAAgB,gBAChB8F,cAAe,MACff,MAAO,QACP,UACF,gBAAC6X,GAAA,QAAI,CACH/c,MAAO,CACLqF,UAAW,GACXnD,MAAOosB,EAAa,QAAU,SAC9B,UACDnK,EAAIuL,aAAa,OAEpB,eAAC3S,GAAA,QAAI,CACH/c,MAAO,CACLuG,UAAW,WACXsD,aAAc,GACdxE,UAAW,GACXnD,MAAOosB,EAAa,QAAU,SAC9B,SACDhP,GAAgB6E,OApBd3R,gBAgCvB,SAAS8M,GAAgB9P,GACvB,OAAKA,EAAKmgB,UAA8B,KAAlBngB,EAAKmgB,UAAqC,OAAlBngB,EAAKmgB,SAIjDpQ,GAAoB/P,EAAKmgB,UACzB,MACApQ,GAAoB/P,EAAKogB,WALlB,SASX,SAASrQ,GAAoB/P,GACP,IAAhBA,EAAKrb,SACPqb,EAAO,IAAMA,GAEf,IAAIyN,EAAQzN,EAAK/a,MAAM,EAAG,GACtByoB,EAAU1N,EAAK/a,MAAM,EAAG,GACxB0oB,EAAOC,OAAOC,SAASJ,GAAS,GAAK,KAAO,KAMhD,OAJc,KADdA,GAAgB,MAEdA,EAAQ,GACRE,EAAO,MAEFF,EAAQ,IAAMC,EAAUC,EAG1B,SAAS0S,GAAa,GAAiB,IAAf9vB,EAAU,EAAVA,WAE7B,GADmBH,GAAetN,GACUoO,mBAAS,KAAG,WAAjDovB,EAAc,KAAEC,EAAiB,KACxC,EAAsCrvB,oBAAS,GAAM,WAA9CsvB,EAAW,KAAEC,EAAc,KAC5B/+B,EAAU0O,GAAenN,GAC/B,EACE07B,KAA6B,WADxB+B,EAAoB,KAAUxC,EAAQ,KAAd5lB,KAcD,aAM7B,OAN6B,OAA9B,YACE,UACQooB,EAAqBh/B,GAASqQ,SACpC,MAAO5Q,GACPiE,QAAQC,KAAK,8BAA+BlE,QAE/C,sBA2DD,OA5EKq/B,IACHC,GAAe,GAQF,WAEe,wBAT5BxC,IAGFvsB,qBAAU,YACI,MAARwsB,OAAQ,EAARA,EAAUv5B,QAAS,GAazB,WACE,IAAIg8B,EAAW,GAEf,IAAK,IAAMnC,KAAWN,EACpB,QAAqBtd,IAAjB4d,EAAQ1gB,KACV,IAAK,IAAM7b,KAAQu8B,EAAQ1gB,KACpB6iB,EAAS3zB,SAAS/K,IACrB0+B,EAASx7B,KAAKlD,GAQtB,IAAM2+B,GAHND,EAAWA,EAASt4B,QAGE2E,SAAS,SAC3B2zB,EAASE,WAAU,SAAClc,GAAI,MAAc,UAATA,MAC5B,GACS,IAAVic,GACFD,EAASG,OAAOF,EAAM,GAExBD,EAASx7B,KAAK,SAEd,IAAI47B,EAAc,GAClB,IAAK,IAAM9+B,KAAQ0+B,EACjBI,EAAY9+B,GAAQ,CAClBwqB,UAAU,GAGd8T,EAAkBQ,GAzChBC,KAED,CAAC9C,IAoEF,gBAAC,UAAM,CAAC1tB,MAAO,CAAEC,KAAM,GAAI,UACzB,eAACotB,GAAI,CACHE,aAAcwC,EACdzC,UAAWv8B,OAAOD,KAAKg/B,GAAgB37B,OAAS,IAElD,eAAC8U,GAAA,QAAU,CAACjJ,MAAO,CAAEiG,cAAe,UAAW,SACvB,KAAb,MAARynB,OAAQ,EAARA,EAAUv5B,QACT,eAAC4oB,GAAA,QAAI,UAAC,wBAjCd,WACE,IAAI0T,GAAmB,EACvB,IAAK,IAAMC,KAAcZ,EACvB,GAAIA,EAAeY,GAAYzU,SAAU,CACvCwU,GAAmB,EACnB,MAGJ,GAAKA,EAEE,CACL,IAAIE,EAAiB,GACrB,IAAK,IAAMD,KAAcZ,EACvB,GAAIA,EAAeY,GAAYzU,SAC7B,IAAK,IAAM+R,KAAWN,EAChBM,EAAQ1gB,KAAK9Q,SAASk0B,IACxBC,EAAeh8B,KAAKq5B,GAK5B,OAAO4C,GAAeD,GAAkB,GAAI5wB,GAZ5C,OAAO6wB,GAAelD,GAAY,GAAI3tB,GA0BlC8wB,QAOV,SAASD,GAAelD,EAAU3tB,GAChC,IAAMuuB,EAAa1uB,GAAetN,GAC5Bw+B,EAAgBrrB,WAAWC,OAAO,CACtCzB,UAAW,CACThE,KAAM,EACN+E,gBAAiB,OACjB9E,WAAY,UAEd6wB,cAAe,CACb9qB,cAAe,MACf/F,WAAY,SACZgF,MAAO,OACPE,OAAQ,IACRJ,gBAAiBspB,EAAa,UAAY,OAC1CnpB,aAAc,GACdkB,YAAa,EACbD,YAAakoB,EAAa,UAAY,OACtCvM,kBAAmBuM,EAAa,EAAI,EACpCtU,YAAa,OACbC,aAAc,CAAE/U,MAAO,EAAGE,OAAQ,GAClC8U,cAAe,GACfC,aAAc,EACdC,UAAW,EACXlU,WAAY,EACZC,YAAa,EACbd,UAAW,IAEb9P,KAAM,CACJ0K,KAAM,EACNiC,MAAOosB,EAAa,QAAU,QAC9B1oB,SAAU,GACVE,UAAW,SACXT,UAAW,EACXW,aAAc,GAEhBD,MAAO,CACLb,MAAO,OACPE,OAAQ,OACRc,WAAY,GACZf,aAAc,MAGlB,GAAwB,IAApBuoB,EAASv5B,OAAb,CAGA,IAAIopB,EAAQ,GACRyT,EAAe,GAAG,cAEgC,IAAD,EAgC5C,EAhCHhD,EAAQwB,SAAWxB,EAAQwB,QAAQr7B,OAAS,EAC9C68B,EAAar8B,KACX,gBAACkQ,GAAA,QAAgB,CACfvE,QAAS,WACPP,EAAWyB,SAAS,cAAe,CAAEsG,KAAMkmB,KAE7ChuB,MAAO8wB,EAAcC,cAAc,UAEnB,OAAf,EAAA/C,EAAQwB,UAAR,EAAiBr7B,OAChB,eAACod,GAAA,QAAY,CACX9f,KAAK,OACLyQ,MAAO,OACPlC,MAAO,CACL+E,SAAU,QACVwB,UAAW,aACX4C,IAAK,EACLC,KAAM,KAGR,KAEJ,eAAC0T,GAAA,QAAI,CAAC9c,MAAO,CAAEC,KAAM,GAAI,SACvB,eAACkE,GAAA,QAAK,CACJ+O,WAAY,UACZlT,MAAO8wB,EAAc/qB,MACrB3B,OAAQ,CAAE4O,IAAKgb,EAAQ3pB,UAI3B,eAAC0Y,GAAA,QAAI,CAAC/c,MAAO8wB,EAAcv7B,KAAK,SAAEy4B,EAAQF,gBAtBrCE,EAAQ/hB,MA0BjBsR,EAAM5oB,KACJ,gBAACkQ,GAAA,QAAgB,CACfvE,QAAS,WACPP,EAAWyB,SAAS,cAAe,CAAEsG,KAAMkmB,KAE7ChuB,MAAO8wB,EAAcC,cAAc,UAEnB,OAAf,EAAA/C,EAAQwB,UAAR,EAAiBr7B,OAChB,eAACod,GAAA,QAAY,CACX9f,KAAK,OACLyQ,MAAO,OACPlC,MAAO,CACL+E,SAAU,WACVwB,UAAW,aACX4C,IAAK,EACLC,KAAM,KAGR,KAEJ,eAAC0T,GAAA,QAAI,CAAC9c,MAAO,CAAEC,KAAM,GAAI,SACvB,eAACkE,GAAA,QAAK,CACJ+O,WAAY,UACZlT,MAAO8wB,EAAc/qB,MACrB3B,OAAQ,CAAE4O,IAAKgb,EAAQ3pB,UAI3B,eAAC0Y,GAAA,QAAI,CAAC/c,MAAO8wB,EAAcv7B,KAAK,SAAEy4B,EAAQF,gBAtBrCE,EAAQ/hB,OAxCrB,IAAK,IAAM+hB,KAAWN,EAAQ,KAmE9B,IAAK,IAAMuD,KAAU1T,EACnByT,EAAar8B,KAAKs8B,GAEpB,OAAOD,G,+mBCjjBM,SAASE,GAAU,GAA2C,IAAzCC,EAAU,EAAVA,WAAYpf,EAAQ,EAARA,SAAaqf,EAAW,UACtE,OACE,eAAC,UAAM,SAAKA,GAAW,aACpB7tB,IAAM8tB,SAASjhC,IAAI2hB,GAAU,SAACuf,GAAK,OAClC,eAAC,UAAM,CAACtxB,MAAOmxB,EAAW,SAAEG,U,qkBCOpC,IAAMC,GAAoB,SAAH,GAAqC,IAA/BxxB,EAAU,EAAVA,WAAYyxB,EAAW,EAAXA,YACvC,OACE,gBAAC,UAAM,CACLxxB,MAAO,CACLiG,cAAe,MACf9F,eAAgB,gBAChBC,OAAQ,GACRiF,UAA2B,QAAhBlH,UAASC,GAAe,GAAK,IACxC,UACF,eAACyG,GAAA,QAAgB,CACfvE,QAAS,WACPP,EAAW4G,UACX,SACF,eAAC,QAAI,UAAC,aAER,eAAC,QAAI,CAACtG,SAAS,KAAI,SAAC,iBACpB,eAACwE,GAAA,QAAgB,CAACvE,QAASkxB,EAAY,SACrC,eAAC,QAAI,UAAC,eAMC,SAASC,GAAS,GAAiB,IAAf1xB,EAAU,EAAVA,WAC3B7O,EAAU0O,GAAenN,GACjB6d,EAAana,EAAoBjF,EAAS,CACtD+6B,MAAO/6B,IADD4W,KAIF4pB,EAAS,CACb,CACE9vB,YAAa,UACbgF,MAAO,WACPnV,KAAM,YAER,CACEmQ,YAAa0O,EAASvJ,cACtBH,MAAO,aACPnV,KAAM,iBAER,CACEmQ,YAAa0O,EAASrJ,aACtBL,MAAO,YACPnV,KAAM,gBAER,CACEmQ,YAAa0O,EAASqhB,mBACtB/qB,MAAO,sBACPnV,KAAM,qBACNmgC,YAAa,CAAElb,WAAW,EAAMC,UAAW,CAAEvM,UAAW,MAE1D,CACExI,YAAa0O,EAASuhB,SACtBjrB,MAAO,WACPnV,KAAM,YAER,CACEmQ,YAAa0O,EAASnJ,MACtBP,MAAO,QACPnV,KAAM,UAIV,EAA4BiP,mBAC1B3P,OAAO0G,YAAYi6B,EAAOthC,KAAI,SAAC6Z,GAAK,MAAK,CAACA,EAAMxY,KAAM,SACvD,WAFMmE,EAAM,KAAEk8B,EAAS,KAGxB,EAAkCv7B,IAAqB,WAAhDd,EAAQ,KAAIqL,EAAS,KAATA,UAEb0wB,EAAW,sBAAG,YAClB,IAAMO,EAAgBhhC,OAAO2G,QAAQ9B,GAAQgD,QAC3C,2BAAG,KAAO,MAAgB,KAAhB,QAGZ,IACMm5B,EAAc59B,OAAS,UACnBsB,EAAS,CACbvE,UACA8D,SAAUsb,EAAStb,SACnBY,OAAQ7E,OAAO0G,YAAYs6B,KAC1BxwB,UAGLxB,EAAW4G,SACX,MAAOqrB,GACPp9B,QAAQ+b,IAAI,qBAAsBqhB,OAErC,kBAlBgB,mCAoBjB,OACE,gBAAC,UAAM,CAAChyB,MAAO,CAAEC,KAAM,GAAI,UACxBa,EACC,eAAC,UAAM,CACLd,MAAO,CACLC,KAAM,EACN+E,gBAAiB,cACjBD,SAAU,WACVoE,IAAK,MACLkR,MAAO,MACPnR,OAAQ,GACR,SACF,eAAC,WAAO,CAAC6H,KAAK,aAEd,KAEJ,eAAC,GAAiB,CAAChR,WAAYA,EAAYyxB,YAAaA,IACxD,eAACztB,GAAA,QAAoB,CACnB/D,MAAO,CAAEC,KAAM,GACfiE,SAA0B,QAAhB/F,UAASC,GAAe,UAAY,SAAS,SACvD,eAAC,4BAAwB,CACvB4B,MAAO,CAAEC,KAAM,GACfK,QAAS0B,WAASC,QAAQ,SAC1B,eAACivB,GAAS,CACRlxB,MAAO,CAAEoU,eAAgB,IACzB+c,WAAY,CAAE9c,iBAAkB,GAAID,eAAgB,IAAK,SACxDsd,EAAOthC,KAAI,gBAAGwR,EAAW,EAAXA,YAAagF,EAAK,EAALA,MAAOnV,EAAI,EAAJA,KAAMmgC,EAAW,EAAXA,YAAW,OAClD,eAAC,SAAK,IAEJhwB,YAAaA,EACbgF,MAAOA,EACP9E,aAAc,SAACvM,GAAI,OAAKu8B,EAAU,SAAKl8B,GAAM,UAAGnE,EAAO8D,OACnDq8B,GAJCngC,eChHN,SAASwgC,GAAa,GAAiB,IAAflyB,EAAU,EAAVA,WAC/B1O,EAAWuO,GAAetN,GAC1BhB,EAAuBsO,IAC3B,SAAC/N,GAAK,OAAKA,EAAMU,QAAQC,OAAOlB,wBAE5BJ,EAAU0O,GAAenN,GACzBtB,EAAUyO,GAAelN,GACzBw/B,EAAcC,qBACN7hB,EAAana,EAAoBjF,EAAS,CACtD+6B,MAAO/6B,IADD4W,KAGF3P,EAAWuH,KACjB,EAA4CgB,oBAAS,GAAM,WAApDwnB,EAAc,KAAEC,EAAiB,KACxC,EAAuC7xB,IAA0B,WAA1Dd,EAAa,KAEd48B,GAF2B,KAATtxB,UAET,WACb3I,EAASk6B,MACTl6B,EAASm6B,MACTn6B,EAASo6B,KACTp6B,EAASvF,EAAS0F,KAAKk6B,mBAGnBC,EAAmB,sBAAG,YAC1B,UACQj9B,EAAc,CAAEtE,UAAS8D,SAAUsb,EAAStb,WAAYuM,SAC9D6wB,IACA,MAAOzhC,GACPiE,QAAQC,KAAK,2BAA4BlE,OAE5C,kBAPwB,mCAqBzB,OACE,gBAAC,UAAM,CAACqP,MAAO,CAAEC,KAAM,GAAI,UACzB,gBAAC,UAAM,CACLD,MAAO,CACLiG,cAAe,MACfoO,iBAAkB,GAClBlU,eAAgB,gBAChBD,WAAY,SACZD,KAAM,GACN,UACF,gBAAC,UAAM,WACL,gBAAC,QAAI,CAACI,SAAS,KAAI,UAChBiQ,EAASvJ,cAAc,IAAEuJ,EAASrJ,gBAErC,gBAAC,QAAI,CAAC5G,SAAS,KAAKgC,OAAO,UAAS,UAAC,IACjCiO,EAAStb,eAGf,eAAC,UAAM,UACL,eAAC,UAAM,CAACsL,QAAS,WACTnP,EACAg3B,GAAkB,GAElBpoB,EAAWyB,SAAS,aAE1B,SAAC,cAMD0mB,GACA,eAACN,GAAc,CACXjiB,MAAM,QACNoM,SAAU,eAAC,QAAI,CAAC/R,MAAO,CAACsJ,kBAAmB,IAAI,SAAC,oHAChDue,gBAAiBK,EACjBJ,mBAAoBK,IAI9B,eAAC,WAAO,IAER,gBAAC,UAAM,CACLnoB,MAAO,CACLC,KAAM,EACNE,eAAgB,gBAChBkU,iBAAkB,IAClB,UACF,gBAAC,UAAM,WACL,eAAC,QAAI,CAAChU,SAAS,KAAKL,MAAO,CAAE8F,UAAW,SAAUT,UAAW,IAAK,SAAC,cAGnE,gBAAC,UAAM,CACLrF,MAAO,CACLqF,UAAW,GACXY,cAAe,MACf9F,eAAgB,iBAChB,UACF,eAAC,QAAI,UAAC,uBACN,eAAC,UAAM,CACLqJ,SAAU,SAACD,GAAO,OAxEQ,SAACA,GACrCpR,EAASjG,EAAwBqX,IAC7BA,GACFpR,EAASlG,EAAkC,SAAhBigC,IAqEIQ,CAA8BnpB,IACrDA,QAASjY,OAGb,gBAAC,UAAM,CACL0O,MAAO,CACLqF,UAAW,GACXY,cAAe,MACf9F,eAAgB,gBAChB2Q,QAASxf,EAAuB,GAAM,GACtC,UACF,eAAC,QAAI,UAAC,cACN,eAAC,UAAM,CACLkY,SAAU,SAACD,GAAO,OA9EA,SAACA,GAC7BpR,EAASjG,GAAwB,IACjCiG,EAASlG,EAAkBsX,IA4EMopB,CAAsBppB,IAC7CA,QAASlY,UAKf,gBAAC6/B,GAAS,CACRC,WAAY,CAAE/c,eAAgB,GAC9BpU,MAAO,CAAEE,WAAY,SAAU8F,aAAc,IAAK,UAClD,eAAC,UAAM,CAAC1F,QAAS8xB,EAAQ/vB,OAAO,UAAUiS,WAAW,UAAS,SAAC,YAG/D,eAAC,UAAM,CACLhU,QAASmyB,EACTpwB,OAAO,SACPiS,WAAW,QAAO,SAAC,mBAGrB,gBAAC,QAAI,WAAC,WAAS/I,WAAUqnB,SAASC,oB,+NC7I5C,IAAMvwB,GAAQC,qBAEC,SAASuwB,KACtB,IAAMjoB,EAAQC,sBACRzZ,EAAWuO,GAAetN,GAEhC,OACE,gBAAC,GAAMmQ,UAAS,CACdC,cAAe,CACbqI,YAAa,CACX/F,gBAAiB3T,EAAWwZ,EAAM,mBAAqB,SAEzD,UACF,eAAC,GAAMjI,OAAM,CACXnR,KAAK,eACLoR,UAAWovB,GACX/mB,QAAS,gBAAGnL,EAAU,EAAVA,WAAU,MAAQ,CAC5B4F,MAAO,WACPqF,WAAY,SAACvE,GAAK,OAChB,eAACD,G,mWAAU,EAACzG,WAAYA,GAAgB0G,SAI9C,eAAC,GAAMssB,MAAK,CAACrwB,cAAe,CAAEswB,aAAc,SAAU,SACpD,eAAC,GAAMpwB,OAAM,CACXnR,KAAK,WACLoR,UAAW4uB,GACXvmB,QAAS,CAAEvI,aAAa,U,iCCa5BswB,GAAuB1wB,qBAEd,SAAS2wB,GAAwB,GAAiB,IAAfnzB,EAAU,EAAVA,WAChD,EAA0CW,mBAAS,IAAG,WAA/CyyB,EAAa,KAAEC,EAAgB,KACtC,EAA0C7vB,IAAM7C,SAAS,IAAG,WAC5D,GADoB,KAAkB,KACJA,oBAAS,IAAM,WACjD,GADgB,KAAc,KACJA,mBAAS,KAAG,WAA/BslB,EAAK,KAAEC,EAAQ,KACtB,EAA4CvlB,oBAAS,GAAM,WAApDwnB,EAAc,KAAEC,EAAiB,KACxC,EAA4BznB,oBAAS,GAAM,WAApC2yB,EAAM,KAAEC,EAAS,KAClBpiC,EAAU0O,GAAenN,GACzBpB,EAAWuO,GAAetN,GAC1BnB,EAAUyO,GAAelN,GAqBxB,SACQ6gC,IAAoB,4CAclC,OAdkC,OAAnC,YACE7vB,MAAMkiB,GAAW,0BAA2B,CAC1CxwB,OAAQ,MACRtB,QAAS,CACP,eAAgB,mBAChB5C,QAASA,KAEVyS,MAAK,SAAC6vB,GACPA,EAAIj+B,OAAOoO,MAAK,SAACwvB,GACfA,EAAgBvM,KAAK6M,MAAMN,GAE3BC,EAAiBD,aAGtB,sBAC8B,aAS9B,OAT8B,OAA/B,UAAgCO,SACxBhwB,MAAMkiB,GAAW,0BAA2B,CAChDxwB,OAAQ,OACRtB,QAAS,CACP,eAAgB,mBAChB5C,QAASA,GAEXyE,KAAMixB,KAAKC,UAAU6M,SAExB,sBACD,SAASC,IACP5zB,EAAWyB,SAAS,sBA9CtBN,qBAAU,WACRqyB,IACA7vB,MAAMkiB,GAAW,yBAA0B,CACzCxwB,OAAQ,MACRtB,QAAS,CACP,eAAgB,mBAChB5C,QAASA,KAEVyS,KAAK,WAAD,WAAC,UAAOmE,GACb,GAAIA,EAAKwe,GAAI,CACX,IAAIsN,SAAkB9rB,EAAK0e,QAAQp2B,KAAI,SAAC4E,GACtC,MAAO,CACL4R,MAAO5R,EACPzE,GAAIyE,MAGRixB,EAAS2N,OAEV,OAAF,4CAVO,MAWP,IAwCH,IAAMC,EAAmB,SAAC9zB,GAAU,OAClC,gBAAC,UAAM,CACLC,MAAO,CACLkF,MAAO,OACP/E,eAAgB,gBAChB8F,cAAe,MACf/F,WAAY,SACZD,KAAM,EACN+E,gBAAiB,eACjB,UACe,QAAhB7G,UAASC,IAAgB,eAACoI,GAAU,CAACzG,WAAYA,IAElD,eAAC,UAAM,CACLC,MAAO,CACLsR,cAAe,EACfrL,cAAe,MACf/F,WAAY,SACZC,eAAgB,SAChBF,KAAM,EACN+E,gBAAiB,eACjB,SAQF,eAAC,QAAI,CACHhF,MAAO,CACL0B,WAAY,EACZkE,SAAU,GACVC,WAAY,MACZ3D,MAAO7Q,EAAW,OAAS,QAC3B,SAAC,oBAIP,gBAAC,UAAM,CACL2O,MAAO,CACLuG,UAAW,WACXsD,aAAc,GACdyH,cAAe,GACfrL,cAAe,MACfjB,gBAAiB,eACjB,UACF,eAACH,GAAA,QAAgB,CACfvE,QAAS,WACHnP,EACFg3B,GAAkB,GAElBwL,KAEF,SACF,eAACpiB,GAAA,QAAY,CAACR,KAAM,GAAI7O,MAAO,UAAWzQ,KAAK,WAG7Cy2B,GACA,eAACN,GAAc,CACXjiB,MAAM,QACNoM,SAAU,eAAC,QAAI,CAAC/R,MAAO,CAACsJ,kBAAmB,IAAI,SAAC,oHAChDue,gBAAiBK,EACjBJ,mBAAoBK,IAG5B,eAACtjB,GAAA,QAAgB,CACf7E,MAAO,CACL4J,YAAa,GACbzD,YAA4B,WAAfhI,UAASC,GAAkB,GAAK,GAE/CkC,QAAS,WACP8V,WAAM3U,MACJ,UACA,oFACA,CACE,CACElM,KAAM,KACNyK,MAAO,UAET,CACEzK,KAAM,MACN+K,QAAQ,WAAD,WAAE,YA3FvBoD,MAAMkiB,GAAW,4BAA6B,CAC5CxwB,OAAQ,SACRtB,QAAS,CACP,eAAgB,mBAChB5C,QAASA,KAEVyS,MAAK,WACN4vB,UAsFa,kDAFO,OAMd,SACF,eAAChiB,GAAA,QAAY,CAACR,KAAM,GAAI7O,MAAO,UAAWzQ,KAAK,mBA+KvD,SAASqiC,EAAYv+B,GACnB,IAAIw+B,EAAax+B,EAAK6b,QAAQ,KAC1B4iB,EAAQz+B,EAAK2F,UAAU,EAAG64B,GAE9B,OADax+B,EAAK2F,UAAU64B,EAAa,GACzB,OAASC,EAoO3B,OACE,gBAACf,GAAqBxwB,UAAS,CAACwxB,iBAAiB,2BAA0B,UACzE,eAAChB,GAAqBrwB,OAAM,CAC1BsI,QAAS,gBAAGnL,EAAU,EAAVA,WAAU,MAAQ,CAC5B4F,MAAO,gBACPgX,YAAa,WACX,OAAOkX,EAAiB9zB,MAG5BtO,KAAK,gBACLoR,UArZgB,SAAH,GAAwB,IAAlB9C,EAAU,EAAVA,WACvB,EAAoCW,oBAAS,GAAM,WAA5CgU,EAAU,KAAEwf,EAAa,KAChC,EAAgCxzB,oBAAS,GAAM,WAA9ByzB,GAAF,KAAa,MAEVC,uBAAY,WAC5BF,GAAc,GACdX,IAAuB5vB,MAAK,WAC1BuwB,GAAc,QAEf,IAC6B,aA0B/B,OA1B+B,OAAhC,UAAiClmB,GAC/B,IAAMqmB,EAAmBlB,EAAc/iC,KAAI,SAACkkC,GAC1C,GAAIA,EAAIroB,MAAQ+B,EACd,OAAOsmB,KAGX1/B,QAAQ+b,IAAI0jB,GACZjB,EAAiBiB,GACjB,IAAIb,QAAY9vB,MAAMkiB,GAAW,4BAA6B,CAC5DxwB,OAAQ,SACRtB,QAAS,CACP,eAAgB,mBAChB5C,QAASA,GAEXyE,KAAMixB,KAAKC,UAAU,CACnBt2B,GAAIyd,IAENumB,SAAU,WAERf,EAAIlN,GACNiN,IAEA3+B,QAAQ+b,UAAU6iB,EAAIhN,QAExB8M,GAAU,GACVa,GAAY,OACb,sBA+FD,OACE,gBAAC,UAAM,CAACn0B,MAAO,CAAEC,KAAM,GAAI,UACC,IAAzBkzB,EAAch/B,OACb,gBAAC,UAAM,CAAC6L,MAAO,CAAEE,WAAY,UAAW,UACtC,eAAC,QAAI,CACHF,MAAO,CACL0B,WAAY,MACZ4P,cAAe,GACfxL,UAAW,UACX,SAAC,yBAGL,eAACjB,GAAA,QAAgB,CACfvE,QAAS,WACPizB,KACA,SACF,eAAC1iB,GAAA,QAAW,CAACE,KAAM,GAAI7O,MAAO,UAAWzQ,KAAK,sBAGhD,KACJ,eAAC,QAAI,CACHuO,MAAO,CAAEgF,gBAAiB,eAC1BwP,sBAAuB,CAAEvU,KAAM,GAC/B6H,KAAMqrB,EACNjf,WArHa,SAAH,GAAgC,IAApBsgB,EAAY,EAAlBrgB,KACpB,OACE,eAAC,UAAM,UACJqgB,GAEC,gBAAC,YAAQ,CACPC,mBAAmB,EACnBC,mBAAoB,SAACryB,GACfA,EAAOzK,OAAS+a,WAAWC,IAAI,UAAU1N,MACtCmuB,IACHC,GAAU,GAvCnB,SAC0B,GAAD,wBAuChBqB,CAAkBH,EAAavoB,MAExB5J,EAAOzK,OAAS,EACzBu8B,GAAY,GAEZA,GAAY,IAGhBS,gBAAiBjiB,WAAWC,IAAI,UAAU1N,MAC1CwgB,iBAAiB,EAAK,UACtB,eAAC,UAAM,CACL1lB,MAAO,CACLE,WAAY,WACZC,eAAgB,SAChBoG,UAAW,SACXrB,MAAO,MACPE,OAAQ,GACRD,aAAc,GACdH,gBAAiB,UACjBkB,WAAY,EACZ2D,aAAc,GACd1D,YAAa,EACbd,UAAW,IACX,SACF,eAAC,QAAI,CAACrF,MAAO,CAAEkC,MAAO,QAAS,SAAC,aAElC,eAAC4B,GAAA,QAAwB,CACvB9D,MAAO,CACLE,WAAY,SACZqG,UAAW,SACXrB,MAAO,MACPE,OAAQ,GACRD,aAAc,GACde,WAAY,EACZC,YAAa,EACbd,UAAW,IAEb/E,QAAS,WACPP,EAAWyB,SAAS,qBAAsB,CACxCsG,KAAM0sB,KAER,SAEF,gBAAC,UAAM,CACLx0B,MAAO,CACLE,WAAY,SACZqG,UAAW,SACXrB,MAAO,MACPE,OAAQ,GACRD,aAAc,GACdH,gBAAiB3T,EAAW,UAAY,UACxC2oB,YAAa,OACbC,aAAc,CAAE/U,MAAO,EAAGE,OAAQ,GAClC8U,cAAe,GACfC,aAAc,EACdC,UAAW,EACXlU,WAAY,EACZC,YAAa,EACbd,UAAW,IACX,UACF,eAAC,QAAI,CACHrF,MAAO,CACL0B,WAAY,EACZmE,WAAY,OACZD,SAAU,IACV,SACW,MAAZ4uB,OAAY,EAAZA,EAAc7uB,QAEjB,gBAAC,QAAI,CAAC3F,MAAO,GAAG,UAAC,SAAmB,MAAZw0B,OAAY,EAAZA,EAAcvgB,QACzB,MAAZugB,KAAcK,aACb,eAAC,QAAI,CAAC70B,MAAO,CAAE+T,UAAW,SAAUnO,SAAU,IAAK,SACpC,MAAZ4uB,OAAY,EAAZA,EAAcK,eAEf,SA/BW,MAAZL,OAAY,EAAZA,EAAcvoB,WAiEzBwI,UAAW8e,EACX7e,WAAYA,UA0PhB,eAACue,GAAqBrwB,OAAM,CAC1BnR,KAAK,qBACLoR,UA/OqB,SAAH,GAIjB,IAFOiF,EAAI,EADhBmP,MACE/hB,OAAU4S,KAGZ/H,EAAa+0B,2BACb,IAAcp7B,EAAmBV,KAAzB8O,KAEJitB,EAAe,GACnB,GAAIjtB,EAAKkf,WAAY,CACnB,IAAIgO,EAAepO,KAAK6M,MAAM3rB,EAAKmtB,SAC/BC,GAAoB,EACxB,IAAK,IAAM30B,KAASy0B,EACdA,EAAaz0B,GAAOlM,aAAeqF,EACrCw7B,GAAoB,EAEpBH,EAAapgC,KAAK4L,GAGtB,IAAK,IAAMA,KAASw0B,EAClBC,EAAa1E,OAAO/vB,EAAO,GAQ7B,OANK20B,IACH9e,WAAM3U,MACJ,wEAEF1B,EAAW4G,UAENuuB,EACL,eAAC,UAAM,UAAEjN,GAAS+M,KAChB,KAEN,OACE,eAACjxB,GAAA,QAAoB,CACnB/D,MAAO,CAAEC,KAAM,GACfiE,SAA0B,QAAhB/F,UAASC,GAAe,UAAY,SAAS,SACvD,eAAC6K,GAAA,QAAU,CAACuL,sBAAuB,CAAEvU,KAAM,GAAI,SAC7C,gBAAC,UAAM,CAACD,MAAOuuB,GAAkBtqB,UAAU,UACzC,eAAC,UAAM,CACLjE,MAAO,CAAEkF,MAAO,OAAQhF,WAAY,SAAUmF,UAAW,IAAK,SAC9D,eAAC,QAAI,CAACrF,MAAOuuB,GAAkB5oB,MAAM,SAAEmC,EAAKnC,UAG7CmC,EAAKmM,MACJ,gBAAC,UAAM,CAACjU,MAAOuuB,GAAkBlL,QAAQ,UACvC,gBAAC,UAAM,CAACrjB,MAAO,CAAEiG,cAAe,OAAQ,UACtC,gBAAC,QAAI,CAACjG,MAAO,CAAE4F,SAAU,GAAIC,WAAY,QAAS,UAAC,QAC3C,OAER,eAAC,QAAI,CAAC7F,MAAO,CAAE4F,SAAU,IAAK,SAAEkC,EAAKmM,UAEvC,eAAC,UAAM,CAACjU,MAAO,CAAEiG,cAAe,OAAQ,SACtC,eAAC,QAAI,CAACjG,MAAO,CAAE4F,SAAU,IAAK,SAC3BkuB,EAAYhsB,EAAK+sB,qBAK1B,eAAC,UAAM,CAAC70B,MAAOuuB,GAAkB3jB,YAAY,SAC3C,eAAC,QAAI,UAAE9C,EAAKmtB,YAEbntB,EAAKqtB,WACJ,eAACtwB,GAAA,QAAgB,CACfvE,QAAS,aAGTN,MAAO0V,GAASxL,OAAO,SACvB,eAAC,QAAI,CAAClK,MAAO0V,GAASngB,KAAK,SAAC,oBA6KpC2V,QAAS,CAAEyR,YAAa,MAE1B,eAACsW,GAAqBrwB,OAAM,CAC1BnR,KAAK,qBACLoR,UAzKqB,SAAH,GAAwB,IAAlB9C,EAAU,EAAVA,WAC5B,EAAwBW,mBAAS,IAAG,WAA7B/K,EAAI,KAAE0sB,EAAO,KACpB,EAAwB3hB,oBAAS,GAAM,WAAhC00B,EAAI,KAAEC,EAAO,KA2HpB,OACE,eAACC,GAAA,QAAY,CAACt1B,MAAO,CAAEC,KAAM,GAAI,SAC/B,eAAC8D,GAAA,QAAoB,CACnB/D,MAAO,CAAEC,KAAM,GACfiE,SAA0B,QAAhB/F,UAASC,GAAe,UAAY,SAAS,SACvD,eAAC6K,GAAA,QAAU,CAACuL,sBAAuB,CAAEvU,KAAM,GAAI,SAC7C,eAAC,UAAM,CAACD,MAAOuuB,GAAkBtqB,UAAU,SACzC,gBAAC,UAAM,CAACjE,MAAOuuB,GAAkB3jB,YAAY,UAzHvD,WACE,IAAM2X,EAAc,SAACC,EAAUC,GAC7B,IAVkB8S,EAUd7S,EAAU/sB,EACd,IAAK,IAAMgtB,KAAUD,EAEG,OAApBA,EAAQC,SACYvS,IAApBsS,EAAQC,IACY,KAApBD,EAAQC,WAEDD,EAAQC,QAGFvS,IAAboS,EACFE,EAAQD,GAAiBD,EAErBE,EAAQD,WACHC,EAAQD,GAGnB7tB,QAAQ+b,IAAIiW,KAAKC,UAAUnE,KA3BT6S,EA4BL7S,GA3BFoE,YAAcyO,EAAS5vB,OAAS4vB,EAAShgC,KACpD8/B,GAAQ,GAERA,GAAQ,GAyBRhT,EAAQK,IA8DNnF,EAAQ,GAwBZ,OAtBAA,EAAM5oB,KACJ,eAAC,SAAK,CACJgN,eAAgB,QAChBG,aAAc,SAAC0gB,GAAQ,OAAKD,EAAYC,EAAU,UAClDxiB,MAAO0V,GAASzL,MAChBxF,qBAAsB,OACtB7C,YAAa,WAGjB2b,EAAM5oB,KACJ,eAAC,SAAK,CACJgN,eAAgB,YAChBG,aAAc,SAAC0gB,GAAQ,OAAKD,EAAYC,EAAU,SAClDxiB,MAAO0V,GAASkN,SAChBlM,WAAW,EACXC,UAAW,CAAEvM,UAAW,KACxB3F,qBAAsB,OACtB7C,YAAa,UAGjB2b,EAAM5oB,KAlFN,WACE,MAA0C4O,IAAM7C,SAC9C,IAAI2G,aAAU,IACf,WAFMC,EAAa,KAAEC,EAAgB,KAGtC,EAAkC7G,oBAAS,GAAM,WAA1CqiB,EAAS,KAAEC,EAAY,KA4B9B,OACE,eAAC,UAAM,CACLprB,MA5BJ,WACE,OACE,gBAAC,QAAI,WACDmrB,EAAiCiD,EAAM1e,EAAc0B,KAAKpC,MAA9C,mBAAqD,QA0BrEU,cAAeA,EACfwB,SAtBJ,SAAyBvI,GACvBgH,EAAiBhH,GACjBgiB,EAAY,CAACyD,EAAMzlB,EAAMyI,KAAKzY,IAAK,cACjB,IAAdgQ,EAAMyI,IACRga,GAAa,GAEbA,GAAa,IAgBa,SACzBgD,EAAM51B,KAAI,SAACq2B,GAAI,OACd,eAAC,cAAU,CAAC9gB,MAAO8gB,EAAK7f,aA4CrB4uB,IAGT,gBAAC,UAAM,CAACx1B,MAAO,CAAEC,KAAM,GAAI,UAxCzB,eAAC,UAAM,CAACD,MAAO,CAAEiG,cAAe,OAAQ,SACtC,eAAC,QAAI,CACHjG,MAAO,CACL4F,SAAU,GACVgE,YAAa,GACb0H,cAAe,EACf5P,WAAY,EACZwhB,aAAc,SACdrd,WAAY,QACZ,SAAC,mBAiCN0X,KAYMkY,GACD,eAAC,UAAM,CACLtzB,UAAWizB,EACX90B,QAAO,KAAE,kBA1fxB,SAC+B,GAAD,+BA2fPo1B,CAAiB//B,GACvBoK,EAAWyB,SAAS,oBACpB,SACF,eAAC,QAAI,CAACxB,MAAO0V,GAASngB,KAAK,SAAC,+BA6BtC2V,QAAS,CAAEyR,YAAa,SA+BhC,SAASsL,GAAS3X,GAChB,IAAMuN,EAAeje,GAAelD,IACpC,EACE1D,KADYU,EAAc,EAApBoO,KAEFzW,GAF0D,EAAlCyP,UAEJlB,GAAetN,IACnC0rB,EAAc,IAAIhB,GAClByB,EAAO,CACX,CAAE0F,IAAK,MAAO5zB,GAAI,UAClB,CAAE4zB,IAAK,OAAQ5zB,GAAI,WACnB,CAAE4zB,IAAK,MAAO5zB,GAAI,aAClB,CAAE4zB,IAAK,QAAS5zB,GAAI,YACpB,CAAE4zB,IAAK,MAAO5zB,GAAI,UAClB,CAAE4zB,IAAK,MAAO5zB,GAAI,YAClB,CAAE4zB,IAAK,MAAO5zB,GAAI,WA6BpB,SAASk0B,IAEP,IADA,IAAIlH,EAAQ,GACH/K,EAAI,EAAGA,EAAI,GAAIA,IACtB+K,EAAM5oB,KACJ,eAAC,UAAM,CACLqL,MAAO,CACLkF,MAAO,GACPgB,WAAY,EACZiD,IAAK,KAAOqJ,EACZzN,SAAU,WACVK,OAAQ,KACR2c,kBAAmB,GACnB2C,kBAAmBrzB,EAAW,gBAAkB,uBAKxD,OAAOksB,EAGT,IAAMoH,EAAgB,SAACN,GACrB,IAAIrwB,EAAU,GAAG,cAEf,GAAI8qB,EAAOzqB,aAAeqF,EAAgB,CACxC,IAAIoO,EAAOkW,EAAY4G,iBACrB9F,EAAO1qB,WACPypB,GAEEgH,EAAQ/c,EAAKpM,MAAMmjB,MACrB,SAACrP,GAAI,OAAKA,EAAKpb,aAAe0qB,EAAO1qB,cAEvC,IAAK,IAAM+vB,KAAOU,EAAqB,cACjCA,EAAqB,cAAEV,KAASE,EAAK9zB,IACvCyD,EAAQW,KAAKuf,GAAWpM,EAAMgX,EAAO1qB,YAAY,kBAXzD,IAAK,IAAM0qB,KAAUxO,EAAQ,KAiB7B,OAAOtc,GAGH8wB,EAASjkB,iBAAO,MAEtB,OACE,gBAACy0B,GAAA,QAAY,CACXt1B,MAAO,CACLqF,UAAW,EACXa,WAAY,EACZoL,cAAe,GACftL,aAAc,IACd,UAEF,eAACiD,GAAA,QAAU,CACTgc,YAAY,EACZC,eAAgB,GAChBC,gCAAgC,EAChCnlB,MAAO,CAAEkG,WAAY,IACrBrE,IAAKijB,EAAO,SACZ,eAAChI,GAAA,QAAI,CAAC9c,MAAO,CAAEiG,cAAe,OAAQ,SACnCwY,EAAKruB,KAAI,SAACi0B,GACT,OACE,eAAC,UAAM,UACL,eAAC,UAAM,CACLrkB,MAAO,CACLoG,YAAa/U,EAAW,UAAY,UACpC0wB,kBAAmB,EACnB7c,MAAO,QACP,SACF,eAAC,QAAI,CACHlF,MAAO,CACL8F,UAAW,SACX5D,MAAO7Q,EAAW,UAAY,UAC9B6T,MAAO,IACP,SACDmf,EAAKF,iBAQpB,eAAClb,GAAA,QAAU,CACTmc,cAAe,CAAEL,EAAG,EAAGtF,EAAG,KAC1BtK,8BAA8B,EAC9BkQ,SAAS,EAAM,SACf,gBAACvI,GAAA,QAAI,CAAC9c,MAAO,CAAEiG,cAAe,OAAQ,UACpC,eAAC6W,GAAA,QAAI,CACH9c,MAAO,CACLG,eAAgB,eAChBiF,OAAQ,KACR,SAvHE,CACZ,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,YAgGehV,KAAI,SAACof,GACV,OACE,eAAC,QAAI,CACHxP,MAAO,CACL8F,UAAW,SACX5D,MAAO7Q,EAAW,UAAY,UAC9BqQ,WAAY,MACZ0D,OAAQ,GACRF,MAAO,GACPmB,YAAa,EACbD,YAAa/U,EAAW,UAAY,WACpC,SACDme,SAMT,eAACvG,GAAA,QAAU,CACTgc,YAAY,EACZC,eAAgB,GAChBI,iBAAkB,SAClBH,gCAAgC,EAChCE,SAAS,EACTE,oBAAqB,EACrBC,SAAU,SAAC70B,GAAC,OACVm0B,EAAO3jB,QAAQqe,SAAS,CACtBuF,EAAGp0B,EAAE80B,YAAYL,cAAcL,EAC/BrF,UAAU,EACVgG,iBAAiB,KAGrBC,sBAAuB,SAACh1B,GAAC,OACvBm0B,EAAO3jB,QAAQqe,SAAS,CACtBuF,EAAGp0B,EAAE80B,YAAYL,cAAcL,EAC/BrF,UAAU,EACVgG,iBAAiB,KAEpB,SACD,eAAC5I,GAAA,QAAI,CAAC9c,MAAO,CAAEiG,cAAe,OAAQ,SACnCwY,EAAKruB,KAAI,SAACi0B,GACT,OACE,gBAAC,UAAM,WACJI,IACD,eAAC,UAAM,CAAgBzkB,MAAO,CAAEkF,MAAO,IAAK,SACzCyf,EAAcN,IADJA,EAAKF,KAGlB,eAAC,UAAM,CACLnkB,MAAO,CACLoF,OAAQ,OACRF,MAAO,EACPF,gBAAiB3T,EAAW,UAAY,+BAchE,IAAMk9B,GAAoB9oB,WAAWC,OAAO,CAC1CzB,UAAW,CACThE,KAAM,GAGR6X,OAAQ,CACNzS,UAAW,GACXnF,WAAY,SACZC,eAAgB,SAChB+E,MAAO,QAETme,QAAS,CACPnjB,WAAY,SACZE,OAAQ,GACRgG,YAAa,QACbC,YAAa,EACb2D,QAAS,IAEXsZ,MAAO,CACLje,UAAW,GACXke,QAAS,OACTpjB,eAAgB,cAElBwF,MAAO,CACLC,SAAU,GACVM,WAAY,IAEd7B,KAAM,CACJa,MAAO,OACPE,OAAQ,KAEVwF,YAAa,CACX3K,KAAM,EACNG,OAAQ,GACR+E,aAAc,EACdD,MAAO,MACP8E,QAAS,IAEXwZ,gBAAiB,CACfte,MAAO,OACP/E,eAAgB,SAChBD,WAAY,SACZmF,UAAW,GACXW,aAAc,IAEhByd,OAAQ,CACNve,MAAO,IACPE,OAAQ,KAEVse,aAAc,CACZzd,cAAe,MACf2K,SAAU,OACVxQ,OAAQ,GACR4F,aAAc,GAEhB2d,WAAY,CACVze,MAAO,IACPE,OAAQ,IACR1D,WAAY,IACZtB,OAAQ,GAEVsgB,WAAY,CACV9a,SAAU,GACVC,WAAY,UAIV6P,GAAWjQ,WAAWC,OAAO,CACjCkd,SAAU,CACRxd,OAAQ,IACRhF,OAAQ,GACRiG,YAAa,EACb2D,QAAS,IAEXC,MAAO,CACL7E,OAAQ,GACRhF,OAAQ,GACRiG,YAAa,EACb2D,QAAS,IAEXgY,cAAe,CACb5c,OAAQ,GACRgP,eAAgB,GAChB/N,YAAa,EACb2D,QAAS,GACT7D,YAAa,GACbD,WAAY,IAEd3Q,KAAM,CACJqQ,SAAU,GACVoa,WAAY,GACZna,WAAY,OACZoc,cAAe,KAEjB/X,OAAQ,CACNhK,WAAY,SACZC,eAAgB,SAChBkJ,gBAAiB,GACjBC,kBAAmB,GACnBnE,aAAc,EACdiV,UAAW,GAEbub,WAAY,CACVzwB,MAAO,IACPE,OAAQ,GACRiP,iBAAkB,GAClBnU,WAAY,SACZC,eAAgB,SAChBgF,aAAc,GAEhBywB,SAAU,CACRhwB,SAAU,GACVoa,WAAY,GACZna,WAAY,OACZoc,cAAe,IACf/f,MAAO,SAET2zB,eAAgB,CACdjwB,SAAU,GACVoa,WAAY,GACZna,WAAY,OACZoc,cAAe,IACf/f,MAAO,SAET4zB,UAAW,CACT71B,KAAM,GACNoG,YAAa,EACb0vB,gBAAiB,WCh9BfzzB,IDo9BgBmD,WAAWC,OAAO,CACtCzB,UAAW,CACThE,KAAM,EACNC,WAAY,UAEd6wB,cAAe,CACb9qB,cAAe,MACf/F,WAAY,SACZqG,UAAW,SACXrB,MAAO,MACPE,OAAQ,GACRD,aAAc,GACdkB,YAAa,EACbD,YAAa,OACb2b,kBAAmB,EACnB/H,YAAa,OACbC,aAAc,CAAE/U,MAAO,EAAGE,OAAQ,GAClC8U,cAAe,GACfC,aAAc,EACdC,UAAW,EACXlU,WAAY,EACZC,YAAa,EACbd,UAAW,IAEb2wB,0BAA2B,CACzB91B,WAAY,SACZqG,UAAW,SACXrB,MAAO,MACPE,OAAQ,GACRD,aAAc,GACdkB,YAAa,EACbD,YAAa,OACb2b,kBAAmB,EACnB/H,YAAa,OACbC,aAAc,CAAE/U,MAAO,EAAGE,OAAQ,GAClC8U,cAAe,GACfC,aAAc,EACdC,UAAW,EACXlU,WAAY,EACZC,YAAa,EACbd,UAAW,IAEb9P,KAAM,CACJ0K,KAAM,EACN2F,SAAU,GACVE,UAAW,SACXT,UAAW,EACXW,aAAc,GAEhBD,MAAO,CACLb,MAAO,OACPE,OAAQ,OACRD,aAAc,MCxgCJ5C,sBAEC,SAAS0zB,GAAc,GAAiB,IAAfl2B,EAAU,EAAVA,WAChC8K,EAAQC,sBACR5Z,EAAU0O,GAAenN,GACzBpB,EAAWuO,GAAetN,GAChC,EAA0DoO,mBAAS,GAAE,WAA9Dw1B,EAAqB,KAAEC,EAAwB,KAEtD,SAAS5C,IACP7vB,MAAMkiB,GAAW,0BAA2B,CAC1CxwB,OAAQ,MACRtB,QAAS,CACP,eAAgB,mBAChB5C,QAASA,KAEVyS,MAAK,SAAC6vB,GACPA,EAAIj+B,OAAOoO,MAAK,SAACwvB,GACfA,EAAgBvM,KAAK6M,MAAMN,GAC3BgD,EAAyBhD,EAAch/B,cAK7C+M,qBAAU,WACRqyB,IACA6C,aAAY,WACV7C,MACC,OACF,IAEH,IAAMloB,EACJ,eAAClH,GAAA,QAAK,CACJnE,MAAO,CACLoF,OAAQ,GACRF,MAAO,IAETd,OAAQrB,EAAQ,OAIdX,EACJ,gBAAC,UAAM,CACLpC,MAAO,CACLiG,cAAe,MACff,MAAO,IACP/E,eAAgB,iBAChB,UACF,eAAC0E,GAAA,QAAgB,CACfvE,QAAS,WACPP,EAAWyB,SAAS,iBAEtBxB,MAAO,CAAEiG,cAAe,MAAO/F,WAAY,UAAW,SACtD,eAACqR,GAAA,QAAY,CACX9f,KAAK,eACLsf,KAAM,GACN7O,MAAO7Q,EAAWwZ,EAAM,mBAAqBA,EAAM,uBAGvD,eAAChG,GAAA,QAAgB,CACfvE,QAAS,WACPP,EAAWyB,SAAS,aACpB,SACF,eAAC60B,GAAA,QAAQ,CACP5kC,KAAK,WACLsf,KAAM,GACN7O,MAAO7Q,EAAWwZ,EAAM,mBAAqBA,EAAM,uBAGvD,gBAAChG,GAAA,QAAgB,CACfvE,QAAS,WACPP,EAAWyB,SAAS,sBACpB,UACF,eAAC+P,GAAA,QAAY,CACX9f,KAAK,OACLsf,KAAM,GACN7O,MAAO7Q,EAAWwZ,EAAM,mBAAqBA,EAAM,qBAEpDqrB,EAAwB,EACvB,eAAC,UAAM,CACLl2B,MAAO,CACL+E,SAAU,WACVC,gBAAiB3T,EAAW,MAAQ,OACpC8T,aAAc,GACdmE,kBAAmB,EACnB+Q,OAAQ,EACRlR,KAAM,GACN,SACF,eAAC,QAAI,UAAE+sB,MAEP,WAKV,OACE,gBAAC,GAAMzzB,UAAS,WACd,eAAC,GAAMG,OAAM,CACXnR,KAAK,cACLoR,UAAWyoB,GACXpgB,QAAS,CACP4M,OAAQ,kBACN,eAAC,UAAM,CAAC9X,MAAO,CAAEsR,cAAe,IAAK,SACnC,eAAClG,GAAM,CACLC,cAAeA,EACfjJ,eAAgBA,EAChBuD,MAAM,iBAMhB,eAAC,GAAM/C,OAAM,CACXnR,KAAK,WACLoR,UAAWiwB,GACX5nB,QAAS,CACPvI,aAAa,KAGjB,gBAAC,GAAMowB,MAAK,CAACrwB,cAAe,CAAEia,YAAa,YAAa,UACtD,eAAC,GAAM/Z,OAAM,CAACnR,KAAK,eAAeoR,UAAWgtB,KAC7C,eAAC,GAAMjtB,OAAM,CAACnR,KAAK,cAAcoR,UAAWwrB,QAE9C,eAAC,GAAMzrB,OAAM,CACXnR,KAAK,oBACLoR,UAAWqwB,GACXhoB,QAAS,CAAEvI,aAAa,KAET,QAAhBxE,UAASC,IACR,eAAC,GAAMwE,OAAM,CACXnR,KAAK,kBACLoR,UAAW+gB,GACX1Y,QAAS,CAAEvI,aAAa,EAAOga,YAAa,oBCvJvC,QACb,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,kBAAmB,UACnB,mBAAoB,UACpB,mBAAoB,UACpB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,oBAAqB,UACrB,mBAAoB,UACpB,mBAAoB,UACpB,mBAAoB,UACpB,mBAAoB,UACpB,mBAAoB,UACpB,mBAAoB,UACpB,mBAAoB,UACpB,mBAAoB,UACpB,mBAAoB,UACpB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,gBAAiB,W,yPC7DZ,IAAM2Z,GAAuB,CAClC7kC,KAAM,cACN8kC,MAIO,IAAIC,MACT,GACA,CACE5jB,IAAG,SAAC6jB,EAAQhlC,GACV,OAAOilC,GAAajlC,OAM5B,IAAMilC,GAAe,SAACjlC,GAAI,MAAM,CAC9BklC,eAAgB,SAAClwB,GAAK,OAGxB,SAAyB,GAAkB,IAAhBhV,EAAI,EAAJA,KAAMuO,EAAK,EAALA,MAC/B,EAA4CyF,WAAWmxB,QAAQ52B,GAAvDoF,EAAM,EAANA,OAAQsnB,EAAS,EAATA,UAAcmK,EAAS,UACvC,OACE,eAACtlB,GAAA,QAAY,CACX9f,KAAMA,EACNsf,KAAM3L,EACNlD,MAAOwqB,EACP1sB,MAAO62B,IAVgBC,C,mWAAgB,EAAErlC,QAASgV,O,6PCjBjD,IAAMswB,GAAmB,CAC9BtlC,KAAM,UACN8kC,MAIO,IAAIC,MACT,GACA,CACE5jB,IAAG,SAAC6jB,EAAQhlC,GACV,OAAOilC,GAAajlC,OAM5B,IAAMilC,GAAe,SAACjlC,GAAI,MAAM,CAC9BklC,eAAgB,SAAClwB,GAAK,OAGxB,SAAqB,GAAkB,IAAhBhV,EAAI,EAAJA,KAAMuO,EAAK,EAALA,MAC3B,EAA4CyF,WAAWmxB,QAAQ52B,GAAvDoF,EAAM,EAANA,OAAQsnB,EAAS,EAATA,UAAcmK,EAAS,UACvC,OACE,eAACvc,GAAA,QAAO,CAAC7oB,KAAMA,EAAMsf,KAAM3L,EAAQlD,MAAOwqB,EAAW1sB,MAAO62B,IANnCG,C,mWAAY,EAAEvlC,QAASgV,OCrB7C,IAAMmf,GAAW,gC,mDCyBlBqR,GAAgB10B,qBAEP,SAAS20B,KACpB,MAA4Cx2B,mBAAS,IAAG,WAAhDy2B,EAAa,KAAEC,EAAgB,KACjClmC,EAAU0O,GAAenN,GAGzB,SACS4kC,IAAgB,4CAkB9B,OAlB8B,OAA/B,YACI,IACI7D,QAAY9vB,MAAM4zB,+DAAgC,CAClDliC,OAAQ,MACRtB,QAAS,CACL,eAAgB,mBAChB,QAAW5C,KAGfqmC,QAAiB/D,EAAIj+B,OAQzB,OAPAgiC,EAAW3Q,KAAK6M,MAAM8D,GAAU1/B,MAAK,SAAS81B,EAAGC,GAC7C,IAAMC,EAAQF,EAAE/mB,MAAMnK,cAChBsxB,EAAQH,EAAEhnB,MAAMnK,cACtB,OAAQoxB,EAAQE,GAAU,EAAKF,EAAQE,EAAS,EAAI,KAGxDqJ,EAAiBG,GACVA,MACV,sBArBDr2B,qBAAU,WACNm2B,MACD,IAqBH,MAAoC32B,oBAAS,GAAM,WAA5CgU,EAAU,KAAEwf,EAAa,KAE1Bzf,EAAY2f,uBAAY,WAC1BF,GAAc,GACdkD,EAAiB,IACjBC,IAAmB1zB,MAAK,SAAA4zB,GAAQ,OAAIrD,GAAc,QACnD,IAsBH,OACI,gBAAC+C,GAAcx0B,UAAS,CAACwxB,iBAAiB,YAAW,UACjD,eAACgD,GAAcr0B,OAAM,CACjBsI,QAAS,CAKLvI,aAAa,GAEjBlR,KAAK,YACLoR,UA/BM,SAAH,GAAwB,IAAlB9C,EAAU,EAAVA,WACjB,OACI,gBAACkJ,GAAA,QAAU,CAACujB,eAAgB,eAACC,GAAA,QAAc,CAAC/X,WAAYA,EAAYD,UAAWA,IAAc,UAC9D,KAAb,MAAb0iB,OAAa,EAAbA,EAAehjC,QAAe,eAAC4oB,GAAA,QAAI,UAAC,yBAA8B,KACrD,MAAboa,OAAa,EAAbA,EAAe/mC,KAAI,SAAConC,GACjB,OACI,eAAC3yB,GAAA,QAAgB,CACbvE,QAAS,WACLP,EAAWyB,SAAS,eAAgB,CAAEsG,KAAM0vB,KAEhDx3B,MAAO8wB,GAAcC,cAAc,SAEnC,eAAChU,GAAA,QAAI,CAAC/c,MAAO8wB,GAAcv7B,KAAK,SAAEiiC,EAAQ5wB,SADrC4wB,EAAQ3jC,cAsB7B,eAACojC,GAAcr0B,OAAM,CACjBnR,KAAK,eACLoR,UAAW40B,GACXvsB,QAAS,CAAEyR,YAAa,SAOxC,IAAM8a,GAAe,SAAH,GAAqC,IAAd3vB,EAAI,EAAtBmP,MAAQ/hB,OAAU4S,KACrC,EAA0BpH,mBAAS,IAAG,WAA9Bg3B,EAAI,KAAEC,EAAO,KACrB,EAA0Cj3B,oBAAS,GAAM,WAAjDk3B,EAAY,KAAEC,EAAe,KACrC,EAA0Bn3B,mBAAS,IAAG,WAA9B/K,EAAI,KAAE0sB,EAAO,KACrB,EAA4B3hB,mBAAS,IAAG,WAAhCslB,EAAK,KAAEC,EAAQ,KACvB,EAAwCvlB,mBAAS,IAAG,WAA5Co3B,EAAW,KAAEC,EAAc,KACnC,EAAkCr3B,mBAAS,IAAG,WAAtCgtB,EAAQ,KAAEsK,EAAW,KAC7B,EAA8Bt3B,mBAAS,KAAI,WAAnC2B,EAAM,KAAE41B,EAAS,KACzB,EAAgDv3B,oBAAS,GAAM,WAAvDw3B,EAAe,KAAEC,EAAkB,KAC3C,EAA0Cz3B,oBAAS,GAAM,WAAjD03B,EAAY,KAAEC,EAAe,KAC/BnnC,EAAU0O,GAAenN,GA6D/B,SAAS6lC,EAAqB3iC,GAC1B,IAAK,IAAMmtB,KAAShb,EAAKlS,OACrB,GAAIktB,EAAMX,iBACiB/R,IAAnBza,EAAKmtB,EAAMvyB,KAAwC,OAAnBoF,EAAKmtB,EAAMvyB,KAE3C,YADA4nC,GAAmB,GAK/BA,GAAmB,GApEvBj3B,qBAAU,WAENo3B,EAAqB3iC,GAErB+N,MAAMkiB,GAAW,yBAA0B,CACvCxwB,OAAQ,MACRtB,QAAS,CACL,eAAgB,mBAChB,QAAW5C,KAEhByS,KAAK,WAAD,WAAC,UAAOmE,GACX,GAAIA,EAAKwe,GAAI,CACT,IAAIsN,SAAkB9rB,EAAK0e,QAAQp2B,KAAI,SAAA4E,GACnC,MAAO,CACH4R,MAAO5R,EACPzE,GAAIyE,MAGZixB,EAAS2N,OAEhB,mDAVO,IAYRlwB,MAAMkiB,GAAW,aAAc,CAC3BxwB,OAAQ,MACRtB,QAAS,CACL,eAAgB,mBAChB,QAAW5C,KAEhByS,KAAK,WAAD,WAAC,UAAOmE,GACX,GAAIA,EAAKwe,GAAI,CACT,IAAIoH,SAAkB5lB,EAAK0e,QAAQp2B,KAAI,SAAA49B,GACnC,MAAO,CACHpnB,MAAOonB,EAAQF,YACfv9B,GAAIy9B,EAAQ/hB,QAGpB+rB,EAAYtK,OAEnB,mDAVO,IAYRhqB,MAAMkiB,GAAW,oCAAqC,CAClDxwB,OAAQ,MACRtB,QAAS,CACL,eAAgB,mBAChB,QAAW5C,KAEhByS,KAAK,WAAD,WAAC,UAAOmE,GACX,GAAIA,EAAKwe,GAAI,CACT,IAAIgJ,SAAgBxnB,EAAK0e,QAAQp2B,KAAI,SAAAmoC,GACjC,MAAO,CACH3xB,MAAO2xB,EACPhoC,GAAIgoC,MAGZR,EAAezI,OAEtB,mDAVO,MAWT,IAcH,IAAMkJ,EAAc,SAAC1wB,EAAM5W,GACvB,IAAIunC,EAAgB,GACpB,IAAK,IAAM9V,KAAUhtB,EACjB,GAAIA,EAAKgtB,GAAQ+V,cAAe,CAC5BD,GAAiB9iC,EAAKgtB,GACtB,MAGR,GAAoC,OAAhCiE,KAAKC,UAAUlxB,EAAK,KAAK,IAAgC,QAAjBmS,EAAK6wB,QAC7C,IAAK,IAAMhW,KAAUhtB,EACK,KAAlB8iC,EACAA,EAAgB,IAEhBA,GAAiB,IAErBA,GAAiB9V,EAAS,IAAMhtB,EAAKgtB,GAG7C,IAAMiW,EAAS9wB,EAAKjU,IAAM4kC,EAE1B,GADA7jC,QAAQ+b,IAAI,iBAAmBinB,GAC1BA,EAuBE,CACH,IAAItc,EAAW,IAAIC,SACnB,IAAK,IAAMpH,KAAQxe,EACVwe,EAAK3X,SAAS,WAGf8e,EAASE,OAAOrH,EAAM,CAElBnB,IAAKrd,EAAKwe,GAAMnB,IAChBvhB,KAAM0iB,EACN/G,KAAM,cANVkO,EAASE,OAAOrH,EAAMxe,EAAKwe,IAUnCzQ,MAAMk1B,EAAQ,CACVjjC,KAAM2lB,EACNiZ,SAAU,SACVn/B,OAAQ0S,EAAK6wB,QACb7kC,QAAS,CACL5C,QAASA,KAEdyS,MAAK,SAAC6vB,GAELyE,EAAUzE,EAAInxB,QACdmxB,EAAIj+B,OAAOoO,MAAK,SAACpO,GACb,IACI,IAAMsjC,EAAQjS,KAAK6M,MAAMl+B,GACzBoiC,EAAQkB,GACV,MAAO7G,GACL2F,EAAQpiC,eAnDpBmO,MACIk1B,EACA,CACIxjC,OAAQ0S,EAAK6wB,QACb7kC,QAAS,CACL,eAAgB,mBAChB5C,QAASA,GAEbyE,KAAsC,OAAhCixB,KAAKC,UAAUlxB,EAAK,KAAK,IAAgC,QAAjBmS,EAAK6wB,QAAoB/R,KAAKC,UAAUlxB,QAAQya,IAEpGzM,MAAK,SAAC6vB,GAEJyE,EAAUzE,EAAInxB,QACdmxB,EAAIj+B,OAAOoO,MAAK,SAACpO,GACb,IACI,IAAMsjC,EAAQjS,KAAK6M,MAAMl+B,GACzBoiC,EAAQkB,GACV,MAAO7G,GACL2F,EAAQpiC,WA6C5B,SAASiyB,EAAmB1E,GACxB,GAAIA,EAAY,KAEZ,OAAQA,EAAY,MAChB,IAAK,QACDA,EAAM5X,QAAU8a,EAChB,MAEJ,IAAK,WACDlD,EAAM5X,QAAUwiB,EAChB,MAEJ,IAAK,cACD5K,EAAM5X,QAAU4sB,EAK5B,IAAIva,EAAQ,GACZ,IAAK,IAAMgK,KAAUzE,EAAM5X,QACvBqS,EAAM5oB,KACF,eAAC,cAAU,CAACgR,MAAO4hB,EAAO3gB,SAGlC,OAAO2W,EA7BP6a,IACAC,GAAgB,GAChBG,EAAY1wB,EAAM5W,IAiTtB,IAAM4nC,EAAoB,SAAChW,GACvB,MAA0CpiB,qBAAU,WAA7C4G,EAAa,KAAEC,EAAgB,KAChCwxB,EAAa,CAAC,QAAS,QAEvBC,EAAeD,EAAWzxB,EAAgB,GAgBhD,OACI,eAAC,UAAM,CAACtH,MAAOgE,GAAOC,UAAWsB,MAAM,IAAG,SACtC,eAAC,UAAM,CACHqB,MAAOkc,EAAMlc,MACbU,cAAeA,EACf1P,MAAOohC,EACPlwB,SAAU,SAAAvI,GAAK,OAlBF,SAAC3I,GAEtB,GADA2P,EAAiB3P,GACC,IAAdA,EAAMoR,IAAW,CACjB,IAAI0Z,EAAU/sB,EACd+sB,EAAQI,EAAMvyB,KAAM,EACpB8xB,EAAQK,QACL,GAAkB,IAAd9qB,EAAMoR,IAAW,CACxB,IAAI0Z,EAAU/sB,EACd+sB,EAAQI,EAAMvyB,KAAM,EACpB8xB,EAAQK,IASeuW,CAAiB14B,IACpCqB,YAAakhB,EAAMX,UAAYW,EAAMlc,MAAQ,eAAiBkc,EAAMlc,MAAQ,GAAG,SAC9EmyB,EAAW3oC,KAvBH,SAAC4oC,GAAY,OAC9B,eAAC,cAAU,CAACrzB,MAAOqzB,YA8T3B,OACI,eAACj1B,GAAA,QAAoB,CACjBG,SAA0B,QAAhB/F,UAASC,GAAe,UAAY,SAAS,SACvD,eAAC6K,GAAA,QAAU,CAACjJ,MAAO,CAACoF,OAAQ,QAAQ,SAChC,gBAAC0X,GAAA,QAAI,CAAC9c,MAAOuuB,GAAkBtqB,UAAU,UACrC,eAAC6Y,GAAA,QAAI,CAAC9c,MAAO,CAAEkF,MAAO,OAAQqe,QAAS,OAAQrjB,WAAY,UAAW,SAClE,eAAC6c,GAAA,QAAI,CAAC/c,MAAOuuB,GAAkB5oB,MAAM,SAAEmC,EAAKlB,UAG/CkB,EAAKjU,KAEF,eAACipB,GAAA,QAAI,CAAC9c,MAAOuuB,GAAkBlL,QAAQ,SACnC,eAACtG,GAAA,QAAI,CAAC/c,MAAO,CAAE4F,SAAU,IAAK,SAAEkC,EAAKjU,QAG7C,eAACipB,GAAA,QAAI,CAAC9c,MAAOuuB,GAAkB3jB,YAAY,SAtmB3D,SAAkChV,GAC9B,IAAM2sB,EAAc,SAACC,EAAUC,GAC3B,IAAIC,EAAU/sB,EACd,IAAK,IAAMgtB,KAAUD,EACO,OAApBA,EAAQC,SAAwCvS,IAApBsS,EAAQC,IAA6C,KAApBD,EAAQC,WAC9DD,EAAQC,QAGNvS,IAAboS,EACAE,EAAQD,GAAiBD,EAErBE,EAAQD,WACDC,EAAQD,GAGvB7tB,QAAQ+b,IAAI+R,GACZL,EAAQK,GACR4V,EAAqB5V,IAmGrBnF,EAAQ,GAEZ,SAAS2b,EAAkBpW,GACvB,IAAMqW,EAAe,GASrB,IAAIC,EAAY,GAChBA,EAAUzkC,KACN,eAACooB,GAAA,QAAI,CACD/c,MAAO,CACH4F,SAAU,GACVgE,YAAa,EACb0H,cAAe,EACf5P,WAAY,GACd,SACDohB,EAAMX,UAAYW,EAAMlc,MAAQ,eAAiBkc,EAAMlc,SAE/D,kBAEGwyB,EAAUzkC,KACN,eAAC6P,GAAA,QAAS,CACN7C,eAAgB,OAChBG,aAAc,SAAC0gB,GAAQ,OAxBnC,SAA2BA,EAAU6W,EAAWvW,GAC5CqW,EAAaE,GAAa7W,EAC1B,IAAI8W,EAAkB,GACtB,IAAK,IAAM1hC,KAAS7G,OAAOwoC,OAAOJ,GAC9BG,EAAgB3kC,KAAKiD,GAEzB2qB,EAAY+W,EAAiBxW,EAAMvyB,IAkBCipC,CAAkBhX,EAAUM,EAAM2W,YAAYC,GAAS9yB,MAAOkc,IAC1F9iB,MAAO0V,GAASsM,cAChBvd,qBAAsB,OACtB7C,YAAakhB,EAAM2W,YAAYC,GAASvX,UAAYW,EAAM2W,YAAYC,GAAS9yB,MAAQ,eAAiBkc,EAAM2W,YAAYC,GAAS9yB,UAP/I,IAAK,IAAM8yB,KAAW5W,EAAM2W,YAAW,KAWvC,OAAOL,EAwEX,IArEA,IAAMO,EAA4B,SAAC7W,GAC/B,MAA4CpiB,mBAAS,IAAG,WAAhD4G,EAAa,KAAEC,EAAgB,KACvC,EAAoC7G,oBAAS,GAAM,WAA3CqiB,EAAS,KAAEC,EAAY,KAuB/B,OACI,eAAC,UAAM,CAAChjB,MAAO0V,GAAS9M,cAAerD,MAAM,IAAG,SAC5C,eAAC,UAAM,CACHoW,aAAa,EACb/jB,MAAOmrB,EAlBnB,WACI,IAAI6W,EAAatyB,EAAclX,KAAI,SAACypC,GAChC,OAAO/W,EAAM5X,QAAQ2uB,EAAY7wB,KAAKpC,MAAQ,QAElD,GAAIgzB,EAAWzlC,OAAS,EAAE,CACtB,IAAI2lC,EAAcF,EAAWG,IAAI,GAIjC,OAHAD,EAAcA,EAAY99B,QAAQ,KAAM,IACxC49B,EAAWtJ,QAAS,EAAG,GACvBsJ,EAAWjlC,KAAKmlC,GACTF,EAEP,OAAO9W,EAAMX,UAAYW,EAAMlc,MAAQ,eAAiBkc,EAAMlc,MAOvCozB,GAA4BlX,EAAMlc,MACrDU,cAAeA,EACfwB,SAAU,SAAAvI,GAAK,OA5B3B,SAAqBA,GACjByiB,GAAa,GACbzb,EAAiBhH,GACjB,IAAM05B,EAAejmB,MAAMkmB,QAAQ35B,GAASA,EAAMnQ,KAAI,SAACypC,GACnD,OAAO/W,EAAM5X,QAAQ2uB,EAAY7wB,KAAKzY,MACrCuyB,EAAM5X,QAAQ3K,EAAMyI,KAAKzY,GAC9BgyB,EAAY0X,EAAcnX,EAAMvyB,IAsBL4pC,CAAY55B,IAAO,SACrCinB,EAAmB1E,QAmClC,cAGE,IAAM1V,EAAOxX,EAAO4c,GAAGpF,KACV,YAATA,EACAmQ,EAAM5oB,KACFmkC,EAAkBljC,EAAO4c,KAEb,WAATpF,EACPmQ,EAAM5oB,KACF,eAAC6P,GAAA,QAAS,CACN7C,eAAgB,OAChBkhB,gBAAiB,SACjB/gB,aAAc,SAAC0gB,GAAQ,OAAKD,EAAYC,EAAU5sB,EAAO4c,GAAGjiB,KAC5DyP,MAAO0V,GAASzL,MAChBxF,qBAAsB,OACtB7C,YAAahM,EAAO4c,GAAG2P,UAAYvsB,EAAO4c,GAAG5L,MAAQ,eAAiBhR,EAAO4c,GAAG5L,SAGxE,gBAATwG,EACPmQ,EAAM5oB,KAAKukC,EAAkBtjC,EAAO4c,KACpB,aAATpF,EACPmQ,EAAM5oB,KAnDS,SAACmuB,GACpB,MAA4CpiB,mBAAS,IAAI2G,aAAU,IAAG,WAA9DC,EAAa,KAAEC,EAAgB,KACvC,EAAoC7G,oBAAS,GAAM,WAA3CqiB,EAAS,KAAEC,EAAY,KAiB/B,OACI,gBAAC,UAAM,CACHhjB,MAAO0V,GAAS9M,cAChBhR,MAlBR,WACI,OAAO,gBAACmlB,GAAA,QAAI,WAAGgG,EAAkFD,EAAM5X,QAAQ5D,EAAc0B,IAAM,GAAGpC,MAA1G,UAAYkc,EAAMlc,OAASkc,EAAMX,UAAY,eAAiB,IAAkD,QAkBxI7a,cAAeA,EACfwB,SAhBR,SAAyBvI,GACrBgH,EAAiBhH,GACjBgiB,EAA0B,IAAdhiB,EAAMyI,SAAYoH,EAAY0S,EAAM5X,QAAQ3K,EAAMyI,IAAM,GAAGzY,GAAIuyB,EAAMvyB,IAC/D,IAAdgQ,EAAMyI,IACNga,GAAc,GAEdA,GAAa,IAUa,UAC1B,eAAC,cAAU,CAACrd,MAAO,MAClB6hB,EAAmB1E,MAyBbG,CAAertB,EAAO4c,KACjB,wBAATpF,EACPmQ,EAAM5oB,KAAKglC,EAA0B/jC,EAAO4c,KAC5B,cAATpF,EACPmQ,EAAM5oB,KACF,eAAC6P,GAAA,QAAS,CACN7C,eAAgB,YAChBkhB,gBAAiB,SACjB/gB,aAAc,SAAC0gB,GAAQ,OAAKD,EAAYC,EAAU5sB,EAAO4c,GAAGjiB,KAC5DyP,MAAO0V,GAASkN,SAChBlM,WAAW,EACXjS,qBAAsB,OACtB7C,YAAahM,EAAO4c,GAAG2P,UAAYvsB,EAAO4c,GAAG5L,MAAQ,eAAiBhR,EAAO4c,GAAG5L,SAGxE,eAATwG,IACFwqB,GACDC,GAAgB,GAEpBta,EAAM5oB,KAlPa,SAACmuB,GACxB,IAAM1J,EAAS,sBAAG,YACd,IAAI3I,QAAegI,2BAAoC,CACnDY,eAAe,IAEd5I,EAAO2pB,WACR7X,EAAY9R,EAAQqS,EAAMvyB,OAEjC,kBAPc,mCASf,OACI,eAACusB,GAAA,QAAI,UAED,eAACjY,GAAA,QAAgB,CACbvE,QAAS,WACL8Y,KAEJpZ,MAAO,CACHoF,OAAQ,GACRjF,eAAgB,SAChBD,WAAY,SACZiF,aAAc,EACdkE,gBAAiB,EACjBpD,cAAe,MACfjB,gBAAiB,UACjBoP,eAAgB,GAChBC,iBAAkB,GACpB,SACF,gBAAC,UAAM,CACHrU,MAAO,CACHC,KAAM,EACNgG,cAAe,MACfb,OAAQ,OACRiP,iBAAkB,GAClBrP,gBAAiB,WACnB,UACF,eAAC,UAAM,CACHhF,MAAO,CACHC,KAAM,EACNE,eAAgB,SAChBD,WAAY,SACZkF,OAAQ,OACRD,aAAc,GACdH,gBAAiB,WACnB,SACDrP,GAAQA,EAAU,MAALmtB,OAAK,EAALA,EAAOvyB,IACjB,eAAC4T,GAAA,QAAK,CACFC,OAAQ,CAAE4O,IAAKrd,EAAKmtB,EAAMvyB,IAAIyiB,KAC9BhT,MAAO,CAAEkF,MAAO,MAAOE,OAAQ,MAAOD,aAAc,MAGxD,eAAC,mBAAe,CAACkR,KAAMkE,WAASxJ,KAAM,GAAI7O,MAAO,WAGzD,eAAC,UAAM,CACHlC,MAAO,CACHgF,gBAAiB,UACjB/E,KAAM,EACNmF,OAAQ,OACRjF,eAAgB,SAChBD,WAAY,UACd,SACF,eAAC6c,GAAA,QAAI,CACD/c,MAAO,CACH4F,SAAU,IACZ,SACDjQ,GAAQA,EAAU,MAALmtB,OAAK,EAALA,EAAOvyB,IACf,uBACA,0BA8Kf8pC,CAAmBzkC,EAAO4c,OAvCpCA,EAAI,EAAGA,EAAI5c,EAAOzB,OAAQqe,IAAG,KA0CtC,OACI,gBAACsK,GAAA,QAAI,WA1KsB,SAAClnB,GAC5B,OAAsB,IAAlBA,EAAOzB,OACA,KAGP,eAAC2oB,GAAA,QAAI,CAAC9c,MAAO,CAACiG,cAAc,OAAO,SAC/B,eAAC8W,GAAA,QAAI,CACD/c,MAAO,CACH4F,SAAU,GACVgE,YAAa,GACb0H,cAAe,EACf5P,WAAY,EACZwhB,aAAa,SACbrd,WAAY,QACd,SAAC,yBA6JVsd,CAAuBvtB,GACxB,eAACknB,GAAA,QAAI,UACAS,OA0VI6F,CAAyBtb,EAAKlS,UAElCsiC,GAAmB,eAACrzB,GAAA,QAAgB,CAACvE,QAAS,WAC3Ck4B,EAAY1wB,EAAM5W,IAEnB8O,MAAO0V,GAASxL,OAAO,SAAC,eAAC6S,GAAA,QAAI,CAAC/c,MAAO0V,GAASngB,KAAK,SAAC,gBAvTvE,SAA0B5C,GACtB,GAAoC,OAAhCi0B,KAAKC,UAAU6Q,EAAK,KAAK,GACzB,OAAO,KAEX,IAgJwB4C,EAAWC,EAhJ/BC,EAAoB,GAGxB,GAAIxmB,MAAMkmB,QAAQxC,GAAO,CACrB,GAAI5vB,EAAK2yB,YAAa,CAOlB,IAAK,IAAMtmB,IANQ,CACf,eACA,cACA,eACA,gBAE2B,CAC3B,IAAMumB,EAAa,CACfC,OAAQC,EAASzmB,GACjB0mB,SAAU,CACN,CACI/yB,KAAMgzB,EAAQ3mB,MAI1BqmB,EAAkB7lC,MA4HN2lC,EA5H0BI,EA4HfH,EA5H2BpmB,EA8HtD,gBAAC2I,GAAA,QAAI,CAAC9c,MAAO,CAACsR,cAAe,IAAI,UAC7B,gBAACyL,GAAA,QAAI,WAAC,cAAYwd,KAClB,eAAC,aAAS,CACNzyB,KAAMwyB,EACNp1B,MAAOyN,WAAWC,IAAI,UAAU1N,MAChCE,OAAQ,IACR21B,sBAAuB,GACvBC,UAAU,EACVC,eAAgB,GAChBC,SAAU,EACVC,YAAa,CACTn2B,gBAAiB,UACjBo2B,cAAe,EACfl5B,MAAO,eAAC4O,EAAO,uDAAG,EAAC,6BAA4BA,EAAO,KACtDuqB,WAAY,eAACvqB,EAAO,uDAAG,EAAC,6BAA4BA,EAAO,KAC3D9Q,MAAO,CACHmF,aAAc,IAElBm2B,aAAc,CACVC,EAAG,IACHC,YAAa,IACbC,OAAQ,oBAhJ5B,IAAK,IAAMC,KAAchE,EACrB8C,EAAkB7lC,KACdgnC,EAAcD,EAAY/oC,GAAoB,UAItD6nC,EAAkB7lC,KACd,eAACooB,GAAA,QAAI,CAAC/c,MAAO,CAAE47B,WAAY,GAAI,SACV,kBAATlE,EAAoBA,EAAO9Q,KAAKC,UAAU6Q,EAAK,KAAK,MAKxE,SAASoD,EAAQP,GACb,IAAIhd,EAAQ,GACZ,OAAQgd,GACJ,IAAK,eACD,IAAK,IAAI/nB,EAAI,GAAIA,GAAK,EAAGA,IAAK,CAC1B,IAAI2R,EAAM0X,OAASC,GAAG,uBAAuBC,SAASvpB,EAAG,QAAQwpB,OAAO,cACpE7kC,EAAU,EACV8kC,EAAa,GAEjB,IAAK,IAAMC,KAAYxE,EAAM,CACzB,IAAI1iC,EAAWknC,EAASlnC,SACpBknC,EAASlb,OAASmD,GAAQ8X,EAAWz/B,SAASxH,KAC9CinC,EAAWtnC,KAAKK,GAChBmC,KAGRomB,EAAM5oB,KAAKwC,GAEf,MAEJ,IAAK,cACD,IAAK,IAAIqb,EAAI,GAAIA,GAAK,EAAGA,IAAK,CAC1B,IAAI2R,EAAM0X,OAASC,GAAG,uBAAuBC,SAASvpB,EAAG,QAAQwpB,OAAO,cACpE7kC,EAAU,EACV8kC,EAAa,GAEjB,IAAK,IAAMC,KAAYxE,EAAM,CACzB,IAAI1iC,EAAWknC,EAASlnC,SACpBknC,EAASlb,OAASmD,IAClB8X,EAAWtnC,KAAKK,GAChBmC,KAGRomB,EAAM5oB,KAAKwC,GAEf,MAEJ,IAAK,eACD,IAAK,IAAIqb,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAI2pB,EAAYN,OAASC,GAAG,uBAAuBC,SAASvpB,EAAG,SAASwpB,OAAO,cAC3EI,EAAUP,OAASC,GAAG,uBAAuBC,SAASvpB,EAAI,EAAG,SAASwpB,OAAO,cAC7E7kC,EAAU,EACVklC,EAAa,GAEjB,IAAK,IAAMH,KAAYxE,EACfwE,EAASlb,KAAOmb,GAAaD,EAASlb,MAAQob,IAAYC,EAAW7/B,SAAS0/B,EAASlnC,YACvFmC,IACAklC,EAAW1nC,KAAKunC,EAASlnC,WAGjCuoB,EAAM5oB,KAAKwC,GAEf,MAEJ,IAAK,eACD,IAAK,IAAIqb,EAAI,EAAGA,EAAI,EAAGA,IAAK,CACxB,IAAI8pB,EAAaT,OAASC,GAAG,uBAAuBC,SAASvpB,EAAG,UAAUwpB,OAAO,cAC7EO,EAAWV,OAASC,GAAG,uBAAuBC,SAASvpB,EAAI,EAAG,UAAUwpB,OAAO,cAC/E7kC,EAAU,EAEd,IAAK,IAAM+kC,KAAYxE,EACfwE,EAASlb,KAAOsb,GAAcJ,EAASlb,MAAQub,GAC/CplC,IAGRomB,EAAM5oB,KAAKwC,IAKvB,OAAOomB,EAGX,SAASqd,EAASL,GACd,IAAIhd,EAAQ,GACZ,OAAQgd,GACJ,IAAK,eACD,IAAK,IAAI/nB,EAAI,GAAIA,GAAK,EAAGA,IACrB+K,EAAM5oB,KAAKknC,OAASC,GAAG,uBAAuBC,SAASvpB,EAAG,QAAQwpB,OAAO,UAE7E,MAEJ,IAAK,cACD,IAAK,IAAIxpB,EAAI,GAAIA,GAAK,EAAGA,IACrB+K,EAAM5oB,KAAKknC,OAASC,GAAG,uBAAuBC,SAASvpB,EAAG,QAAQwpB,OAAO,UAE7E,MAEJ,IAAK,eACD,IAAK,IAAIxpB,EAAI,EAAGA,EAAI,EAAGA,IACnB+K,EAAM5oB,KAAKknC,OAASC,GAAG,uBAAuBC,SAASvpB,EAAG,SAASgqB,IAAI,EAAG,QAAQR,OAAO,SACnF,IACFH,OAASC,GAAG,uBAAuBC,SAASvpB,EAAI,EAAG,SAASwpB,OAAO,UAE3E,MAEJ,IAAK,eACD,IAAK,IAAIxpB,EAAI,EAAGA,EAAI,EAAGA,IACnB+K,EAAM5oB,KAAKknC,OAASC,GAAG,uBAAuBC,SAASvpB,EAAG,UAAUgqB,IAAI,EAAG,QAAQR,OAAO,SACpF,IACFH,OAASC,GAAG,uBAAuBC,SAASvpB,EAAI,EAAG,UAAUwpB,OAAO,UAKpF,OAAOze,EAkCX,SAASoe,EAAcc,EAAU9pC,GAC7B,IAAI+pC,EAAY,GAChB,IAAK,IAAM/Z,KAAU8Z,EACF,QAAX9Z,GAA+B,QAAXA,GACpB+Z,EAAU/nC,KACN,gBAACmoB,GAAA,QAAI,CAAC9c,MAAO,CAACiG,cAAe,MAAO2K,SAAS,QAAQ,UACjD,eAACmM,GAAA,QAAI,CAAC/c,MAAO,CAAC6F,WAAY,QAAQ,SAC7B8c,EAAS,QAEd,eAAC5F,GAAA,QAAI,UACA6J,KAAKC,UAAU4V,EAAS9Z,GAAQ,KAAK,YAM1D,IAAIga,EAAkB,KAEtB,GAAIhqC,IAAY,GAEZ,IAAK,IAAMb,KADX6qC,EAAkB,GACGhqC,GACjBgqC,EAAgBhoC,KACZioC,EAAoB9qC,EAAQ2qC,IAKxC,SAASG,EAAoB9qC,EAAQ2qC,GACjC,OACI,eAAC3f,GAAA,QAAI,CAAC9c,MAAO,CAACqU,iBAAkB,IAAI,SAChC,eAACxP,GAAA,QAAgB,CAAC7E,MAAO,CACrBE,WAAY,SACZC,eAAgB,SAChB+E,MAAO,IACPE,OAAQ,GACRJ,gBAAiBlT,EAAOoQ,MAAQpQ,EAAOoQ,MAAQ,OAC/CkY,UAAW,GACZ9Z,QAAS,WACR,IAAIpL,EAAS,GACb,IAAK,IAAM2nC,KAAa/qC,EAAOoD,OAC3BA,EAAO2nC,GAAaJ,EAASI,GAAaJ,EAASI,QAAazsB,EAEpE1M,MACI5R,EAAO+B,IACP,CACIuB,OAAQtD,EAAOsD,OACftB,QAAS,CACL,eAAgB,mBAChB,QAAW5C,GAEfyE,KAAMixB,KAAKC,UAAU3xB,KAE3ByO,MAAK,SAAA6vB,GACCA,EAAIlN,IACJ+R,GAAgB,OAI1B,SAEE,eAACtb,GAAA,QAAI,CAAC/c,MAAO0V,GAASvL,WAAW,SAAErY,EAAO8U,YAO1D,OACI,gBAACkW,GAAA,QAAI,WACD,gBAAC,QAAI,WACA4f,EACD,eAAC5f,GAAA,QAAI,CAAC9c,MAAO,CAAC0B,WAAY,GAAIwD,MAAM,MAAOe,cAAe,MAAOM,UAAU,SAAU2c,aAAc,SAAU/iB,eAAgB,UAAU,SAClIw8B,OAGT,eAAC,eAAW,OAMxB,OACI,gBAAC7f,GAAA,QAAI,CAAC9c,MAAO,CAAE47B,WAAY,GAAI,UAC3B,eAAC7e,GAAA,QAAI,CACD/c,MAAO,CACH4F,SAAU,GACVgE,YAAa,GACb0H,cAAe,EACf5P,WAAY,GACZmE,WAAY,QACd,SAAC,oBAGP,gBAACkX,GAAA,QAAI,CACD/c,MAAO,CACH4F,SAAU,GACVgE,YAAa,GACb0H,cAAe,GACf5P,WAAY,EACZqS,UAAW,UACb,UAAC,gBACW1R,KAElB,eAACya,GAAA,QAAI,CAAC9c,MAAO,CAAC0B,WAAY,GAAIsD,gBAAiB,aAAa,SACvDw1B,OA6BAsC,CAAiBh1B,EAAKnV,iBAOrC47B,GAAoB,CACtBtqB,UAAW,CACPhE,KAAM,EACN+E,gBAAiB,SAGrB8S,OAAQ,CACJzS,UAAW,GACXnF,WAAY,SACZC,eAAgB,SAChB+E,MAAO,QAEXme,QAAS,CACLnjB,WAAY,SACZE,OAAQ,GACRgG,YAAa,QACbC,YAAa,EACb2D,QAAS,IAEbsZ,MAAO,CACHje,UAAW,GACXke,QAAS,OACTpjB,eAAgB,cAEpBwF,MAAO,CACHC,SAAU,GACVM,WAAY,IAEhB7B,KAAM,CACFa,MAAO,OACPE,OAAQ,KAEZwF,YAAa,CACTvE,YAAa,EACbjG,OAAQ,GACRgG,YAAa,UACbjB,aAAc,EACdD,MAAO,MACP8E,QAAS,GACThF,gBAAiB,0BAErBwe,gBAAiB,CACbte,MAAO,OACP/E,eAAgB,SAChBD,WAAY,SACZmF,UAAW,GACXW,aAAc,IAElByd,OAAQ,CACJve,MAAO,IACPE,OAAQ,KAEZse,aAAc,CACVzd,cAAe,MACf2K,SAAU,OACVxQ,OAAQ,GACR4F,aAAc,GAElB2d,WAAY,CACRze,MAAO,IACPE,OAAQ,IACR1D,WAAY,IACZtB,OAAQ,GAEZsgB,WAAY,CACR9a,SAAU,GACVC,WAAY,SAId6P,GAAW,CACbkN,SAAU,CACNxd,OAAQ,IACRJ,gBAAiB,QACjB5E,OAAQ,GACRiG,YAAa,EACb2D,QAAS,IAEbC,MAAO,CACHjF,gBAAiB,UACjBI,OAAQ,GACRhF,OAAQ,GACRiG,YAAa,EACb2D,QAAS,IAEbpB,cAAe,CACX5D,gBAAiB,UACjBI,OAAQ,GACRhF,OAAQ,GACRiG,YAAa,GAEjB2b,cAAe,CACXhd,gBAAiB,UACjBI,OAAQ,GACRgP,eAAgB,GAChB/N,YAAa,EACb2D,QAAS,GACT7D,YAAa,GACbD,WAAY,IAEhB3Q,KAAM,CACFqQ,SAAU,GACVoa,WAAY,GACZna,WAAY,OACZoc,cAAe,IACf/f,MAAO,SAEXiI,WAAY,CACRvE,SAAU,GACVgL,SAAU,OACVoP,WAAY,GACZna,WAAY,OACZoc,cAAe,IACf/f,MAAO,SAEXgI,OAAQ,CACJhK,WAAY,SACZC,eAAgB,SAChBkJ,gBAAiB,GACjBC,kBAAmB,GACnBnE,aAAc,EACdiV,UAAW,EACXpV,gBAAiB,UAKnB8rB,GAAgB,CAClB7sB,UAAW,CACPhE,KAAM,EACN+E,gBAAiB,OACjB9E,WAAY,UAEhB6wB,cAAe,CACX9qB,cAAe,MACf/F,WAAY,SACZqG,UAAW,SACXrB,MAAO,MACPE,OAAQ,GACRJ,gBAAiB,UACjBG,aAAc,GACdkB,YAAa,EACbD,YAAa,OACb2b,kBAAmB,EACnB/H,YAAa,OACbC,aAAc,CAAE/U,MAAO,EAAGE,OAAQ,GAClC8U,cAAe,GACfC,aAAc,EACdC,UAAW,EACXlU,WAAY,EACZC,YAAa,EACbd,UAAW,IAEf9P,KAAM,CACF0K,KAAM,EACN2F,SAAU,GACVE,UAAW,SACXT,UAAW,EACXW,aAAc,GAElBD,MAAO,CACHb,MAAO,OACPE,OAAQ,OACRD,aAAc,KAIhBnB,GAAS,CACX+4B,gBAAiB,CACb92B,cAAe,MACf2K,SAAU,OACVzQ,eAAgB,gBAChB6J,QAAS,GACTtI,WAAY,IAEhBs7B,eAAgB,CACZ98B,WAAY,SACZC,eAAgB,UAEpBqhB,WAAY,CACR5b,SAAU,GACV1D,MAAO,QACP8H,QAAS,GACTlE,UAAW,UAEfirB,cAAe,CACX/rB,gBAAiB,OACjBqB,YAAa,EACbpG,KAAM,EACNE,eAAgB,SAChBC,OAAQ,EACR4J,QAAS,GAEb/F,UAAW,CACPhE,KAAM,ICnlCRg9B,GAAa16B,qBACJ,SAAS26B,KACpB,IAAM7xB,EACF,eAAClH,GAAA,QAAK,CACFnE,MAAO,CACHoF,OAAQ,GACRF,MAAO,GACPhF,WAAY,UAEhBkE,OAAQrB,EAAQ,OAIxB,OACI,eAACk6B,GAAWx6B,UAAS,UACjB,eAACw6B,GAAWr6B,OAAM,CACdsI,QAAS,CACL4M,OAAQ,WACJ,OACI,eAAC,UAAM,CAAC9X,MAAO,CAACsR,cAAe,IAAI,SAC/B,eAAClG,GAAM,CACHC,cAAeA,EACf1F,MAAM,oBAM1BlU,KAAM,aACNoR,UAAWq0B,O,qkBCiB3B,IAAMxkB,GAAcC,WAAWC,IAAI,UAAU1N,MACvCi4B,GAAYC,uBAAal+B,IACzBoD,GAAQC,qBACR86B,GAAMC,qBAkBZ,SAASC,KACP,IAAMrL,EAAcC,qBACdh6B,EAAWuH,KACXxO,EAAU0O,GAAenN,GACzBpB,EAAWuO,GAAetN,GAC1BhB,EAAuBsO,IAC3B,SAAC/N,GAAK,OAAKA,EAAMU,QAAQC,OAAOlB,wBAElC,EAAwCoP,qBAAU,WAA3CzP,EAAY,KACnB,GADoC,KACIkF,EAAoBjF,EAAS,CACnE+6B,MAAO/6B,KADKssC,EAAY,EAAlB11B,KAAoB/G,EAAO,EAAPA,QAG5B,EAA0C3K,IAAyB,WAA5DzC,EAAW,KAAU2c,EAAQ,KAAdxI,KACtB,EAAqB5R,IAAdf,EAAqC,SAA3B,GACjB,EAA4BoE,KAArBzB,EAAoD,SAAnC,GACxB,EAA4BvE,IAArBF,EAAoD,SAAnC,GAoExB,OAlEA6N,qBAAU,YACK,sBAAG,YACd,IACMhQ,IAEFyC,EAAYzC,GACTqQ,SACAoC,KAAK,uBACExO,EAAWjE,aAEf4G,IAAoByJ,UAI5B,IACE,IAAMk8B,EAAiBlyB,WAAUqnB,SAASC,QAEd6K,SAClBrqC,IAAoBkO,UAD5Bm8B,uBAA0BA,uBAGV,QAAhBv/B,UAASC,IACTs/B,IAA2BD,GAE3BrnB,WAAM3U,MAAM,oCAAqC,GAAI,CACnD,CACElM,KACkB,YAAhB4I,UAASC,GACL,2BACA,0BACNkC,QAAS,kBACPyuB,WAAQM,QACU,YAAhBlxB,UAASC,GACL,+CACA,+DAGV,CACE7I,KAAM,SACNyK,MAAO,YAIb,MAAOrP,GACPiE,QAAQC,KAAK,sBAAuBlE,IAEtC,MAAOA,GACPwH,EAASvG,EAAe,KACxBgD,QAAQC,KAAK,aAAclE,GAC5B,cACOgtC,mBAET,kBAlDY,mCAoDbC,KACC,IAEH18B,qBAAU,WACJ5P,GACF6G,EAASlG,EAAkC,SAAhBigC,MAE5B,CAACA,IAEJhxB,qBAAU,WACR/I,EAAS/F,EAAcsgB,GAAc,QACpC,CAACA,KAGF,eAACmrB,GAAA,QAAmB,CAClBC,cAAe,CACbC,UAAW,SAAC7yB,EAAS+L,GAAK,aACP,OADO,EACd,MAAP/L,OAAO,EAAPA,EAASvF,OAAK,EAAS,MAALsR,OAAK,EAALA,EAAOxlB,MAAI,sBAEpCoZ,MAAOxZ,EAAW2sC,WAAYC,WAC9BhtC,aAAcA,EAAa,SAC3B,gBAAC,uBAAmB,SACdguB,IAAG,IACPpU,MAAK,SAAQxZ,EAAW4tB,QAAWA,UAAeif,IAAQ,UAC1D,eAACC,GAAA,UAAS,CAACn+B,MAAO3O,EAAW,QAAU,SACvC,eAAC,gBAAY,CAACklC,MAAO,CAACD,GAAsBS,MAE5C,eAAC,GAAMt0B,UAAS,CAACC,cAAe,CAAEC,aAAa,GAAQ,UACnD2N,IAAYktB,GAAkBz8B,EAG9B,eAAC,GAAM6B,OAAM,CAACnR,KAAK,OAAOoR,UAAWsI,KAFrC,eAAC,GAAMvI,OAAM,CAACnR,KAAK,OAAOoR,UAAWu7B,aAUjD,IAAMA,GAAW,WACf,IAAMvzB,EAAQC,sBACR5Z,EAAU0O,GAAenN,GACjB6d,EAAana,EAAoBjF,EAAS,CACtD+6B,MAAO/6B,IADD4W,KAGR,EAAgBpH,oBAA0B,GAAM,SAApC,GAEZ,OACE,gBAAC28B,GAAI56B,UAAS,CAEZC,cAAe,gBAAGuU,EAAK,EAALA,MAAK,MAAQ,CAC7BonB,qBAAsC,YAAhBlgC,UAASC,GAC/BkgC,WAAY,YAAkB,IAAfC,EAAO,EAAPA,QAGTC,EAA6B,WAUjC,MARmB,eAAfvnB,EAAMxlB,KACR+sC,EAAWD,EAAU,OAAS,eACN,aAAftnB,EAAMxlB,KACf+sC,EAAWD,EAAU,UAAY,kBACT,aAAftnB,EAAMxlB,OACf+sC,EAAWD,EAAU,WAAa,oBAIlC,eAAClI,GAAA,QAAQ,CACP5kC,KAAM+sC,EACNztB,KAAM,GACN7O,MACEq8B,EAAU1zB,EAAM,qBAAuBA,EAAM,sBAKrD4zB,YAAa,CAAE/8B,WAAY,GAC3Bg9B,gBAAiB,GACjB/7B,aAAa,IACZ,UACH,eAAC06B,GAAIz6B,OAAM,CACTnR,KAAK,aACLoR,UAAW87B,GACXzzB,QAAS,CACP0zB,eAAe,EACfC,YAAa,kBAAM,eAAC,QAAI,CAAC7+B,MAAO,CAAE4F,SAAU,IAAK,SAAC,oBAGtD,eAACy3B,GAAIz6B,OAAM,CACTnR,KAAK,WACLoR,UAAWolB,GACX/c,QAAS,CACP0zB,eAAe,EACfC,YAAa,kBAAM,eAAC,QAAI,CAAC7+B,MAAO,CAAE4F,SAAU,IAAK,SAAC,iBAGtD,eAACy3B,GAAIz6B,OAAM,CACTnR,KAAK,WACLoR,UAAW2Z,GACXtR,QAAS,CACP0zB,eAAe,EACfC,YAAa,kBAAM,eAAC,QAAI,CAAC7+B,MAAO,CAAE4F,SAAU,IAAK,SAAC,iBAGvB,WAAtB,MAAR0K,OAAQ,EAARA,EAAUqK,kBACT,eAAC0iB,GAAIz6B,OAAM,CACTnR,KAAK,QACLoR,UAAWq6B,GACXhyB,QAAS,CACP0zB,eAAe,EACfC,YAAa,kBAAM,eAAC,QAAI,CAAC7+B,MAAO,CAAE4F,SAAU,IAAK,SAAC,kBC5P9Dk5B,mBDyDe,WACb,OACE,eAAC,YAAQ,CAAC5/B,MAAOA,GAAM,SACrB,eAAC,eAAW,CAACi+B,UAAWA,GAAU,SAChC,eAAC,qBAAiB,UAChB,eAAC,0BAAsB,CAACn9B,MAAO,CAAEC,KAAM,GAAI,SACzC,eAAC,4BAAwB,UACvB,eAACs9B,GAAG,mB","file":"static/js/app.f912f861.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/app-logo-transparent.1ede614a.png\";","module.exports = __webpack_public_path__ + \"static/media/owl-white-text.9861cc3f.png\";","module.exports = __webpack_public_path__ + \"static/media/owl-black-text.6f7231df.png\";","module.exports = __webpack_public_path__ + \"static/media/coupon.1dcc7bb0.jpg\";","var map = {\n\t\"./af\": 373,\n\t\"./af.js\": 373,\n\t\"./ar\": 374,\n\t\"./ar-dz\": 375,\n\t\"./ar-dz.js\": 375,\n\t\"./ar-kw\": 376,\n\t\"./ar-kw.js\": 376,\n\t\"./ar-ly\": 377,\n\t\"./ar-ly.js\": 377,\n\t\"./ar-ma\": 378,\n\t\"./ar-ma.js\": 378,\n\t\"./ar-sa\": 379,\n\t\"./ar-sa.js\": 379,\n\t\"./ar-tn\": 380,\n\t\"./ar-tn.js\": 380,\n\t\"./ar.js\": 374,\n\t\"./az\": 381,\n\t\"./az.js\": 381,\n\t\"./be\": 382,\n\t\"./be.js\": 382,\n\t\"./bg\": 383,\n\t\"./bg.js\": 383,\n\t\"./bm\": 384,\n\t\"./bm.js\": 384,\n\t\"./bn\": 385,\n\t\"./bn-bd\": 386,\n\t\"./bn-bd.js\": 386,\n\t\"./bn.js\": 385,\n\t\"./bo\": 387,\n\t\"./bo.js\": 387,\n\t\"./br\": 388,\n\t\"./br.js\": 388,\n\t\"./bs\": 389,\n\t\"./bs.js\": 389,\n\t\"./ca\": 390,\n\t\"./ca.js\": 390,\n\t\"./cs\": 391,\n\t\"./cs.js\": 391,\n\t\"./cv\": 392,\n\t\"./cv.js\": 392,\n\t\"./cy\": 393,\n\t\"./cy.js\": 393,\n\t\"./da\": 394,\n\t\"./da.js\": 394,\n\t\"./de\": 395,\n\t\"./de-at\": 396,\n\t\"./de-at.js\": 396,\n\t\"./de-ch\": 397,\n\t\"./de-ch.js\": 397,\n\t\"./de.js\": 395,\n\t\"./dv\": 398,\n\t\"./dv.js\": 398,\n\t\"./el\": 399,\n\t\"./el.js\": 399,\n\t\"./en-au\": 400,\n\t\"./en-au.js\": 400,\n\t\"./en-ca\": 401,\n\t\"./en-ca.js\": 401,\n\t\"./en-gb\": 402,\n\t\"./en-gb.js\": 402,\n\t\"./en-ie\": 403,\n\t\"./en-ie.js\": 403,\n\t\"./en-il\": 404,\n\t\"./en-il.js\": 404,\n\t\"./en-in\": 405,\n\t\"./en-in.js\": 405,\n\t\"./en-nz\": 406,\n\t\"./en-nz.js\": 406,\n\t\"./en-sg\": 407,\n\t\"./en-sg.js\": 407,\n\t\"./eo\": 408,\n\t\"./eo.js\": 408,\n\t\"./es\": 409,\n\t\"./es-do\": 410,\n\t\"./es-do.js\": 410,\n\t\"./es-mx\": 411,\n\t\"./es-mx.js\": 411,\n\t\"./es-us\": 412,\n\t\"./es-us.js\": 412,\n\t\"./es.js\": 409,\n\t\"./et\": 413,\n\t\"./et.js\": 413,\n\t\"./eu\": 414,\n\t\"./eu.js\": 414,\n\t\"./fa\": 415,\n\t\"./fa.js\": 415,\n\t\"./fi\": 416,\n\t\"./fi.js\": 416,\n\t\"./fil\": 417,\n\t\"./fil.js\": 417,\n\t\"./fo\": 418,\n\t\"./fo.js\": 418,\n\t\"./fr\": 419,\n\t\"./fr-ca\": 420,\n\t\"./fr-ca.js\": 420,\n\t\"./fr-ch\": 421,\n\t\"./fr-ch.js\": 421,\n\t\"./fr.js\": 419,\n\t\"./fy\": 422,\n\t\"./fy.js\": 422,\n\t\"./ga\": 423,\n\t\"./ga.js\": 423,\n\t\"./gd\": 424,\n\t\"./gd.js\": 424,\n\t\"./gl\": 425,\n\t\"./gl.js\": 425,\n\t\"./gom-deva\": 426,\n\t\"./gom-deva.js\": 426,\n\t\"./gom-latn\": 427,\n\t\"./gom-latn.js\": 427,\n\t\"./gu\": 428,\n\t\"./gu.js\": 428,\n\t\"./he\": 429,\n\t\"./he.js\": 429,\n\t\"./hi\": 430,\n\t\"./hi.js\": 430,\n\t\"./hr\": 431,\n\t\"./hr.js\": 431,\n\t\"./hu\": 432,\n\t\"./hu.js\": 432,\n\t\"./hy-am\": 433,\n\t\"./hy-am.js\": 433,\n\t\"./id\": 434,\n\t\"./id.js\": 434,\n\t\"./is\": 435,\n\t\"./is.js\": 435,\n\t\"./it\": 436,\n\t\"./it-ch\": 437,\n\t\"./it-ch.js\": 437,\n\t\"./it.js\": 436,\n\t\"./ja\": 438,\n\t\"./ja.js\": 438,\n\t\"./jv\": 439,\n\t\"./jv.js\": 439,\n\t\"./ka\": 440,\n\t\"./ka.js\": 440,\n\t\"./kk\": 441,\n\t\"./kk.js\": 441,\n\t\"./km\": 442,\n\t\"./km.js\": 442,\n\t\"./kn\": 443,\n\t\"./kn.js\": 443,\n\t\"./ko\": 444,\n\t\"./ko.js\": 444,\n\t\"./ku\": 445,\n\t\"./ku.js\": 445,\n\t\"./ky\": 446,\n\t\"./ky.js\": 446,\n\t\"./lb\": 447,\n\t\"./lb.js\": 447,\n\t\"./lo\": 448,\n\t\"./lo.js\": 448,\n\t\"./lt\": 449,\n\t\"./lt.js\": 449,\n\t\"./lv\": 450,\n\t\"./lv.js\": 450,\n\t\"./me\": 451,\n\t\"./me.js\": 451,\n\t\"./mi\": 452,\n\t\"./mi.js\": 452,\n\t\"./mk\": 453,\n\t\"./mk.js\": 453,\n\t\"./ml\": 454,\n\t\"./ml.js\": 454,\n\t\"./mn\": 455,\n\t\"./mn.js\": 455,\n\t\"./mr\": 456,\n\t\"./mr.js\": 456,\n\t\"./ms\": 457,\n\t\"./ms-my\": 458,\n\t\"./ms-my.js\": 458,\n\t\"./ms.js\": 457,\n\t\"./mt\": 459,\n\t\"./mt.js\": 459,\n\t\"./my\": 460,\n\t\"./my.js\": 460,\n\t\"./nb\": 461,\n\t\"./nb.js\": 461,\n\t\"./ne\": 462,\n\t\"./ne.js\": 462,\n\t\"./nl\": 463,\n\t\"./nl-be\": 464,\n\t\"./nl-be.js\": 464,\n\t\"./nl.js\": 463,\n\t\"./nn\": 465,\n\t\"./nn.js\": 465,\n\t\"./oc-lnc\": 466,\n\t\"./oc-lnc.js\": 466,\n\t\"./pa-in\": 467,\n\t\"./pa-in.js\": 467,\n\t\"./pl\": 468,\n\t\"./pl.js\": 468,\n\t\"./pt\": 469,\n\t\"./pt-br\": 470,\n\t\"./pt-br.js\": 470,\n\t\"./pt.js\": 469,\n\t\"./ro\": 471,\n\t\"./ro.js\": 471,\n\t\"./ru\": 472,\n\t\"./ru.js\": 472,\n\t\"./sd\": 473,\n\t\"./sd.js\": 473,\n\t\"./se\": 474,\n\t\"./se.js\": 474,\n\t\"./si\": 475,\n\t\"./si.js\": 475,\n\t\"./sk\": 476,\n\t\"./sk.js\": 476,\n\t\"./sl\": 477,\n\t\"./sl.js\": 477,\n\t\"./sq\": 478,\n\t\"./sq.js\": 478,\n\t\"./sr\": 479,\n\t\"./sr-cyrl\": 480,\n\t\"./sr-cyrl.js\": 480,\n\t\"./sr.js\": 479,\n\t\"./ss\": 481,\n\t\"./ss.js\": 481,\n\t\"./sv\": 482,\n\t\"./sv.js\": 482,\n\t\"./sw\": 483,\n\t\"./sw.js\": 483,\n\t\"./ta\": 484,\n\t\"./ta.js\": 484,\n\t\"./te\": 485,\n\t\"./te.js\": 485,\n\t\"./tet\": 486,\n\t\"./tet.js\": 486,\n\t\"./tg\": 487,\n\t\"./tg.js\": 487,\n\t\"./th\": 488,\n\t\"./th.js\": 488,\n\t\"./tk\": 489,\n\t\"./tk.js\": 489,\n\t\"./tl-ph\": 490,\n\t\"./tl-ph.js\": 490,\n\t\"./tlh\": 491,\n\t\"./tlh.js\": 491,\n\t\"./tr\": 492,\n\t\"./tr.js\": 492,\n\t\"./tzl\": 493,\n\t\"./tzl.js\": 493,\n\t\"./tzm\": 494,\n\t\"./tzm-latn\": 495,\n\t\"./tzm-latn.js\": 495,\n\t\"./tzm.js\": 494,\n\t\"./ug-cn\": 496,\n\t\"./ug-cn.js\": 496,\n\t\"./uk\": 497,\n\t\"./uk.js\": 497,\n\t\"./ur\": 498,\n\t\"./ur.js\": 498,\n\t\"./uz\": 499,\n\t\"./uz-latn\": 500,\n\t\"./uz-latn.js\": 500,\n\t\"./uz.js\": 499,\n\t\"./vi\": 501,\n\t\"./vi.js\": 501,\n\t\"./x-pseudo\": 502,\n\t\"./x-pseudo.js\": 502,\n\t\"./yo\": 503,\n\t\"./yo.js\": 503,\n\t\"./zh-cn\": 504,\n\t\"./zh-cn.js\": 504,\n\t\"./zh-hk\": 505,\n\t\"./zh-hk.js\": 505,\n\t\"./zh-mo\": 506,\n\t\"./zh-mo.js\": 506,\n\t\"./zh-tw\": 507,\n\t\"./zh-tw.js\": 507\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 839;","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Appearance } from 'react-native';\n\nimport type { RootState } from './store';\n\n// Define a type for the slice state\ninterface AppDataState {\n  userKey: string;\n  isGuest: boolean;\n  isMobile: boolean;\n  darkMode: boolean;\n  useDeviceColorScheme: boolean;\n}\n\n// Define the initial state using that type\nconst initialState: AppDataState = {\n  userKey: '',\n  isGuest: false,\n  isMobile: false,\n  darkMode: false,\n  useDeviceColorScheme: false,\n};\n\nexport const appDataSlice = createSlice({\n  name: 'appData',\n  initialState,\n  reducers: {\n    reset: () => initialState,\n    userKeyUpdated: (state, action: PayloadAction<string>) => {\n      state.userKey = action.payload;\n    },\n    setIsGuest: (state, action: PayloadAction<boolean>) => {\n      state.isGuest = action.payload;\n    },\n    deviceDarkModeSet: (state, action: PayloadAction<boolean>) => {\n      state.darkMode = action.payload;\n    },\n    useDeviceColorSchemeSet: (state, action: PayloadAction<boolean>) => {\n      state.useDeviceColorScheme = action.payload;\n    },\n    deleteAllAppData: (state) => {\n      state.userKey = '';\n      state.isGuest = false;\n      state.darkMode = true;\n    },\n    mobileSiteSet: (state, action: PayloadAction<boolean>) => {\n      state.isMobile = action.payload;\n    },\n  },\n  extraReducers: () => {},\n});\n\n// Selectors\nexport const selectDarkMode = (state: RootState) =>\n  state.appData.secure.darkMode;\n\nexport const selectUserKey = (state: RootState) => state.appData.secure.userKey;\n\nexport const selectIsGuest = (state: RootState) => state.appData.secure.isGuest;\n\nexport const selectMobile = (state: RootState) => state.appData.secure.isMobile;\n\n// Actions\nexport const {\n  userKeyUpdated,\n  setIsGuest,\n  deleteAllAppData,\n  reset,\n  deviceDarkModeSet,\n  useDeviceColorSchemeSet,\n  mobileSiteSet,\n} = appDataSlice.actions;\n\nexport default appDataSlice.reducer;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://54.200.234.43:1234/api',\n  }),\n  tagTypes: ['User', 'Posts'],\n  endpoints: (builder) => ({\n    getCurrentVersion: builder.query<any, void>({\n      query: () => '/randomShit/getCurrentVersion',\n    }),\n  }),\n});\n\nexport const { useLazyGetCurrentVersionQuery } = apiSlice;\n","import { apiSlice } from './apiSlice';\nimport {\n  AddedClasses,\n  CourseTermAddedClasses,\n  UserData,\n} from '../../app/types';\n\nexport const usersApiSlice = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    getUserInfo: builder.query({\n      providesTags: ['User'],\n      query: (userKey: string) => ({\n        url: '/users/me',\n        headers: {\n          userKey,\n        },\n      }),\n      transformResponse: ({ classes, ...rest }) => {\n        const addedClasses = {\n          length: 0,\n          classes: {} as { [courseTerm: string]: CourseTermAddedClasses },\n        } as AddedClasses;\n\n        try {\n          for (const { courseCode, courseTerm } of classes) {\n            let school = courseCode.split('-');\n            school = school[school.length - 2].split(' ');\n            school = school[school.length - 1];\n            const masterCourseCode =\n              courseCode.split(' ').slice(0, 2).join(' ') + ' ' + school;\n            if (courseTerm in addedClasses.classes) {\n              if (masterCourseCode in addedClasses.classes[courseTerm]) {\n                addedClasses.classes[courseTerm][masterCourseCode].push(\n                  courseCode\n                );\n              } else {\n                addedClasses.classes[courseTerm][masterCourseCode] = [\n                  courseCode,\n                ];\n              }\n            } else {\n              addedClasses.classes[courseTerm] = {\n                [masterCourseCode]: [courseCode],\n              };\n            }\n\n            addedClasses.length++;\n          }\n        } catch (e) {\n          console.warn('Error Adding Classes To State', e);\n        }\n\n        return { addedClasses: addedClasses, ...rest } as UserData;\n      },\n    }),\n    login: builder.mutation({\n      query: ({ userName, password, isGuest }) => ({\n        url: `/users/login`,\n        params: isGuest\n          ? {\n              userName,\n              password,\n              isGuest,\n            }\n          : {\n              userName,\n              password,\n            },\n      }),\n    }),\n    trackLogin: builder.mutation({\n      query: (userKey) => ({\n        url: `/analytics/login/openedApp`,\n        method: 'POST',\n        headers: {\n          userKey: userKey,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n    deleteAccount: builder.mutation({\n      query: ({ userKey, userName }) => ({\n        url: '/users',\n        method: 'DELETE',\n        headers: {\n          userKey,\n        },\n        params: {\n          userName,\n        },\n      }),\n    }),\n    editUser: builder.mutation({\n      invalidatesTags: ['User'],\n      query: ({ userKey, userName, fields }) => ({\n        url: '/users/' + userName,\n        method: 'PATCH',\n        headers: {\n          userKey,\n        },\n        body: fields,\n      }),\n    }),\n    getCollegeList: builder.query<any, void>({\n      query: () => '/randomShit/getCollegeList',\n    }),\n    signupUser: builder.mutation({\n      query: (body) => ({\n        url: '/users',\n        method: 'POST',\n        body,\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n    verifySignup: builder.mutation({\n      query: (code) => ({\n        url: '/users/verification',\n        method: 'POST',\n        body: { code },\n      }),\n    }),\n    resetPassword: builder.mutation({\n      query: (email) => ({\n        url: '/users/forgotPassword',\n        params: {\n          email,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useTrackLoginMutation,\n  useGetUserInfoQuery,\n  useLazyGetUserInfoQuery,\n  useLoginMutation,\n  useDeleteAccountMutation,\n  useEditUserMutation,\n  useGetCollegeListQuery,\n  useSignupUserMutation,\n  useVerifySignupMutation,\n  useResetPasswordMutation,\n} = usersApiSlice;\n","import { apiSlice } from './apiSlice';\n\nimport { Class } from '../../app/types';\nimport { usersApiSlice } from './usersApi';\n\nexport const classPagesApi = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    getAllClasses: builder.query({\n      query: ({ userKey, pageNumber, courseTerm, collegeName }) => ({\n        url: `/classes/masterClassList/` + collegeName,\n        headers: {\n          userKey,\n        },\n        params: {\n          pageNumber: pageNumber,\n          courseTerm: courseTerm,\n        },\n      }),\n      transformResponse: (response: { [masterCourseCode: string]: Class }) => {\n        const getRatingFromReviews = (reviews) => {\n          if (reviews.length === 0) {\n            return null;\n          } else {\n            let totalAverage = 0;\n            let counter = 0;\n            for (const review of reviews) {\n              if (review.rating) {\n                totalAverage += review.rating;\n                counter++;\n              }\n            }\n            if (counter > 0) {\n              return (totalAverage / counter).toFixed(2);\n            } else {\n              return null;\n            }\n          }\n        };\n\n        const getDifficultyFromReviews = (reviews) => {\n          if (reviews.length === 0) {\n            return null;\n          } else {\n            let totalAverage = 0;\n            let counter = 0;\n            for (const review of reviews) {\n              if (review.difficulty) {\n                totalAverage += review.difficulty;\n                counter++;\n              }\n            }\n            if (counter > 0) {\n              return (totalAverage / counter).toFixed(2);\n            } else {\n              return null;\n            }\n          }\n        };\n\n        return Object.fromEntries(\n          Object.entries(response).map(([key, value]) => {\n            return [\n              key,\n              {\n                ...value,\n                reviews: value.reviews.sort(),\n                rating: getRatingFromReviews(value.reviews),\n                difficulty: getDifficultyFromReviews(value.reviews),\n              },\n            ];\n          })\n        );\n      },\n    }),\n    getCurrentSection: builder.query<any, void>({\n      query: () => '/randomShit/currentTerm',\n      transformResponse: (response: { currentTerm: string }) =>\n        response.currentTerm,\n    }),\n    addClass: builder.mutation({\n      query: ({ userKey, courseCode, courseTerm, userName }) => ({\n        url: `/users/` + userName,\n        method: 'PATCH',\n        headers: {\n          userKey,\n        },\n        body: {\n          classesToAdd: [{ courseCode, courseTerm }],\n        },\n      }),\n      async onQueryStarted(\n        { userKey, courseCode, masterCourseCode, courseTerm },\n        { dispatch, queryFulfilled }\n      ) {\n        const patchResult = dispatch(\n          usersApiSlice.util.updateQueryData('getUserInfo', userKey, (draft) => {\n            if (!(courseTerm in draft.addedClasses.classes)) {\n              draft.addedClasses.classes[courseTerm] = {\n                [masterCourseCode]: [courseCode],\n              };\n            } else if (\n              !(masterCourseCode in draft.addedClasses.classes[courseTerm])\n            ) {\n              draft.addedClasses.classes[courseTerm][masterCourseCode] = [\n                courseCode,\n              ];\n            } else {\n              draft.addedClasses.classes[courseTerm][masterCourseCode].push(\n                courseCode\n              );\n            }\n            draft.addedClasses.length++;\n          })\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n        }\n      },\n    }),\n    removeClass: builder.mutation({\n      query: ({ userKey, courseCode, courseTerm, userName }) => ({\n        url: `/users/` + userName,\n        method: 'PATCH',\n        headers: {\n          userKey,\n        },\n        body: {\n          classesToRemove: [{ courseCode, courseTerm }],\n        },\n      }),\n      async onQueryStarted(\n        { userKey, courseCode, masterCourseCode, courseTerm },\n        { dispatch, queryFulfilled }\n      ) {\n        const patchResult = dispatch(\n          usersApiSlice.util.updateQueryData('getUserInfo', userKey, (draft) => {\n            draft.addedClasses.classes[courseTerm][masterCourseCode] =\n              draft.addedClasses.classes[courseTerm][masterCourseCode].filter(\n                (classCode) => classCode !== courseCode\n              );\n            draft.addedClasses.length--;\n          })\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n        }\n      },\n    }),\n    isAllowedToReview: builder.query({\n      query: ({ masterCourseCode, userKey }) => ({\n        url: '/users/isAllowedToReview',\n        method: 'GET',\n        params: {\n          masterCourseCode,\n        },\n        headers: {\n          userKey,\n        },\n      }),\n    }),\n    sendReview: builder.mutation({\n      query: ({ userKey, body }) => ({\n        url: '/classes/userReview',\n        method: 'PATCH',\n        headers: {\n          userKey,\n        },\n        body,\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useGetAllClassesQuery,\n  useGetCurrentSectionQuery,\n  useAddClassMutation,\n  useRemoveClassMutation,\n  useIsAllowedToReviewQuery,\n  useSendReviewMutation,\n  useLazyGetAllClassesQuery,\n  useLazyGetCurrentSectionQuery,\n} = classPagesApi;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport type { RootState } from '../../app/store';\nimport { Class, Filters } from '../../app/types';\nimport { classPagesApi } from '../api/classPagesApi';\n\n// Define a type for the slice state\ninterface ClassPagesState {\n  classes: { [masterCourseCode: string]: Class };\n  filteredClasses: { [masterCourseCode: string]: Class };\n  renderedClasses: { [masterCourseCode: string]: Class };\n  currentSection: string;\n  searchTerm: string;\n  selectedClass: any;\n  page: number;\n  filters: Filters;\n}\n\n// Define the initial state using that type\nconst initialState: ClassPagesState = {\n  classes: {},\n  filteredClasses: {},\n  renderedClasses: {},\n  currentSection: '',\n  selectedClass: {},\n  searchTerm: '',\n  page: 1,\n  filters: {\n    isHMC: false,\n    colleges: { HM: true, CM: true, PO: true, PZ: true, SC: true },\n  },\n};\n\nexport const classPagesSlice = createSlice({\n  name: 'classPages',\n  initialState,\n  reducers: {\n    reset: () => initialState,\n    currentSectionUpdated: (state, action: PayloadAction<string>) => {\n      state.currentSection = action.payload;\n    },\n    endOfListReached: (state) => {\n      state.page++;\n    },\n    resetClasses: (state) => {\n      state.page = 1;\n      state.searchTerm = '';\n\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\n    },\n    classSelected: (state, action: PayloadAction<string>) => {\n      state.selectedClass = state.classes[action.payload];\n    },\n    selectedClassCleared: (state) => {\n      state.selectedClass = {};\n    },\n    filtersSaved: (state, action: PayloadAction<Filters>) => {\n      state.filters = action.payload;\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\n    },\n    filtersReset: (state) => {\n      state.filters = initialState.filters;\n\n      classPagesSlice.caseReducers.searchResultsFiltered(state);\n    },\n    searchResultsFiltered: (state) => {\n      // Update the renderedClasses object with the new filters\n      let newResultsArray = Object.entries(state.classes);\n\n      newResultsArray = newResultsArray.filter(([masterCourseCode, _]) => {\n        const collegeAbr = masterCourseCode.substring(\n          masterCourseCode.length - 2,\n          masterCourseCode.length\n        );\n\n        for (const [college, isCollegeFiltered] of Object.entries(\n          state.filters.colleges\n        )) {\n          if (collegeAbr === college) {\n            return isCollegeFiltered;\n          }\n        }\n      });\n\n      state.filteredClasses = Object.fromEntries(newResultsArray);\n      state.renderedClasses = { ...state.filteredClasses };\n    },\n    searchTermUpdated: (state, action: PayloadAction<string>) => {\n      let newResultsArray = Object.entries(state.filteredClasses);\n      state.searchTerm = action.payload;\n      state.page = 1;\n\n      if (state.searchTerm === '') {\n        classPagesSlice.caseReducers.resetClasses(state);\n      } else {\n        const searchTerms = state.searchTerm.split(' ');\n\n        // Check for courseCode shortcuts\n        const searchCourseCode = findSearchTermShortcuts(state.searchTerm);\n\n        newResultsArray = newResultsArray.filter(\n          ([_, { courseName, times, masterCourseCode }]) =>\n            filterBySearchTerm(\n              courseName,\n              times,\n              masterCourseCode,\n              searchCourseCode,\n              searchCourseCode === state.searchTerm ? searchTerms : []\n            )\n        );\n\n        let newResultsObject = Object.fromEntries(newResultsArray);\n\n        state.renderedClasses = { ...newResultsObject };\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addMatcher(\n      classPagesApi.endpoints.getAllClasses.matchFulfilled,\n      (state, { payload }) => {\n        state.classes = payload;\n        state.renderedClasses = payload;\n      }\n    );\n  },\n});\n\n// Helper functions\nconst findSearchTermShortcuts = (searchPhrase: string) => {\n  return searchPhrase\n    .replace(/(cs *)([0-9]+)/i, (match, p1, p2) => 'csci ' + p2)\n    .replace(/(eng|e *)([0-9]+)/i, (match, p1, p2) => 'engr ' + p2)\n    .replace(/(bio *)([0-9]+)/i, (match, p1, p2) => 'biol ' + p2)\n    .replace(\n      // pad 0s for courseCode search\n      /([a-z]+ *)([0-9]+)/i,\n      (match, p1, p2) => p1 + p2.padStart(3, '0')\n    );\n};\n\nconst filterBySearchTerm = (\n  courseName: string,\n  times: any[],\n  masterCourseCode: string,\n  searchCourseCode?: string,\n  searchTerms?: string[]\n) => {\n  const coursePhrase = `${masterCourseCode} ${courseName} ${\n    times[0]?.professorName ? times[0].professorName : ''\n  }`;\n\n  // Return true if any of the searchCourseCodes are found in the masterCourseCode\n  if (\n    masterCourseCode\n      .trim()\n      .replace(/\\s+/g, ' ')\n      .includes(searchCourseCode.toUpperCase().trim().replace(/\\s+/g, ' '))\n  ) {\n    return true;\n  }\n\n  // Return true if all of the searchPhrases are found in the coursePhrase\n  for (const searchTerm of searchTerms) {\n    if (\n      !coursePhrase\n        .toUpperCase()\n        .trim()\n        .replace(/\\s+/g, ' ')\n        .includes(searchTerm.toUpperCase().trim().replace(/\\s+/g, ' '))\n    ) {\n      return false;\n    }\n  }\n\n  return searchTerms.length > 0;\n};\n\nconst filterByCollege = (filters, [className, _]) => {\n  const college = className.split(' ').at(-1);\n  return filters.colleges.includes(college);\n};\n\n// Selectors\nexport const selectClassesList = (state: RootState) =>\n  state.appData.classPages.classes;\n\nexport const selectRenderedClassesList = (state: RootState) =>\n  state.appData.classPages.renderedClasses;\n\n// Actions\nexport const {\n  currentSectionUpdated,\n  endOfListReached,\n  searchTermUpdated,\n  resetClasses,\n  classSelected,\n  selectedClassCleared,\n  reset,\n  filtersSaved,\n  filtersReset,\n} = classPagesSlice.actions;\n\nexport default classPagesSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\n\ninterface DiscoverState {\n  searchTerm: string;\n  submittedSearchTerm: string;\n  tag: string;\n  recentSearches: string[];\n}\nconst initialState: DiscoverState = {\n  searchTerm: '',\n  submittedSearchTerm: '',\n  tag: '',\n  recentSearches: [],\n};\n\nexport const discoverSlice = createSlice({\n  name: 'discover',\n  initialState,\n  reducers: {\n    reset: () => initialState,\n    searchTermSubmitted: (state, action: PayloadAction<string>) => {\n      state.submittedSearchTerm = action.payload;\n      if (action.payload && !state.recentSearches.includes(action.payload)) {\n        state.recentSearches.unshift(action.payload);\n      }\n    },\n    searchTermChanged: (state, action: PayloadAction<string>) => {\n      state.searchTerm = action.payload;\n      if (action.payload === '') {\n        state.submittedSearchTerm = '';\n      }\n    },\n    recentSearchTermSelected: (state, action: PayloadAction<string>) => {\n      state.searchTerm = action.payload;\n      state.submittedSearchTerm = action.payload;\n    },\n    tagSelected: (state, action: PayloadAction<string>) => {\n      state.tag = action.payload;\n    },\n    recentSearchTermRemoved: (state, action: PayloadAction<string>) => {\n      state.recentSearches = state.recentSearches.filter(\n        (term) => term !== action.payload\n      );\n    },\n  },\n});\n\nexport const {\n  reset,\n  searchTermChanged,\n  searchTermSubmitted,\n  tagSelected,\n  recentSearchTermSelected,\n  recentSearchTermRemoved,\n} = discoverSlice.actions;\n\nexport const selectSearchTerm = (state: RootState) =>\n  state.appData.discover.searchTerm;\nexport const selectSubmittedSearchTerm = (state: RootState) =>\n  state.appData.discover.submittedSearchTerm;\nexport const selectTag = (state: RootState) => state.appData.discover.tag;\nexport const selectRecentSearches = (state: RootState) =>\n  state.appData.discover.recentSearches;\n\nexport default discoverSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\nimport type { PayloadAction } from '@reduxjs/toolkit';\n\ninterface CalendarState {\n  isThreeDay: boolean;\n}\n\nconst initialState: CalendarState = {\n  isThreeDay: false,\n};\n\nexport const calendarSlice = createSlice({\n  name: 'discover',\n  initialState: initialState,\n  reducers: {\n    reset: (state) => (state = initialState),\n    isThreeDaySet: (state, action: PayloadAction<boolean>) => {\n      state.isThreeDay = action.payload;\n    },\n  },\n});\n\nexport const { reset, isThreeDaySet } = calendarSlice.actions;\n\nexport default calendarSlice.reducer;\n","import createSecureStore from 'redux-persist-expo-securestore';\nimport { Platform } from 'react-native';\nimport { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport ExpoFileSystemStorage from 'redux-persist-expo-filesystem';\n\nimport appDataReducer from '../app/appDataSlice';\nimport classPagesReducer from '../features/classPages/classPagesSlice';\nimport discoverReducer from '../features/discover/discoverSlice';\nimport calendarReducer from '../features/calendar/calendarSlice';\n\n// Secure storage\nconst secureStorage = createSecureStore();\n\nconst securePersistConfig = {\n  key: 'secure',\n  storage: Platform.OS === 'web' ? AsyncStorage : secureStorage,\n};\n\n// Non-secure (AsyncStorage) storage\nconst cpPersistConfig = {\n  key: 'classPages',\n  storage: Platform.OS === 'android' ? ExpoFileSystemStorage : AsyncStorage,\n  whitelist:\n    Platform.OS === 'web'\n      ? ['currentSection', 'filters']\n      : ['classes', 'currentSection', 'filters'],\n};\n\nconst discoverPersistConfig = {\n  key: 'discover',\n  storage: Platform.OS === 'android' ? ExpoFileSystemStorage : AsyncStorage,\n  whitelist: ['recentSearches'],\n};\n\n// Combine them together\nexport const rootReducer = combineReducers({\n  classPages: persistReducer(cpPersistConfig, classPagesReducer),\n  secure: persistReducer(securePersistConfig, appDataReducer),\n  discover: persistReducer(discoverPersistConfig, discoverReducer),\n  calendar: calendarReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport { rootReducer } from './storage';\nimport { apiSlice } from '../features/api/apiSlice';\n\nexport const store = configureStore({\n  reducer: {\n    appData: rootReducer,\n    [apiSlice.reducerPath]: apiSlice.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n      immutableCheck: false,\n    }).concat(apiSlice.middleware),\n});\n\n// serializableCheck: {\n//   ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//   ignoredPaths: [\n//     'appData.classPages.classes',\n//     'addData.classPages.renderedClasses',\n//   ],\n// },\n// immutableCheck: {\n//   ignoredPaths: [\n//     'appData.classPages.classes',\n//     'addData.classPages.renderedClasses',\n//   ],\n// },\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch: () => AppDispatch = useDispatch\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\n","import { Button, Layout, Text } from '@ui-kitten/components';\n\nexport default function EnterCodePage({ navigation }) {\n  return (\n    <Layout style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Text\n        style={{\n          margin: 10,\n        }}\n        category=\"s1\">\n        An email has been sent to you with a temporary password. Login to set\n        your new password.\n      </Text>\n      <Button\n        style={{ margin: 10 }}\n        onPress={() => {\n          navigation.reset({ index: 0, routes: [{ name: 'Login' }] });\n        }}>\n        Back to Login\n      </Button>\n    </Layout>\n  );\n}\n","import { Button, Input, Layout, Spinner, Text } from '@ui-kitten/components';\nimport { useEffect, useRef, useState } from 'react';\nimport { useNetInfo } from '@react-native-community/netinfo';\nimport { Keyboard } from 'react-native';\n\nimport { useResetPasswordMutation } from '../../api/usersApi';\n\nexport default function EnterEmailPage({ navigation }) {\n  const [email, setEmail] = useState('');\n  const inputRef = useRef<Input>(null);\n  const [resetPassword, { isLoading, isError }] = useResetPasswordMutation();\n  const netInfo = useNetInfo();\n\n  useEffect(() => {\n    if (inputRef.current) inputRef.current.focus();\n  }, [inputRef.current]);\n\n  const onSubmit = async () => {\n    if (!netInfo.isConnected) {\n      alert('Connect to the internet to reset your password');\n      return;\n    }\n\n    try {\n      await resetPassword(email).unwrap();\n      navigation.navigate('EnterCodePage');\n    } catch (e) {\n      console.warn('Error submitting forgot password email', e);\n    }\n  };\n\n  return (\n    <Layout style={{ flex: 1, paddingTop: 30, alignItems: 'center' }}>\n      <Text style={{ margin: 10 }} category=\"s1\">\n        Enter your email to get started\n      </Text>\n\n      <Input\n        autoCapitalize=\"none\"\n        placeholder=\"Email\"\n        ref={inputRef}\n        style={{ margin: 10 }}\n        onChangeText={setEmail}\n        value={email}\n        onSubmitEditing={Keyboard.dismiss}\n      />\n      {isError && (\n        <Text style={{ color: 'red' }}>Email is invalid. Try again</Text>\n      )}\n      <Button\n        style={{ margin: 10 }}\n        onPress={onSubmit}\n        disabled={isLoading}\n        accessoryRight={() => (isLoading ? <Spinner status=\"basic\" /> : null)}>\n        Submit\n      </Button>\n    </Layout>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport EnterCodePage from './EnterCodePage';\nimport EnterEmailPage from './EnterEmailPage';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function ForgotPassword() {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}>\n      <Stack.Screen name=\"EnterEmailPage\" component={EnterEmailPage} />\n      <Stack.Screen name=\"EnterCodePage\" component={EnterCodePage} />\n    </Stack.Navigator>\n  );\n}\n","import React, { useState } from 'react';\nimport {\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Keyboard,\n  TouchableWithoutFeedback,\n  Platform,\n  TextInput,\n} from 'react-native';\nimport { Input, Layout, Spinner, Text } from '@ui-kitten/components';\nimport NetInfo from '@react-native-community/netinfo';\nimport {\n  useLazyGetUserInfoQuery,\n  useLoginMutation,\n  useTrackLoginMutation,\n} from '../api/usersApi';\n\nconst DarkModeLogo = require('../../../assets/logos/owl-white-text.png');\nconst LightModeLogo = require('../../../assets/logos/owl-black-text.png');\n\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  selectDarkMode,\n  setIsGuest,\n  userKeyUpdated,\n} from '../../app/appDataSlice';\n\nexport default function Login({ navigation }) {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [loginError, setLoginError] = useState('');\n\n  const [login, { isLoading }] = useLoginMutation();\n  const [getUserInfo] = useLazyGetUserInfoQuery();\n  const [trackLogin] = useTrackLoginMutation();\n  const darkMode = useAppSelector(selectDarkMode);\n  // const apiUserKey = useAppSelector((state) => state.appData.secure);\n  const dispatch = useAppDispatch();\n\n  const passwordRef = React.useRef(null);\n\n  const handleLogin = async () => {\n    Keyboard.dismiss();\n\n    // Check for internet connection\n    const netInfo = await NetInfo.fetch();\n    if (!netInfo.isConnected) {\n      setLoginError('No internet connection');\n      return;\n    }\n\n    // Validate input\n    if (!userName) {\n      setLoginError(\"Username can't be empty\");\n    } else if (!password) {\n      setLoginError(\"Password can't be empty\");\n    } else {\n      try {\n        const { userKey } = await login({\n          userName,\n          password,\n        }).unwrap();\n        // Save user key and data to redux store\n        dispatch(userKeyUpdated(userKey));\n        dispatch(setIsGuest(false));\n\n        // Get user info\n        getUserInfo(userKey)\n          .unwrap()\n          .then(async () => {\n            await trackLogin(userKey);\n          });\n\n        // Reset login form\n        setUserName('');\n        setPassword('');\n        setLoginError('');\n      } catch (e) {\n        setLoginError('Invalid username or password');\n        console.error('Failed to Login: ', e);\n      }\n    }\n  };\n\n  const guestLogin = async () => {\n    Keyboard.dismiss();\n\n    // Check for internet connection\n    const netInfo = await NetInfo.fetch();\n    if (!netInfo.isConnected) {\n      setLoginError('No internet connection');\n      return;\n    }\n\n    try {\n      const { userKey } = await login({\n        userName: '',\n        password: '',\n        isGuest: true,\n      }).unwrap();\n      // Save user key and data to redux store\n      dispatch(userKeyUpdated(userKey));\n      dispatch(setIsGuest(true));\n\n      // Get user info\n      getUserInfo(userKey)\n        .unwrap()\n        .then(async () => {\n          await trackLogin(userKey);\n        });\n\n      // Reset login form\n      setUserName('');\n      setPassword('');\n      setLoginError('');\n    } catch (e) {\n      setLoginError('Invalid username or password');\n      console.error('Failed to Login: ', e);\n    }\n  };\n\n  return (\n    <TouchableWithoutFeedback\n      style={{ flex: 1 }}\n      onPress={() => {\n        Keyboard.dismiss();\n      }}>\n      <KeyboardAvoidingView\n        style={styles.container}\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n        <Layout\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n          {darkMode ? (\n            <Image source={DarkModeLogo} style={styles.logo} />\n          ) : (\n            <Image source={LightModeLogo} style={styles.logo} />\n          )}\n\n          <Layout style={styles.inputView}>\n            <Input\n              autoCapitalize=\"none\"\n              status=\"control\"\n              autoComplete=\"username\"\n              style={styles.TextInput}\n              placeholder=\"username / email\"\n              placeholderTextColor=\"white\"\n              keyboardType=\"email-address\"\n              onChangeText={(userName) => setUserName(userName)}\n              value={userName}\n              onSubmitEditing={() => passwordRef.current.focus()}\n              blurOnSubmit={false}\n            />\n          </Layout>\n          <Layout style={styles.inputView}>\n            <Input\n              style={styles.TextInput}\n              autoComplete=\"password\"\n              placeholder=\"password\"\n              placeholderTextColor=\"white\"\n              secureTextEntry={true}\n              onChangeText={(password) => setPassword(password)}\n              value={password}\n              ref={passwordRef}\n            />\n          </Layout>\n          <TouchableOpacity\n            onPress={() => {\n              navigation.navigate('ForgotPassword');\n            }}>\n            <Text style={styles.forgot_button}>Forgot Password?</Text>\n          </TouchableOpacity>\n          {isLoading ? (\n            <Layout\n              style={{ position: 'absolute', backgroundColor: 'transparent' }}>\n              <Spinner />\n            </Layout>\n          ) : null}\n\n          <TouchableOpacity\n            style={styles.loginBtn}\n            onPress={() => {\n              handleLogin();\n            }}>\n            <Text style={{ color: '#fff' }}>LOGIN</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={{\n              width: '50%',\n              borderRadius: 25,\n              height: 40,\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginTop: 20,\n              backgroundColor: darkMode ? '#8b31e3' : 'rgb(98,111,187)',\n              maxWidth: 300,\n            }}\n            onPress={() => {\n              guestLogin();\n            }}>\n            <Text style={{ color: '#fff' }}>Try As Guest</Text>\n          </TouchableOpacity>\n          <Text style={styles.error}>{loginError}</Text>\n          <TouchableOpacity\n            style={{ width: '100%' }}\n            onPress={() => {\n              navigation.navigate('Signup');\n            }}>\n            <Layout level={'2'} style={styles.signupBtn}>\n              <Text>SIGN UP</Text>\n            </Layout>\n          </TouchableOpacity>\n        </Layout>\n      </KeyboardAvoidingView>\n    </TouchableWithoutFeedback>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  image: {\n    marginBottom: 40,\n  },\n\n  inputView: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 50,\n    marginRight: 50,\n    margin: 10,\n  },\n\n  TextInput: {\n    backgroundColor: '#b42bba',\n    borderColor: '#b42bba',\n    color: '#fff',\n    borderWidth: 1,\n    borderRadius: 30,\n    width: '100%',\n    maxWidth: 300,\n  },\n\n  forgot_button: {\n    height: 30,\n    marginBottom: 30,\n  },\n\n  loginBtn: {\n    width: '80%',\n    borderRadius: 25,\n    height: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 10,\n    backgroundColor: '#ff3f5e',\n    maxWidth: 300,\n  },\n  guestButton: {\n    width: '60%',\n    borderRadius: 25,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 20,\n  },\n  signupBtn: {\n    marginTop: 60,\n    width: '100%',\n    height: 50,\n    alignItems: 'center',\n    alignSelf: 'center',\n    justifyContent: 'center',\n    maxWidth: 800,\n  },\n  error: {\n    color: 'red',\n    fontSize: 15,\n  },\n  logo: {\n    width: 178,\n    height: 197,\n    marginBottom: 20,\n  },\n});\n","import { HeaderBackButton } from '@react-navigation/elements';\nimport { Platform } from 'react-native';\n\nexport default function BackButton({ navigation, ...props }) {\n  return (\n    <HeaderBackButton\n      {...props}\n      onPress={navigation.goBack}\n      label=\"Back\"\n      labelVisible={Platform.OS === 'ios'}\n    />\n  );\n}\n","// Import React and Component\nimport React, { useState, useRef } from 'react';\nimport {\n  StyleSheet,\n  KeyboardAvoidingView,\n  Keyboard,\n  TouchableOpacity,\n  ScrollView,\n  Platform,\n} from 'react-native';\n\nimport {\n  CheckBox,\n  IndexPath,\n  Layout,\n  Select,\n  SelectItem,\n  Text,\n  Input,\n  Spinner,\n} from '@ui-kitten/components';\nimport {\n  useGetCollegeListQuery,\n  useSignupUserMutation,\n} from '../../api/usersApi';\n\nconst Signup = ({ navigation }) => {\n  const [realFirstName, setRealFirstName] = useState('');\n  const [realLastName, setRealLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [major, setMajor] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(new IndexPath(0));\n  const [simplifiedSignup, setSimplifiedSignUp] = useState(false);\n  const [userCollege, setUserCollege] = useState({\n    collegeName: '',\n    humanReadableCollegeName: null,\n  });\n\n  const { data: collegeList } = useGetCollegeListQuery();\n  const [signupUser, { isLoading: signupLoading }] = useSignupUserMutation();\n\n  const firstNameInputRef = useRef<Input>();\n  const lastNameInputRef = useRef<Input>();\n  const passwordInputRef = useRef<Input>();\n  const majorInputRef = useRef<Input>();\n\n  const validateInput = () => {\n    if (!simplifiedSignup) {\n      if (!realFirstName) {\n        alert('Please fill First Name');\n        return false;\n      }\n      if (!realLastName) {\n        alert('Please fill Last Name');\n        return false;\n      }\n\n      if (!userCollege.collegeName) {\n        alert('Please fill College Name');\n        return false;\n      }\n\n      if (!major) {\n        alert('Please fill Major');\n        return false;\n      }\n    }\n\n    if (!email) {\n      alert('Please fill Email');\n      return false;\n    }\n\n    if (!password) {\n      alert('Please fill Password');\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleSubmitButton = async () => {\n    if (validateInput()) {\n      try {\n        const body = {\n          email,\n          password,\n          realFirstName,\n          realLastName,\n          collegeName: userCollege.collegeName,\n          major,\n        };\n\n        await signupUser(body).unwrap();\n        navigation.navigate('VerifyEmail');\n      } catch (e) {\n        console.warn('Signup error: ', e);\n      }\n    }\n  };\n\n  const renderCollegeDropDown = () => {\n    function handleSelection(index) {\n      setSelectedIndex(index);\n      const newObject = {\n        collegeName: collegeList[index.row].id,\n        humanReadableCollegeName: collegeList[index.row].label,\n      };\n      setUserCollege(newObject);\n    }\n\n    return (\n      <Layout style={styles.containerDrop}>\n        <Select\n          placeholder={'Choose A College'}\n          value={\n            !userCollege.humanReadableCollegeName\n              ? 'Selection'\n              : userCollege.humanReadableCollegeName\n          }\n          onFocus={Keyboard.dismiss}\n          selectedIndex={selectedIndex}\n          onSelect={handleSelection}>\n          {collegeList &&\n            collegeList.map((college, index) => (\n              <SelectItem title={college.label} key={index} />\n            ))}\n        </Select>\n      </Layout>\n    );\n  };\n\n  let fields = [];\n  fields.push(\n    <Layout key={'1'}>\n      <Layout style={styles.SectionStyle}>\n        <Layout style={styles.labelSection}>\n          <Text style={styles.label}>Email</Text>\n        </Layout>\n        <Input\n          style={styles.inputStyle}\n          onChangeText={(email) => setEmail(email)}\n          underlineColorAndroid=\"#f000\"\n          placeholder=\"Enter Email\"\n          placeholderTextColor=\"#8b9cb5\"\n          defaultValue=\"\"\n          autoCapitalize=\"none\"\n          returnKeyType=\"next\"\n          onSubmitEditing={() =>\n            passwordInputRef.current ? passwordInputRef.current.focus() : null\n          }\n          blurOnSubmit={false}\n        />\n      </Layout>\n      <Layout style={styles.SectionStyle}>\n        <Layout style={styles.labelSection}>\n          <Text style={styles.label}>Password</Text>\n        </Layout>\n        <Input\n          style={styles.inputStyle}\n          onChangeText={(password) => setPassword(password)}\n          underlineColorAndroid=\"#f000\"\n          placeholder=\"Enter Password\"\n          placeholderTextColor=\"#8b9cb5\"\n          defaultValue=\"\"\n          ref={passwordInputRef}\n          returnKeyType=\"next\"\n          secureTextEntry={true}\n          onSubmitEditing={() =>\n            firstNameInputRef.current ? firstNameInputRef.current.focus() : null\n          }\n          blurOnSubmit={false}\n        />\n      </Layout>\n    </Layout>\n  );\n\n  if (!simplifiedSignup) {\n    fields.push(\n      <Layout key={'2'}>\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>First Name</Text>\n          </Layout>\n          <Input\n            style={styles.inputStyle}\n            onChangeText={setRealFirstName}\n            ref={firstNameInputRef}\n            underlineColorAndroid=\"#f000\"\n            placeholder=\"Enter First Name\"\n            placeholderTextColor=\"#8b9cb5\"\n            defaultValue=\"\"\n            autoCapitalize=\"sentences\"\n            returnKeyType=\"next\"\n            onSubmitEditing={() =>\n              lastNameInputRef?.current\n                ? lastNameInputRef.current.focus()\n                : null\n            }\n            blurOnSubmit={false}\n          />\n        </Layout>\n\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>Last Name</Text>\n          </Layout>\n          <Input\n            style={styles.inputStyle}\n            onChangeText={setRealLastName}\n            underlineColorAndroid=\"#f000\"\n            placeholder=\"Enter Last Name\"\n            placeholderTextColor=\"#8b9cb5\"\n            defaultValue=\"\"\n            ref={lastNameInputRef}\n            autoCapitalize=\"sentences\"\n            returnKeyType=\"next\"\n            onSubmitEditing={() =>\n              majorInputRef.current ? majorInputRef.current.focus() : null\n            }\n            blurOnSubmit={false}\n          />\n        </Layout>\n\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>Intended Major</Text>\n          </Layout>\n          <Input\n            style={styles.inputStyle}\n            onChangeText={setMajor}\n            underlineColorAndroid=\"#f000\"\n            placeholder=\"Enter Intended Major\"\n            placeholderTextColor=\"#8b9cb5\"\n            defaultValue=\"\"\n            ref={majorInputRef}\n            blurOnSubmit={true}\n          />\n        </Layout>\n\n        <Layout style={styles.SectionStyle}>\n          <Layout style={styles.labelSection}>\n            <Text style={styles.label}>College Name</Text>\n          </Layout>\n          {renderCollegeDropDown()}\n        </Layout>\n      </Layout>\n    );\n  }\n\n  return (\n    // Registration Page\n    <Layout style={{ flex: 1 }}>\n      <ScrollView style={{ flex: 1 }}>\n        {/* Spinner */}\n        {signupLoading && (\n          <Layout\n            style={{\n              flex: 1,\n              position: 'absolute',\n              zIndex: 1,\n              top: '50%',\n              left: '50%',\n              backgroundColor: 'transparent',\n            }}>\n            <Spinner />\n          </Layout>\n        )}\n\n        <Layout style={{ paddingVertical: 30, paddingHorizontal: 40 }}>\n          <CheckBox\n            checked={simplifiedSignup}\n            onChange={(nextChecked) => setSimplifiedSignUp(nextChecked)}>\n            Simplified Signup\n          </CheckBox>\n        </Layout>\n\n        <KeyboardAvoidingView\n          style={{ flex: 1 }}\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n          {fields}\n\n          <TouchableOpacity\n            style={styles.buttonStyle}\n            onPress={handleSubmitButton}>\n            <Text style={styles.buttonTextStyle}>Register</Text>\n          </TouchableOpacity>\n        </KeyboardAvoidingView>\n      </ScrollView>\n    </Layout>\n  );\n};\nexport default Signup;\n\nconst styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10,\n  },\n  buttonStyle: {\n    backgroundColor: '#b42bba',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16,\n  },\n  inputStyle: {\n    flex: 1,\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8',\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n  successTextStyle: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30,\n  },\n  label: {\n    textAlign: 'center',\n    fontSize: 15,\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  labelSection: {\n    justifyContent: 'center',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  text: {\n    fontSize: 20,\n    margin: 20,\n  },\n  input: {\n    width: '80%',\n    margin: 20,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 20,\n    height: 40,\n    padding: 10,\n  },\n  button: {\n    width: '80%',\n    margin: 20,\n    alignItems: 'center',\n    backgroundColor: '#b42bba',\n    height: 40,\n    borderRadius: 20,\n    borderColor: '#b42bba',\n    justifyContent: 'center',\n  },\n  buttonText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n  },\n  containerDrop: {\n    minHeight: 128,\n    minWidth: 200,\n  },\n});\n","import React from 'react';\nimport { Layout, Text, Input, Spinner } from '@ui-kitten/components';\nimport { StyleSheet, TouchableOpacity } from 'react-native';\nimport {\n  useVerifySignupMutation,\n  useLazyGetUserInfoQuery,\n} from '../../api/usersApi';\nimport { useAppDispatch } from '../../../app/hooks';\nimport { userKeyUpdated } from '../../../app/appDataSlice';\n\nexport default function VerifyEmail() {\n  const [verificationCode, setVerificationCode] = React.useState('');\n  const [verifyCode, { isError }] = useVerifySignupMutation();\n  const [getUserInfo, { isLoading: getUserInfoLoading }] =\n    useLazyGetUserInfoQuery();\n  const dispatch = useAppDispatch();\n\n  const handleVerifyCodeButton = async () => {\n    try {\n      const { password } = await verifyCode(verificationCode).unwrap();\n      dispatch(userKeyUpdated(password));\n      await getUserInfo(password).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't verify code\", error);\n    }\n  };\n\n  return (\n    <Layout style={styles.container}>\n      <Text style={styles.text}>\n        A verification code has been sent to your email. Please check your email\n        and enter the code below.\n      </Text>\n      {getUserInfoLoading && <Spinner />}\n      {isError && <Text>Error verifying code</Text>}\n      <Input\n        style={styles.input}\n        placeholder=\"Verification Code\"\n        keyboardType=\"numeric\"\n        onChangeText={(text) => setVerificationCode(text)}\n      />\n      <TouchableOpacity style={styles.button} onPress={handleVerifyCodeButton}>\n        <Text style={styles.buttonText}>Finish Signup</Text>\n      </TouchableOpacity>\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  SectionStyle: {\n    flexDirection: 'row',\n    height: 40,\n    marginTop: 20,\n    marginLeft: 35,\n    marginRight: 35,\n    margin: 10,\n  },\n  buttonStyle: {\n    backgroundColor: '#b42bba',\n    borderWidth: 0,\n    color: '#FFFFFF',\n    borderColor: '#7DE24E',\n    height: 40,\n    alignItems: 'center',\n    borderRadius: 30,\n    marginLeft: 35,\n    marginRight: 35,\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  buttonTextStyle: {\n    color: '#FFFFFF',\n    paddingVertical: 10,\n    fontSize: 16,\n  },\n  inputStyle: {\n    flex: 1,\n    color: 'black',\n    paddingLeft: 15,\n    paddingRight: 15,\n    borderWidth: 1,\n    borderRadius: 30,\n    borderColor: '#dadae8',\n  },\n  errorTextStyle: {\n    color: 'red',\n    textAlign: 'center',\n    fontSize: 14,\n  },\n  successTextStyle: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30,\n  },\n  description: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 18,\n    padding: 30,\n  },\n  label: {\n    color: 'black',\n    textAlign: 'center',\n    fontSize: 15,\n    paddingLeft: 10,\n    paddingRight: 10,\n  },\n  labelSection: {\n    justifyContent: 'center',\n  },\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n\n  text: {\n    fontSize: 20,\n    margin: 20,\n  },\n  input: {\n    width: '80%',\n    margin: 20,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 20,\n    height: 40,\n    padding: 10,\n  },\n  button: {\n    width: '80%',\n    margin: 20,\n    alignItems: 'center',\n    backgroundColor: '#b42bba',\n    height: 40,\n    borderRadius: 20,\n    borderColor: '#b42bba',\n    justifyContent: 'center',\n  },\n  buttonText: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    color: 'white',\n  },\n  containerDrop: {\n    minHeight: 128,\n    minWidth: 200,\n  },\n});\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useTheme } from '@ui-kitten/components';\nimport { selectDarkMode } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport BackButton from '../../../components/BackButton';\nimport SignupForm from './SignupForm';\nimport VerifyEmail from './VerifyEmail';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Signup() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Stack.Navigator\n      screenOptions={({ navigation }) => ({\n        headerStyle: {\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff',\n        },\n        headerLeft: (props) => (\n          <BackButton {...props} navigation={navigation} />\n        ),\n      })}>\n      <Stack.Screen\n        name=\"SignupForm\"\n        component={SignupForm}\n        options={{ title: 'Signup' }}\n      />\n      <Stack.Screen\n        name=\"VerifyEmail\"\n        component={VerifyEmail}\n        options={{ title: 'Verify Email' }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { useTheme } from '@ui-kitten/components';\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport BackButton from '../../components/BackButton';\nimport ForgotPassword from './ForgotPassword/index';\nimport Login from './Login';\nimport Signup from './Signup/index';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Auth() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff',\n        },\n      }}>\n      <Stack.Screen\n        name=\"Login\"\n        component={Login}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"Signup\"\n        component={Signup}\n        options={{ headerShown: false }}\n      />\n      <Stack.Screen\n        name=\"ForgotPassword\"\n        component={ForgotPassword}\n        options={{ title: 'Reset Password' }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\nimport Constants from 'expo-constants';\n\ntype HeaderProps = {\n  accessoryLeft?: keyof JSX.IntrinsicElements | JSX.Element;\n  accessoryRight?: keyof JSX.IntrinsicElements | JSX.Element;\n  center?: keyof JSX.IntrinsicElements | JSX.Element;\n  title: string;\n  level?: '1' | '2' | '3' | '4';\n};\n\nexport default function Header({\n  accessoryLeft,\n  accessoryRight,\n  title,\n  center,\n  level = '1',\n}: HeaderProps) {\n  return (\n    <Layout\n      level={level}\n      style={{\n        paddingTop: Constants.statusBarHeight + 10,\n        width: '100%',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingHorizontal: 20,\n      }}>\n      <Layout level={level} style={{ flexDirection: 'row' }}>\n        {accessoryLeft}\n        <Text style={{ marginLeft: 10, fontSize: 20, fontWeight: '500' }}>\n          {title}\n        </Text>\n      </Layout>\n      {center}\n\n      {accessoryRight}\n    </Layout>\n  );\n}\n","export const DISCOVER_LIST_PAGE_SIZE = 5;\n\nexport const tagIndices = [\n  'Clubs',\n  'Events',\n  'College News',\n  'Courses',\n  'HMC',\n  'Pomona',\n  'CMC',\n  'Pitzer',\n  'Scripps',\n];\n\nexport const adminTagIndices = [\n  'Athena Network',\n  'Clubs',\n  'Events',\n  'College News',\n  'Courses',\n  'HMC',\n  'Pomona',\n  'CMC',\n  'Pitzer',\n  'Scripps',\n];\n\nexport const MAX_WIDTH_WEB = 700;\n\nexport const postOptions = ['Image Post', 'Text Post', 'Link'];\n\nexport const IMAGE_BUCKET_URL =\n  'https://athena-image-storage.s3.us-west-2.amazonaws.com/imagePostImages';\n\nexport const EMOJI_LIST = [\n  '😀',\n  '😁',\n  '😂',\n  '🤣',\n  '😃',\n  '😄',\n  '😅',\n  '😆',\n  '😉',\n  '😊',\n  '😋',\n  '😎',\n  '😍',\n  '😘',\n  '😗',\n  '😙',\n  '😚',\n  '☺',\n  '🙂',\n  '🤗',\n  '🤔',\n  '😐',\n  '😑',\n  '😶',\n  '🙄',\n  '😏',\n  '😣',\n  '😥',\n  '😮',\n  '🤐',\n  '😯',\n  '😪',\n  '😫',\n  '😴',\n  '😌',\n  '🤓',\n  '😛',\n  '😜',\n  '😝',\n  '🤤',\n  '😒',\n  '😓',\n  '😔',\n  '😕',\n  '🙃',\n  '🤑',\n  '😲',\n  '☹',\n  '🙁',\n  '😖',\n  '😞',\n  '😟',\n  '😤',\n  '😢',\n  '😭',\n  '😦',\n  '😧',\n  '😨',\n  '😩',\n  '😬',\n  '😰',\n  '😱',\n  '😳',\n  '😵',\n  '😡',\n  '😠',\n  '😇',\n  '🤠',\n  '🤡',\n  '🤥',\n  '😷',\n  '🤒',\n  '🤕',\n  '🤢',\n  '🤧',\n  '😈',\n  '👿',\n  '👹',\n  '👺',\n  '💀',\n  '☠',\n  '👻',\n  '👽',\n  '👾',\n  '🤖',\n  '💩',\n  '😺',\n  '😸',\n  '😹',\n  '😻',\n  '😼',\n  '😽',\n  '🙀',\n  '😿',\n  '😾',\n  '🙈',\n  '🙉',\n  '🙊',\n  '👦',\n  '👦🏻',\n  '👦🏼',\n  '👦🏽',\n  '👦🏾',\n  '👦🏿',\n  '👧',\n  '👧🏻',\n  '👧🏼',\n  '👧🏽',\n  '👧🏾',\n  '👧🏿',\n  '👨',\n  '👨🏻',\n  '👨🏼',\n  '👨🏽',\n  '👨🏾',\n  '👨🏿',\n  '👩',\n  '👩🏻',\n  '👩🏼',\n  '👩🏽',\n  '👩🏾',\n  '👩🏿',\n  '👴',\n  '👴🏻',\n  '👴🏼',\n  '👴🏽',\n  '👴🏾',\n  '👴🏿',\n  '👵',\n  '👵🏻',\n  '👵🏼',\n  '👵🏽',\n  '👵🏾',\n  '👵🏿',\n  '👶',\n  '👶🏻',\n  '👶🏼',\n  '👶🏽',\n  '👶🏾',\n  '👶🏿',\n  '👼',\n  '👼🏻',\n  '👼🏼',\n  '👼🏽',\n  '👼🏾',\n  '👼🏿',\n  '👮',\n  '👮🏻',\n  '👮🏼',\n  '👮🏽',\n  '👮🏾',\n  '👮🏿',\n  '🕵',\n  '🕵🏻',\n  '🕵🏼',\n  '🕵🏽',\n  '🕵🏾',\n  '🕵🏿',\n  '💂',\n  '💂🏻',\n  '💂🏼',\n  '💂🏽',\n  '💂🏾',\n  '💂🏿',\n  '👷',\n  '👷🏻',\n  '👷🏼',\n  '👷🏽',\n  '👷🏾',\n  '👷🏿',\n  '👳',\n  '👳🏻',\n  '👳🏼',\n  '👳🏽',\n  '👳🏾',\n  '👳🏿',\n  '👱',\n  '👱🏻',\n  '👱🏼',\n  '👱🏽',\n  '👱🏾',\n  '👱🏿',\n  '🎅',\n  '🎅🏻',\n  '🎅🏼',\n  '🎅🏽',\n  '🎅🏾',\n  '🎅🏿',\n  '🤶',\n  '🤶🏻',\n  '🤶🏼',\n  '🤶🏽',\n  '🤶🏾',\n  '🤶🏿',\n  '👸',\n  '👸🏻',\n  '👸🏼',\n  '👸🏽',\n  '👸🏾',\n  '👸🏿',\n  '🤴',\n  '🤴🏻',\n  '🤴🏼',\n  '🤴🏽',\n  '🤴🏾',\n  '🤴🏿',\n  '👰',\n  '👰🏻',\n  '👰🏼',\n  '👰🏽',\n  '👰🏾',\n  '👰🏿',\n  '🤵',\n  '🤵🏻',\n  '🤵🏼',\n  '🤵🏽',\n  '🤵🏾',\n  '🤵🏿',\n  '🤰',\n  '🤰🏻',\n  '🤰🏼',\n  '🤰🏽',\n  '🤰🏾',\n  '🤰🏿',\n  '👲',\n  '👲🏻',\n  '👲🏼',\n  '👲🏽',\n  '👲🏾',\n  '👲🏿',\n  '🙍',\n  '🙍🏻',\n  '🙍🏼',\n  '🙍🏽',\n  '🙍🏾',\n  '🙍🏿',\n  '🙎',\n  '🙎🏻',\n  '🙎🏼',\n  '🙎🏽',\n  '🙎🏾',\n  '🙎🏿',\n  '🙅',\n  '🙅🏻',\n  '🙅🏼',\n  '🙅🏽',\n  '🙅🏾',\n  '🙅🏿',\n  '🙆',\n  '🙆🏻',\n  '🙆🏼',\n  '🙆🏽',\n  '🙆🏾',\n  '🙆🏿',\n  '💁',\n  '💁🏻',\n  '💁🏼',\n  '💁🏽',\n  '💁🏾',\n  '💁🏿',\n  '🙋',\n  '🙋🏻',\n  '🙋🏼',\n  '🙋🏽',\n  '🙋🏾',\n  '🙋🏿',\n  '🙇',\n  '🙇🏻',\n  '🙇🏼',\n  '🙇🏽',\n  '🙇🏾',\n  '🙇🏿',\n  '🤦',\n  '🤦🏻',\n  '🤦🏼',\n  '🤦🏽',\n  '🤦🏾',\n  '🤦🏿',\n  '🤷',\n  '🤷🏻',\n  '🤷🏼',\n  '🤷🏽',\n  '🤷🏾',\n  '🤷🏿',\n  '💆',\n  '💆🏻',\n  '💆🏼',\n  '💆🏽',\n  '💆🏾',\n  '💆🏿',\n  '💇',\n  '💇🏻',\n  '💇🏼',\n  '💇🏽',\n  '💇🏾',\n  '💇🏿',\n  '🚶',\n  '🚶🏻',\n  '🚶🏼',\n  '🚶🏽',\n  '🚶🏾',\n  '🚶🏿',\n  '🏃',\n  '🏃🏻',\n  '🏃🏼',\n  '🏃🏽',\n  '🏃🏾',\n  '🏃🏿',\n  '💃',\n  '💃🏻',\n  '💃🏼',\n  '💃🏽',\n  '💃🏾',\n  '💃🏿',\n  '🕺',\n  '🕺🏻',\n  '🕺🏼',\n  '🕺🏽',\n  '🕺🏾',\n  '🕺🏿',\n  '👯',\n  '🕴',\n  '🗣',\n  '👤',\n  '👥',\n  '🤺',\n  '🏇',\n  '⛷',\n  '🏂',\n  '🏌',\n  '🏄',\n  '🏄🏻',\n  '🏄🏼',\n  '🏄🏽',\n  '🏄🏾',\n  '🏄🏿',\n  '🚣',\n  '🚣🏻',\n  '🚣🏼',\n  '🚣🏽',\n  '🚣🏾',\n  '🚣🏿',\n  '🏊',\n  '🏊🏻',\n  '🏊🏼',\n  '🏊🏽',\n  '🏊🏾',\n  '🏊🏿',\n  '⛹',\n  '⛹🏻',\n  '⛹🏼',\n  '⛹🏽',\n  '⛹🏾',\n  '⛹🏿',\n  '🏋',\n  '🏋🏻',\n  '🏋🏼',\n  '🏋🏽',\n  '🏋🏾',\n  '🏋🏿',\n  '🚴',\n  '🚴🏻',\n  '🚴🏼',\n  '🚴🏽',\n  '🚴🏾',\n  '🚴🏿',\n  '🚵',\n  '🚵🏻',\n  '🚵🏼',\n  '🚵🏽',\n  '🚵🏾',\n  '🚵🏿',\n  '🏎',\n  '🏍',\n  '🤸',\n  '🤸🏻',\n  '🤸🏼',\n  '🤸🏽',\n  '🤸🏾',\n  '🤸🏿',\n  '🤼',\n  '🤼🏻',\n  '🤼🏼',\n  '🤼🏽',\n  '🤼🏾',\n  '🤼🏿',\n  '🤽',\n  '🤽🏻',\n  '🤽🏼',\n  '🤽🏽',\n  '🤽🏾',\n  '🤽🏿',\n  '🤾',\n  '🤾🏻',\n  '🤾🏼',\n  '🤾🏽',\n  '🤾🏾',\n  '🤾🏿',\n  '🤹',\n  '🤹🏻',\n  '🤹🏼',\n  '🤹🏽',\n  '🤹🏾',\n  '🤹🏿',\n  '👫',\n  '👬',\n  '👭',\n  '💏',\n  '👩‍❤️‍💋‍👨',\n  '👨‍❤️‍💋‍👨',\n  '👩‍❤️‍💋‍👩',\n  '💑',\n  '👩‍❤️‍👨',\n  '👨‍❤️‍👨',\n  '👩‍❤️‍👩',\n  '👪',\n  '👨‍👩‍👦',\n  '👨‍👩‍👧',\n  '👨‍👩‍👧‍👦',\n  '👨‍👩‍👦‍👦',\n  '👨‍👩‍👧‍👧',\n  '👨‍👨‍👦',\n  '👨‍👨‍👧',\n  '👨‍👨‍👧‍👦',\n  '👨‍👨‍👦‍👦',\n  '👨‍👨‍👧‍👧',\n  '👩‍👩‍👦',\n  '👩‍👩‍👧',\n  '👩‍👩‍👧‍👦',\n  '👩‍👩‍👦‍👦',\n  '👩‍👩‍👧‍👧',\n  '🏻',\n  '🏼',\n  '🏽',\n  '🏾',\n  '🏿',\n  '💪',\n  '💪🏻',\n  '💪🏼',\n  '💪🏽',\n  '💪🏾',\n  '💪🏿',\n  '🤳',\n  '🤳🏻',\n  '🤳🏼',\n  '🤳🏽',\n  '🤳🏾',\n  '🤳🏿',\n  '👈',\n  '👈🏻',\n  '👈🏼',\n  '👈🏽',\n  '👈🏾',\n  '👈🏿',\n  '👉',\n  '👉🏻',\n  '👉🏼',\n  '👉🏽',\n  '👉🏾',\n  '👉🏿',\n  '☝',\n  '☝🏻',\n  '☝🏼',\n  '☝🏽',\n  '☝🏾',\n  '☝🏿',\n  '👆',\n  '👆🏻',\n  '👆🏼',\n  '👆🏽',\n  '👆🏾',\n  '👆🏿',\n  '🖕',\n  '🖕🏻',\n  '🖕🏼',\n  '🖕🏽',\n  '🖕🏾',\n  '🖕🏿',\n  '👇',\n  '👇🏻',\n  '👇🏼',\n  '👇🏽',\n  '👇🏾',\n  '👇🏿',\n  '✌',\n  '✌🏻',\n  '✌🏼',\n  '✌🏽',\n  '✌🏾',\n  '✌🏿',\n  '🤞',\n  '🤞🏻',\n  '🤞🏼',\n  '🤞🏽',\n  '🤞🏾',\n  '🤞🏿',\n  '🖖',\n  '🖖🏻',\n  '🖖🏼',\n  '🖖🏽',\n  '🖖🏾',\n  '🖖🏿',\n  '🤘',\n  '🤘🏻',\n  '🤘🏼',\n  '🤘🏽',\n  '🤘🏾',\n  '🤘🏿',\n  '🤙',\n  '🤙🏻',\n  '🤙🏼',\n  '🤙🏽',\n  '🤙🏾',\n  '🤙🏿',\n  '🖐',\n  '🖐🏻',\n  '🖐🏼',\n  '🖐🏽',\n  '🖐🏾',\n  '🖐🏿',\n  '✋',\n  '✋🏻',\n  '✋🏼',\n  '✋🏽',\n  '✋🏾',\n  '✋🏿',\n  '👌',\n  '👌🏻',\n  '👌🏼',\n  '👌🏽',\n  '👌🏾',\n  '👌🏿',\n  '👍',\n  '👍🏻',\n  '👍🏼',\n  '👍🏽',\n  '👍🏾',\n  '👍🏿',\n  '👎',\n  '👎🏻',\n  '👎🏼',\n  '👎🏽',\n  '👎🏾',\n  '👎🏿',\n  '✊',\n  '✊🏻',\n  '✊🏼',\n  '✊🏽',\n  '✊🏾',\n  '✊🏿',\n  '👊',\n  '👊🏻',\n  '👊🏼',\n  '👊🏽',\n  '👊🏾',\n  '👊🏿',\n  '🤛',\n  '🤛🏻',\n  '🤛🏼',\n  '🤛🏽',\n  '🤛🏾',\n  '🤛🏿',\n  '🤜',\n  '🤜🏻',\n  '🤜🏼',\n  '🤜🏽',\n  '🤜🏾',\n  '🤜🏿',\n  '🤚',\n  '🤚🏻',\n  '🤚🏼',\n  '🤚🏽',\n  '🤚🏾',\n  '🤚🏿',\n  '👋',\n  '👋🏻',\n  '👋🏼',\n  '👋🏽',\n  '👋🏾',\n  '👋🏿',\n  '👏',\n  '👏🏻',\n  '👏🏼',\n  '👏🏽',\n  '👏🏾',\n  '👏🏿',\n  '✍',\n  '✍🏻',\n  '✍🏼',\n  '✍🏽',\n  '✍🏾',\n  '✍🏿',\n  '👐',\n  '👐🏻',\n  '👐🏼',\n  '👐🏽',\n  '👐🏾',\n  '👐🏿',\n  '🙌',\n  '🙌🏻',\n  '🙌🏼',\n  '🙌🏽',\n  '🙌🏾',\n  '🙌🏿',\n  '🙏',\n  '🙏🏻',\n  '🙏🏼',\n  '🙏🏽',\n  '🙏🏾',\n  '🙏🏿',\n  '🤝',\n  '🤝🏻',\n  '🤝🏼',\n  '🤝🏽',\n  '🤝🏾',\n  '🤝🏿',\n  '💅',\n  '💅🏻',\n  '💅🏼',\n  '💅🏽',\n  '💅🏾',\n  '💅🏿',\n  '👂',\n  '👂🏻',\n  '👂🏼',\n  '👂🏽',\n  '👂🏾',\n  '👂🏿',\n  '👃',\n  '👃🏻',\n  '👃🏼',\n  '👃🏽',\n  '👃🏾',\n  '👃🏿',\n  '👣',\n  '👀',\n  '👁',\n  '👁‍🗨',\n  '👅',\n  '👄',\n  '💋',\n  '💘',\n  '❤',\n  '💓',\n  '💔',\n  '💕',\n  '💖',\n  '💗',\n  '💙',\n  '💚',\n  '💛',\n  '💜',\n  '🖤',\n  '💝',\n  '💞',\n  '💟',\n  '❣',\n  '💌',\n  '💤',\n  '💢',\n  '💣',\n  '💥',\n  '💦',\n  '💨',\n  '💫',\n  '💬',\n  '🗨',\n  '🗯',\n  '💭',\n  '🕳',\n  '👓',\n  '🕶',\n  '👔',\n  '👕',\n  '👖',\n  '👗',\n  '👘',\n  '👙',\n  '👚',\n  '👛',\n  '👜',\n  '👝',\n  '🛍',\n  '🎒',\n  '👞',\n  '👟',\n  '👠',\n  '👡',\n  '👢',\n  '👑',\n  '👒',\n  '🎩',\n  '🎓',\n  '⛑',\n  '📿',\n  '💄',\n  '💍',\n  '💎',\n  '🐵',\n  '🐒',\n  '🦍',\n  '🐶',\n  '🐕',\n  '🐩',\n  '🐺',\n  '🦊',\n  '🐱',\n  '🐈',\n  '🦁',\n  '🐯',\n  '🐅',\n  '🐆',\n  '🐴',\n  '🐎',\n  '🦌',\n  '🦄',\n  '🐮',\n  '🐂',\n  '🐃',\n  '🐄',\n  '🐷',\n  '🐖',\n  '🐗',\n  '🐽',\n  '🐏',\n  '🐑',\n  '🐐',\n  '🐪',\n  '🐫',\n  '🐘',\n  '🦏',\n  '🐭',\n  '🐁',\n  '🐀',\n  '🐹',\n  '🐰',\n  '🐇',\n  '🐿',\n  '🦇',\n  '🐻',\n  '🐨',\n  '🐼',\n  '🐾',\n  '🦃',\n  '🐔',\n  '🐓',\n  '🐣',\n  '🐤',\n  '🐥',\n  '🐦',\n  '🐧',\n  '🕊',\n  '🦅',\n  '🦆',\n  '🦉',\n  '🐸',\n  '🐊',\n  '🐢',\n  '🦎',\n  '🐍',\n  '🐲',\n  '🐉',\n  '🐳',\n  '🐋',\n  '🐬',\n  '🐟',\n  '🐠',\n  '🐡',\n  '🦈',\n  '🐙',\n  '🐚',\n  '🦀',\n  '🦐',\n  '🦑',\n  '🦋',\n  '🐌',\n  '🐛',\n  '🐜',\n  '🐝',\n  '🐞',\n  '🕷',\n  '🕸',\n  '🦂',\n  '💐',\n  '🌸',\n  '💮',\n  '🏵',\n  '🌹',\n  '🥀',\n  '🌺',\n  '🌻',\n  '🌼',\n  '🌷',\n  '🌱',\n  '🌲',\n  '🌳',\n  '🌴',\n  '🌵',\n  '🌾',\n  '🌿',\n  '☘',\n  '🍀',\n  '🍁',\n  '🍂',\n  '🍃',\n  '🍇',\n  '🍈',\n  '🍉',\n  '🍊',\n  '🍋',\n  '🍌',\n  '🍍',\n  '🍎',\n  '🍏',\n  '🍐',\n  '🍑',\n  '🍒',\n  '🍓',\n  '🥝',\n  '🍅',\n  '🥑',\n  '🍆',\n  '🥔',\n  '🥕',\n  '🌽',\n  '🌶',\n  '🥒',\n  '🍄',\n  '🥜',\n  '🌰',\n  '🍞',\n  '🥐',\n  '🥖',\n  '🥞',\n  '🧀',\n  '🍖',\n  '🍗',\n  '🥓',\n  '🍔',\n  '🍟',\n  '🍕',\n  '🌭',\n  '🌮',\n  '🌯',\n  '🥙',\n  '🥚',\n  '🍳',\n  '🥘',\n  '🍲',\n  '🥗',\n  '🍿',\n  '🍱',\n  '🍘',\n  '🍙',\n  '🍚',\n  '🍛',\n  '🍜',\n  '🍝',\n  '🍠',\n  '🍢',\n  '🍣',\n  '🍤',\n  '🍥',\n  '🍡',\n  '🍦',\n  '🍧',\n  '🍨',\n  '🍩',\n  '🍪',\n  '🎂',\n  '🍰',\n  '🍫',\n  '🍬',\n  '🍭',\n  '🍮',\n  '🍯',\n  '🍼',\n  '🥛',\n  '☕',\n  '🍵',\n  '🍶',\n  '🍾',\n  '🍷',\n  '🍸',\n  '🍹',\n  '🍺',\n  '🍻',\n  '🥂',\n  '🥃',\n  '🍽',\n  '🍴',\n  '🥄',\n  '🔪',\n  '🏺',\n  '🌍',\n  '🌎',\n  '🌏',\n  '🌐',\n  '🗺',\n  '🗾',\n  '🏔',\n  '⛰',\n  '🌋',\n  '🗻',\n  '🏕',\n  '🏖',\n  '🏜',\n  '🏝',\n  '🏞',\n  '🏟',\n  '🏛',\n  '🏗',\n  '🏘',\n  '🏙',\n  '🏚',\n  '🏠',\n  '🏡',\n  '🏢',\n  '🏣',\n  '🏤',\n  '🏥',\n  '🏦',\n  '🏨',\n  '🏩',\n  '🏪',\n  '🏫',\n  '🏬',\n  '🏭',\n  '🏯',\n  '🏰',\n  '💒',\n  '🗼',\n  '🗽',\n  '⛪',\n  '🕌',\n  '🕍',\n  '⛩',\n  '🕋',\n  '⛲',\n  '⛺',\n  '🌁',\n  '🌃',\n  '🌄',\n  '🌅',\n  '🌆',\n  '🌇',\n  '🌉',\n  '♨',\n  '🌌',\n  '🎠',\n  '🎡',\n  '🎢',\n  '💈',\n  '🎪',\n  '🎭',\n  '🖼',\n  '🎨',\n  '🎰',\n  '🚂',\n  '🚃',\n  '🚄',\n  '🚅',\n  '🚆',\n  '🚇',\n  '🚈',\n  '🚉',\n  '🚊',\n  '🚝',\n  '🚞',\n  '🚋',\n  '🚌',\n  '🚍',\n  '🚎',\n  '🚐',\n  '🚑',\n  '🚒',\n  '🚓',\n  '🚔',\n  '🚕',\n  '🚖',\n  '🚗',\n  '🚘',\n  '🚙',\n  '🚚',\n  '🚛',\n  '🚜',\n  '🚲',\n  '🛴',\n  '🛵',\n  '🚏',\n  '🛣',\n  '🛤',\n  '⛽',\n  '🚨',\n  '🚥',\n  '🚦',\n  '🚧',\n  '🛑',\n  '⚓',\n  '⛵',\n  '🛶',\n  '🚤',\n  '🛳',\n  '⛴',\n  '🛥',\n  '🚢',\n  '✈',\n  '🛩',\n  '🛫',\n  '🛬',\n  '💺',\n  '🚁',\n  '🚟',\n  '🚠',\n  '🚡',\n  '🚀',\n  '🛰',\n  '🛎',\n  '🚪',\n  '🛌',\n  '🛏',\n  '🛋',\n  '🚽',\n  '🚿',\n  '🛀',\n  '🛀🏻',\n  '🛀🏼',\n  '🛀🏽',\n  '🛀🏾',\n  '🛀🏿',\n  '🛁',\n  '⌛',\n  '⏳',\n  '⌚',\n  '⏰',\n  '⏱',\n  '⏲',\n  '🕰',\n  '🕛',\n  '🕧',\n  '🕐',\n  '🕜',\n  '🕑',\n  '🕝',\n  '🕒',\n  '🕞',\n  '🕓',\n  '🕟',\n  '🕔',\n  '🕠',\n  '🕕',\n  '🕡',\n  '🕖',\n  '🕢',\n  '🕗',\n  '🕣',\n  '🕘',\n  '🕤',\n  '🕙',\n  '🕥',\n  '🕚',\n  '🕦',\n  '🌑',\n  '🌒',\n  '🌓',\n  '🌔',\n  '🌕',\n  '🌖',\n  '🌗',\n  '🌘',\n  '🌙',\n  '🌚',\n  '🌛',\n  '🌜',\n  '🌡',\n  '☀',\n  '🌝',\n  '🌞',\n  '⭐',\n  '🌟',\n  '🌠',\n  '☁',\n  '⛅',\n  '⛈',\n  '🌤',\n  '🌥',\n  '🌦',\n  '🌧',\n  '🌨',\n  '🌩',\n  '🌪',\n  '🌫',\n  '🌬',\n  '🌀',\n  '🌈',\n  '🌂',\n  '☂',\n  '☔',\n  '⛱',\n  '⚡',\n  '❄',\n  '☃',\n  '⛄',\n  '☄',\n  '🔥',\n  '💧',\n  '🌊',\n  '🎃',\n  '🎄',\n  '🎆',\n  '🎇',\n  '✨',\n  '🎈',\n  '🎉',\n  '🎊',\n  '🎋',\n  '🎍',\n  '🎎',\n  '🎏',\n  '🎐',\n  '🎑',\n  '🎀',\n  '🎁',\n  '🎗',\n  '🎟',\n  '🎫',\n  '🎖',\n  '🏆',\n  '🏅',\n  '🥇',\n  '🥈',\n  '🥉',\n  '⚽',\n  '⚾',\n  '🏀',\n  '🏐',\n  '🏈',\n  '🏉',\n  '🎾',\n  '🎱',\n  '🎳',\n  '🏏',\n  '🏑',\n  '🏒',\n  '🏓',\n  '🏸',\n  '🥊',\n  '🥋',\n  '🥅',\n  '🎯',\n  '⛳',\n  '⛸',\n  '🎣',\n  '🎽',\n  '🎿',\n  '🎮',\n  '🕹',\n  '🎲',\n  '♠',\n  '♥',\n  '♦',\n  '♣',\n  '🃏',\n  '🀄',\n  '🎴',\n  '🔇',\n  '🔈',\n  '🔉',\n  '🔊',\n  '📢',\n  '📣',\n  '📯',\n  '🔔',\n  '🔕',\n  '🎼',\n  '🎵',\n  '🎶',\n  '🎙',\n  '🎚',\n  '🎛',\n  '🎤',\n  '🎧',\n  '📻',\n  '🎷',\n  '🎸',\n  '🎹',\n  '🎺',\n  '🎻',\n  '🥁',\n  '📱',\n  '📲',\n  '☎',\n  '📞',\n  '📟',\n  '📠',\n  '🔋',\n  '🔌',\n  '💻',\n  '🖥',\n  '🖨',\n  '⌨',\n  '🖱',\n  '🖲',\n  '💽',\n  '💾',\n  '💿',\n  '📀',\n  '🎥',\n  '🎞',\n  '📽',\n  '🎬',\n  '📺',\n  '📷',\n  '📸',\n  '📹',\n  '📼',\n  '🔍',\n  '🔎',\n  '🔬',\n  '🔭',\n  '📡',\n  '🕯',\n  '💡',\n  '🔦',\n  '🏮',\n  '📔',\n  '📕',\n  '📖',\n  '📗',\n  '📘',\n  '📙',\n  '📚',\n  '📓',\n  '📒',\n  '📃',\n  '📜',\n  '📄',\n  '📰',\n  '🗞',\n  '📑',\n  '🔖',\n  '🏷',\n  '💰',\n  '💴',\n  '💵',\n  '💶',\n  '💷',\n  '💸',\n  '💳',\n  '💹',\n  '💱',\n  '💲',\n  '✉',\n  '📧',\n  '📨',\n  '📩',\n  '📤',\n  '📥',\n  '📦',\n  '📫',\n  '📪',\n  '📬',\n  '📭',\n  '📮',\n  '🗳',\n  '✏',\n  '✒',\n  '🖋',\n  '🖊',\n  '🖌',\n  '🖍',\n  '📝',\n  '💼',\n  '📁',\n  '📂',\n  '🗂',\n  '📅',\n  '📆',\n  '🗒',\n  '🗓',\n  '📇',\n  '📈',\n  '📉',\n  '📊',\n  '📋',\n  '📌',\n  '📍',\n  '📎',\n  '🖇',\n  '📏',\n  '📐',\n  '✂',\n  '🗃',\n  '🗄',\n  '🗑',\n  '🔒',\n  '🔓',\n  '🔏',\n  '🔐',\n  '🔑',\n  '🗝',\n  '🔨',\n  '⛏',\n  '⚒',\n  '🛠',\n  '🗡',\n  '⚔',\n  '🔫',\n  '🏹',\n  '🛡',\n  '🔧',\n  '🔩',\n  '⚙',\n  '🗜',\n  '⚗',\n  '⚖',\n  '🔗',\n  '⛓',\n  '💉',\n  '💊',\n  '🚬',\n  '⚰',\n  '⚱',\n  '🗿',\n  '🛢',\n  '🔮',\n  '🛒',\n  '🏧',\n  '🚮',\n  '🚰',\n  '♿',\n  '🚹',\n  '🚺',\n  '🚻',\n  '🚼',\n  '🚾',\n  '🛂',\n  '🛃',\n  '🛄',\n  '🛅',\n  '⚠',\n  '🚸',\n  '⛔',\n  '🚫',\n  '🚳',\n  '🚭',\n  '🚯',\n  '🚱',\n  '🚷',\n  '📵',\n  '🔞',\n  '☢',\n  '☣',\n  '⬆',\n  '↗',\n  '➡',\n  '↘',\n  '⬇',\n  '↙',\n  '⬅',\n  '↖',\n  '↕',\n  '↔',\n  '↩',\n  '↪',\n  '⤴',\n  '⤵',\n  '🔃',\n  '🔄',\n  '🔙',\n  '🔚',\n  '🔛',\n  '🔜',\n  '🔝',\n  '🛐',\n  '⚛',\n  '🕉',\n  '✡',\n  '☸',\n  '☯',\n  '✝',\n  '☦',\n  '☪',\n  '☮',\n  '🕎',\n  '🔯',\n  '♈',\n  '♉',\n  '♊',\n  '♋',\n  '♌',\n  '♍',\n  '♎',\n  '♏',\n  '♐',\n  '♑',\n  '♒',\n  '♓',\n  '⛎',\n  '🔀',\n  '🔁',\n  '🔂',\n  '▶',\n  '⏩',\n  '⏭',\n  '⏯',\n  '◀',\n  '⏪',\n  '⏮',\n  '🔼',\n  '⏫',\n  '🔽',\n  '⏬',\n  '⏸',\n  '⏹',\n  '⏺',\n  '⏏',\n  '🎦',\n  '🔅',\n  '🔆',\n  '📶',\n  '📳',\n  '📴',\n  '♻',\n  '📛',\n  '⚜',\n  '🔰',\n  '🔱',\n  '⭕',\n  '✅',\n  '☑',\n  '✔',\n  '✖',\n  '❌',\n  '❎',\n  '➕',\n  '➖',\n  '➗',\n  '➰',\n  '➿',\n  '〽',\n  '✳',\n  '✴',\n  '❇',\n  '‼',\n  '⁉',\n  '❓',\n  '❔',\n  '❕',\n  '❗',\n  '〰',\n  '©',\n  '®',\n  '™',\n  '#️⃣',\n  '*️⃣',\n  '0️⃣',\n  '1️⃣',\n  '2️⃣',\n  '3️⃣',\n  '4️⃣',\n  '5️⃣',\n  '6️⃣',\n  '7️⃣',\n  '8️⃣',\n  '9️⃣',\n  '🔟',\n  '💯',\n  '🔠',\n  '🔡',\n  '🔢',\n  '🔣',\n  '🔤',\n  '🅰',\n  '🆎',\n  '🅱',\n  '🆑',\n  '🆒',\n  '🆓',\n  'ℹ',\n  '🆔',\n  'Ⓜ',\n  '🆕',\n  '🆖',\n  '🅾',\n  '🆗',\n  '🅿',\n  '🆘',\n  '🆙',\n  '🆚',\n  '🈁',\n  '🈂',\n  '🈷',\n  '🈶',\n  '🈯',\n  '🉐',\n  '🈹',\n  '🈚',\n  '🈲',\n  '🉑',\n  '🈸',\n  '🈴',\n  '🈳',\n  '㊗',\n  '㊙',\n  '🈺',\n  '🈵',\n  '▪',\n  '▫',\n  '◻',\n  '◼',\n  '◽',\n  '◾',\n  '⬛',\n  '⬜',\n  '🔶',\n  '🔷',\n  '🔸',\n  '🔹',\n  '🔺',\n  '🔻',\n  '💠',\n  '🔘',\n  '🔲',\n  '🔳',\n  '⚪',\n  '⚫',\n  '🔴',\n  '🔵',\n  '🏁',\n  '🚩',\n  '🎌',\n  '🏴',\n  '🏳',\n  '🇦🇨',\n  '🇦🇩',\n  '🇦🇪',\n  '🇦🇫',\n  '🇦🇬',\n  '🇦🇮',\n  '🇦🇱',\n  '🇦🇲',\n  '🇦🇴',\n  '🇦🇶',\n  '🇦🇷',\n  '🇦🇸',\n  '🇦🇹',\n  '🇦🇺',\n  '🇦🇼',\n  '🇦🇽',\n  '🇦🇿',\n  '🇧🇦',\n  '🇧🇧',\n  '🇧🇩',\n  '🇧🇪',\n  '🇧🇫',\n  '🇧🇬',\n  '🇧🇭',\n  '🇧🇮',\n  '🇧🇯',\n  '🇧🇱',\n  '🇧🇲',\n  '🇧🇳',\n  '🇧🇴',\n  '🇧🇶',\n  '🇧🇷',\n  '🇧🇸',\n  '🇧🇹',\n  '🇧🇻',\n  '🇧🇼',\n  '🇧🇾',\n  '🇧🇿',\n  '🇨🇦',\n  '🇨🇨',\n  '🇨🇩',\n  '🇨🇫',\n  '🇨🇬',\n  '🇨🇭',\n  '🇨🇮',\n  '🇨🇰',\n  '🇨🇱',\n  '🇨🇲',\n  '🇨🇳',\n  '🇨🇴',\n  '🇨🇵',\n  '🇨🇷',\n  '🇨🇺',\n  '🇨🇻',\n  '🇨🇼',\n  '🇨🇽',\n  '🇨🇾',\n  '🇨🇿',\n  '🇩🇪',\n  '🇩🇬',\n  '🇩🇯',\n  '🇩🇰',\n  '🇩🇲',\n  '🇩🇴',\n  '🇩🇿',\n  '🇪🇦',\n  '🇪🇨',\n  '🇪🇪',\n  '🇪🇬',\n  '🇪🇭',\n  '🇪🇷',\n  '🇪🇸',\n  '🇪🇹',\n  '🇪🇺',\n  '🇫🇮',\n  '🇫🇯',\n  '🇫🇰',\n  '🇫🇲',\n  '🇫🇴',\n  '🇫🇷',\n  '🇬🇦',\n  '🇬🇧',\n  '🇬🇩',\n  '🇬🇪',\n  '🇬🇫',\n  '🇬🇬',\n  '🇬🇭',\n  '🇬🇮',\n  '🇬🇱',\n  '🇬🇲',\n  '🇬🇳',\n  '🇬🇵',\n  '🇬🇶',\n  '🇬🇷',\n  '🇬🇸',\n  '🇬🇹',\n  '🇬🇺',\n  '🇬🇼',\n  '🇬🇾',\n  '🇭🇰',\n  '🇭🇲',\n  '🇭🇳',\n  '🇭🇷',\n  '🇭🇹',\n  '🇭🇺',\n  '🇮🇨',\n  '🇮🇩',\n  '🇮🇪',\n  '🇮🇱',\n  '🇮🇲',\n  '🇮🇳',\n  '🇮🇴',\n  '🇮🇶',\n  '🇮🇷',\n  '🇮🇸',\n  '🇮🇹',\n  '🇯🇪',\n  '🇯🇲',\n  '🇯🇴',\n  '🇯🇵',\n  '🇰🇪',\n  '🇰🇬',\n  '🇰🇭',\n  '🇰🇮',\n  '🇰🇲',\n  '🇰🇳',\n  '🇰🇵',\n  '🇰🇷',\n  '🇰🇼',\n  '🇰🇾',\n  '🇰🇿',\n  '🇱🇦',\n  '🇱🇧',\n  '🇱🇨',\n  '🇱🇮',\n  '🇱🇰',\n  '🇱🇷',\n  '🇱🇸',\n  '🇱🇹',\n  '🇱🇺',\n  '🇱🇻',\n  '🇱🇾',\n  '🇲🇦',\n  '🇲🇨',\n  '🇲🇩',\n  '🇲🇪',\n  '🇲🇫',\n  '🇲🇬',\n  '🇲🇭',\n  '🇲🇰',\n  '🇲🇱',\n  '🇲🇲',\n  '🇲🇳',\n  '🇲🇴',\n  '🇲🇵',\n  '🇲🇶',\n  '🇲🇷',\n  '🇲🇸',\n  '🇲🇹',\n  '🇲🇺',\n  '🇲🇻',\n  '🇲🇼',\n  '🇲🇽',\n  '🇲🇾',\n  '🇲🇿',\n  '🇳🇦',\n  '🇳🇨',\n  '🇳🇪',\n  '🇳🇫',\n  '🇳🇬',\n  '🇳🇮',\n  '🇳🇱',\n  '🇳🇴',\n  '🇳🇵',\n  '🇳🇷',\n  '🇳🇺',\n  '🇳🇿',\n  '🇴🇲',\n  '🇵🇦',\n  '🇵🇪',\n  '🇵🇫',\n  '🇵🇬',\n  '🇵🇭',\n  '🇵🇰',\n  '🇵🇱',\n  '🇵🇲',\n  '🇵🇳',\n  '🇵🇷',\n  '🇵🇸',\n  '🇵🇹',\n  '🇵🇼',\n  '🇵🇾',\n  '🇶🇦',\n  '🇷🇪',\n  '🇷🇴',\n  '🇷🇸',\n  '🇷🇺',\n  '🇷🇼',\n  '🇸🇦',\n  '🇸🇧',\n  '🇸🇨',\n  '🇸🇩',\n  '🇸🇪',\n  '🇸🇬',\n  '🇸🇭',\n  '🇸🇮',\n  '🇸🇯',\n  '🇸🇰',\n  '🇸🇱',\n  '🇸🇲',\n  '🇸🇳',\n  '🇸🇴',\n  '🇸🇷',\n  '🇸🇸',\n  '🇸🇹',\n  '🇸🇻',\n  '🇸🇽',\n  '🇸🇾',\n  '🇸🇿',\n  '🇹🇦',\n  '🇹🇨',\n  '🇹🇩',\n  '🇹🇫',\n  '🇹🇬',\n  '🇹🇭',\n  '🇹🇯',\n  '🇹🇰',\n  '🇹🇱',\n  '🇹🇲',\n  '🇹🇳',\n  '🇹🇴',\n  '🇹🇷',\n  '🇹🇹',\n  '🇹🇻',\n  '🇹🇼',\n  '🇹🇿',\n  '🇺🇦',\n  '🇺🇬',\n  '🇺🇲',\n  '🇺🇸',\n  '🇺🇾',\n  '🇺🇿',\n  '🇻🇦',\n  '🇻🇨',\n  '🇻🇪',\n  '🇻🇬',\n  '🇻🇮',\n  '🇻🇳',\n  '🇻🇺',\n  '🇼🇫',\n  '🇼🇸',\n  '🇽🇰',\n  '🇾🇪',\n  '🇾🇹',\n  '🇿🇦',\n  '🇿🇲',\n  '🇿🇼',\n];\n","import { apiSlice } from './apiSlice';\nimport { DiscoverPost } from '../../app/types';\nimport { DISCOVER_LIST_PAGE_SIZE } from '../../constants/discover';\nimport { createEntityAdapter } from '@reduxjs/toolkit';\n\ntype getPostsArgs = {\n  userKey: string;\n  userName: string;\n  pageNumber?: number;\n  tag?: string;\n  searchTerm?: string;\n};\n\nconst postsAdapter = createEntityAdapter<DiscoverPost>({\n  selectId: (post: DiscoverPost) => post._id,\n});\n\n// Helper Functions\n\nconst tranformComments = (comments, userName) =>\n  comments.map((comment) => ({\n    ...comment,\n    numLikes: comment.likes.length,\n    hasLiked: comment.likes.includes(userName),\n  }));\n\nexport const discoverApiSlice = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    getDiscoverPosts: builder.query<any, getPostsArgs>({\n      keepUnusedDataFor: 6000,\n      query: ({ userKey, pageNumber, tag, searchTerm }) => ({\n        url: `/discover/getPosts`,\n        headers: {\n          userKey,\n        },\n        params: {\n          tag,\n          searchTerm,\n          pageNumber,\n          pageLength: DISCOVER_LIST_PAGE_SIZE,\n        },\n      }),\n      transformResponse: (response: DiscoverPost[], _, { userName }) => {\n        // Return Post To State Using Adapters\n        return postsAdapter.addMany(\n          postsAdapter.getInitialState({\n            hasMorePages: response.length > 0,\n          }),\n          // TODO: Refactoring likes and comments. Should maybe be done in backend\n          response.map((post) => ({\n            ...post,\n            numLikes: post.likes.length,\n            hasLiked: post.likes.includes(userName),\n            comments: tranformComments(post.comments, userName),\n          }))\n        );\n      },\n      async onQueryStarted(\n        { userKey, pageNumber, userName, searchTerm, tag },\n        { queryFulfilled, dispatch }\n      ) {\n        if (!pageNumber) {\n          return;\n        }\n        const { data } = await queryFulfilled;\n\n        if (data?.ids?.length > 0) {\n          // Add Posts On Current Request To Page 1\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, pageNumber: 1, userName, searchTerm, tag },\n              (draft) => {\n                postsAdapter.addMany(draft, postsSelectors.selectAll(data));\n              }\n            )\n          );\n\n          if (pageNumber > 1) {\n            // Remove Cached Data From State Since We Already Added It To Page 1\n            dispatch(\n              discoverApiSlice.util.updateQueryData(\n                'getDiscoverPosts',\n                { userKey, pageNumber, userName, searchTerm, tag },\n                (draft) => {\n                  draft = postsAdapter.getInitialState();\n                }\n              )\n            );\n          }\n        } else {\n          // No More Pages To Load\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, pageNumber: 1, userName, searchTerm, tag },\n              (draft) => {\n                draft.hasMorePages = false;\n              }\n            )\n          );\n        }\n      },\n    }),\n\n    createDiscoverPost: builder.mutation({\n      query: ({\n        userKey,\n        title,\n        type,\n        content,\n        tags,\n        status,\n        emoji,\n        imagePostBody,\n        pinned,\n      }) => {\n        if (type === 'contentImage') {\n          return {\n            url: '/discover/addPost',\n            method: 'POST',\n            headers: { userKey },\n            body: imagePostBody,\n          };\n        }\n        return {\n          url: '/discover/addPost',\n          method: 'POST',\n          headers: { userKey },\n          body: {\n            title,\n            type,\n            [type]: content,\n            tags,\n            status,\n            emoji,\n            pinned,\n          },\n        };\n      },\n      async onQueryStarted(\n        { userKey, userName },\n        { dispatch, queryFulfilled }\n      ) {\n        try {\n          const { data: newPost } = await queryFulfilled;\n\n          // Add New Post To State\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, userName, pageNumber: 1 },\n              (draft) => {\n                postsAdapter.addOne(draft, {\n                  ...newPost,\n                  numLikes: 0,\n                  hasLiked: false,\n                });\n              }\n            )\n          );\n        } catch (e) {\n          console.warn('Error Adding Post To State', e);\n        }\n      },\n    }),\n    deleteDiscoverPost: builder.mutation({\n      query: ({ userKey, _id, userName, title }) => ({\n        url: '/discover/deletePost',\n        method: 'DELETE',\n        headers: { userKey },\n        body: {\n          _id,\n          userName,\n          title,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n      async onQueryStarted(\n        { userKey, _id, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, userName, pageNumber: 1, searchTerm, tag },\n              (draft) => {\n                postsAdapter.removeOne(draft, _id);\n              }\n            )\n          );\n        }\n\n        var patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            { userKey, userName, pageNumber: 1 },\n            (draft) => {\n              postsAdapter.removeOne(draft, _id);\n            }\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n        }\n      },\n    }),\n\n    getPostById: builder.query({\n      query: ({ userKey, postId }) => ({\n        url: `/discover/getPostById`,\n        headers: {\n          userKey,\n        },\n        params: {\n          id: postId,\n        },\n      }),\n      async onQueryStarted(\n        { userKey, postId, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        // Replace Post In State With Updated Post\n\n        try {\n          const { data: updatedPost } = await queryFulfilled;\n          const updateFunction = (draft) => {\n            postsAdapter.updateOne(draft, {\n              id: postId,\n              changes: {\n                ...updatedPost,\n                numLikes: updatedPost.likes.length,\n                hasLiked: updatedPost.likes.includes(userName),\n                comments: tranformComments(updatedPost.comments, userName),\n              },\n            });\n          };\n          dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              {\n                userKey,\n                userName,\n                pageNumber: 1,\n              },\n              updateFunction\n            )\n          );\n          if (searchTerm || tag) {\n            dispatch(\n              discoverApiSlice.util.updateQueryData(\n                'getDiscoverPosts',\n                {\n                  userKey,\n                  userName,\n                  pageNumber: 1,\n                  searchTerm,\n                  tag,\n                },\n                updateFunction\n              )\n            );\n          }\n        } catch (e) {\n          console.warn('Error Updating Post In State', e);\n        }\n      },\n    }),\n\n    likePost: builder.mutation({\n      query: ({ userKey, _id, title, postAuthor }) => ({\n        url: '/discover/like',\n        method: 'PATCH',\n        headers: { userKey },\n        body: {\n          _id,\n          title,\n          userName: postAuthor,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n      async onQueryStarted(\n        { userKey, _id, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        const updateFunction = (draft) => {\n          const post = postsSelectors.selectById(draft, _id);\n          // Use updateOne to update the post with the given ID\n          postsAdapter.updateOne(draft, {\n            id: _id,\n            changes: {\n              numLikes: post.hasLiked ? post.numLikes - 1 : post.numLikes + 1,\n              hasLiked: !post.hasLiked,\n            },\n          });\n        };\n\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, pageNumber: 1, userName, searchTerm, tag },\n              updateFunction\n            )\n          );\n        }\n        var patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            { userKey, pageNumber: 1, userName },\n            updateFunction\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n          patchResult.undo();\n        }\n      },\n    }),\n\n    addComment: builder.mutation({\n      query: ({ userKey, _id, text }) => ({\n        url: '/discover/addComment',\n        method: 'POST',\n        headers: { userKey },\n        body: {\n          _id,\n          text,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n\n      async onQueryStarted(\n        { userKey, _id, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        try {\n          await queryFulfilled;\n\n          // Call getPostById to update the post in state\n          dispatch(\n            discoverApiSlice.endpoints.getPostById.initiate({\n              userKey,\n              postId: _id,\n              userName,\n              searchTerm,\n              tag,\n            })\n          );\n        } catch (e) {\n          console.warn('Error Adding Comment To State', e);\n        }\n      },\n    }),\n\n    likeComment: builder.mutation({\n      query: ({ userKey, postId, commentId }) => ({\n        url: '/discover/likeComment',\n        method: 'PATCH',\n        headers: { userKey },\n        body: {\n          postId,\n          commentId,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n      async onQueryStarted(\n        { userKey, postId, commentId, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        const updateFunction = (draft) => {\n          const post = postsSelectors.selectById(draft, postId);\n          // Use updateOne to update the post with the given ID\n          postsAdapter.updateOne(draft, {\n            id: postId,\n            changes: {\n              comments: post.comments.map((comment) => {\n                if (comment._id === commentId) {\n                  return {\n                    ...comment,\n                    numLikes: comment.hasLiked\n                      ? comment.numLikes - 1\n                      : comment.numLikes + 1,\n                    hasLiked: !comment.hasLiked,\n                  };\n                }\n                return comment;\n              }),\n            },\n          });\n        };\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              { userKey, pageNumber: 1, userName, searchTerm, tag },\n              updateFunction\n            )\n          );\n        }\n\n        const patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            { userKey, userName, pageNumber: 1 },\n            updateFunction\n          )\n        );\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n        }\n      },\n    }),\n\n    deleteComment: builder.mutation({\n      query: ({ userKey, postId, commentId }) => ({\n        url: '/discover/deleteComment',\n        method: 'DELETE',\n        headers: { userKey },\n        body: {\n          postId,\n          commentId,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n      async onQueryStarted(\n        { userKey, postId, commentId, userName, searchTerm, tag },\n        { dispatch, queryFulfilled }\n      ) {\n        const updateFunction = (draft) => {\n          const post = postsSelectors.selectById(draft, postId);\n          // Use updateOne to update the post with the given ID\n          postsAdapter.updateOne(draft, {\n            id: postId,\n            changes: {\n              comments: post.comments.filter(\n                (comment) => comment._id !== commentId\n              ),\n            },\n          });\n        };\n        const patchResult = dispatch(\n          discoverApiSlice.util.updateQueryData(\n            'getDiscoverPosts',\n            {\n              userKey,\n              userName,\n              pageNumber: 1,\n            },\n            updateFunction\n          )\n        );\n\n        if (searchTerm || tag) {\n          var searchPatchResult = dispatch(\n            discoverApiSlice.util.updateQueryData(\n              'getDiscoverPosts',\n              {\n                userKey,\n                userName,\n                pageNumber: 1,\n              },\n              updateFunction\n            )\n          );\n        }\n\n        try {\n          await queryFulfilled;\n        } catch {\n          patchResult.undo();\n          if (searchPatchResult) {\n            searchPatchResult.undo();\n          }\n        }\n      },\n    }),\n  }),\n});\n\nconst postsSelectors = postsAdapter.getSelectors();\n\nexport { postsAdapter, postsSelectors };\n\nexport const {\n  useLazyGetDiscoverPostsQuery,\n  useCreateDiscoverPostMutation,\n  useDeleteDiscoverPostMutation,\n  useLikePostMutation,\n  useAddCommentMutation,\n  useLazyGetPostByIdQuery,\n  useLikeCommentMutation,\n  useDeleteCommentMutation,\n} = discoverApiSlice;\n","import { TouchableOpacity, Platform, UIManager } from 'react-native';\nimport React from 'react';\nimport { Layout, Text, useTheme } from '@ui-kitten/components';\nimport { FontAwesome } from '@expo/vector-icons';\nimport {\n  discoverApiSlice,\n  postsAdapter,\n  postsSelectors,\n  useLikePostMutation,\n} from '../api/discoverApi';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport { usersApiSlice } from '../api/usersApi';\nimport withPreventDoubleClick from '../../components/withPreventDoubleClick';\n\nconst DebounceTouchable = withPreventDoubleClick(TouchableOpacity, 600);\n\nexport default function BottomBar({\n  tags,\n  _id,\n  commentIconShown = true,\n  searchTerm = undefined,\n  searchedTag = undefined,\n}) {\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const theme = useTheme();\n\n  const { data: userData } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n  const [likePost] = useLikePostMutation();\n\n  const post = discoverApiSlice.endpoints.getDiscoverPosts.useQueryState(\n    {\n      pageNumber: 1,\n      userKey,\n      userName: userData.userName,\n      searchTerm,\n      tag: searchedTag,\n    },\n    {\n      selectFromResult: (result) =>\n        postsSelectors.selectById(\n          result.data ?? postsAdapter.getInitialState(),\n          _id\n        ),\n    }\n  );\n\n  const onPressLike = async () => {\n    if (!post) return;\n    try {\n      await likePost({\n        userKey,\n        _id,\n        title: post.title,\n        postAuthor: post.userName,\n        userName: userData.userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.log('Error liking post:', error);\n    }\n  };\n\n  return (\n    <Layout\n      style={{\n        width: '100%',\n        flexDirection: 'row',\n        paddingVertical: 5,\n        paddingHorizontal: 15,\n      }}>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          flexWrap: 'wrap',\n          flex: 6,\n        }}>\n        {/* tags */}\n        {tags.map((tag: string, index: number) => (\n          <Layout\n            key={index}\n            level=\"3\"\n            style={{\n              padding: 5,\n              borderRadius: 5,\n              marginRight: 5,\n              marginTop: 2,\n            }}>\n            <Text style={{ fontSize: 12 }}>{tag}</Text>\n          </Layout>\n        ))}\n      </Layout>\n\n      {/* Icons */}\n      <Layout\n        style={{\n          flexDirection: 'row',\n          flex: 2,\n          justifyContent: 'space-evenly',\n          alignItems: 'center',\n        }}>\n        <FontAwesome\n          style={{ flex: 2, opacity: commentIconShown ? 1 : 0 }}\n          name=\"comments-o\"\n          size={20}\n          color={darkMode ? '#fff' : '#000'}\n        />\n        {/* Likes */}\n        {/* @ts-ignore */}\n        <DebounceTouchable\n          style={{\n            flexDirection: 'row',\n            flex: 3,\n            justifyContent: 'space-evenly',\n            alignItems: 'center',\n          }}\n          onPress={onPressLike}>\n          <Text\n            style={{\n              fontSize: 15,\n              paddingTop: 1,\n            }}>\n            {post?.numLikes}\n          </Text>\n          <FontAwesome\n            style={{ alignSelf: 'center' }}\n            size={17}\n            color={\n              post?.hasLiked\n                ? theme['color-primary-500']\n                : darkMode\n                ? '#fff'\n                : '#000'\n            }\n            name={post?.hasLiked ? 'heart' : 'heart-o'}\n          />\n        </DebounceTouchable>\n      </Layout>\n      {/* @ts-ignore */}\n    </Layout>\n  );\n}\n","import { debounce } from 'lodash';\nimport React from 'react';\n\nexport default function withPreventDoubleClick(WrappedComponent, time = 300) {\n  class PreventDoubleClick extends React.PureComponent {\n    debouncedOnPress = () => {\n      this.props.onPress && this.props.onPress();\n    };\n\n    onPress = debounce(this.debouncedOnPress, time, {\n      leading: true,\n      trailing: false,\n    });\n\n    render() {\n      return <WrappedComponent {...this.props} onPress={this.onPress} />;\n    }\n  }\n\n  PreventDoubleClick.displayName = `withPreventDoubleClick(${\n    WrappedComponent.displayName || WrappedComponent.name\n  })`;\n  return PreventDoubleClick;\n}\n","import { Divider, Layout, ListItem, Text } from '@ui-kitten/components';\nimport { TouchableHighlight } from 'react-native';\nimport { MaterialIcons, FontAwesome5 } from '@expo/vector-icons';\nimport { useTheme } from '@ui-kitten/components';\nimport BottomBar from '../BottomBar';\n\nexport default function TextCard({\n  navigation,\n  tags,\n  title,\n  body,\n  emoji,\n  _id,\n  postAuthor,\n  searchTerm,\n  searchedTag,\n  pinnedIcon,\n  isUrl = false,\n}) {\n  const theme = useTheme();\n\n  const renderTextBody = () => {\n    let text = body;\n\n    if (text.indexOf('\\n') > 10 && text.indexOf('\\n') < 50) {\n      return text.split('\\n')[0] + '...';\n    } else if (text.length > 50) {\n      return text.substring(0, 50) + '...';\n    } else {\n      return text;\n    }\n  };\n\n  const renderUrl = () => {\n    return (\n      <Text style={{ color: 'grey' }}>\n        <FontAwesome5 name=\"link\" />\n        {` `}\n        {body.length > 30 ? body.slice(0, 30) + '...' : body}\n      </Text>\n    );\n  };\n\n\n  return (\n    <TouchableHighlight\n      onPress={() => {\n        navigation.navigate('SinglePost', { _id, searchTerm, searchedTag });\n      }}>\n      <Layout>\n        {pinnedIcon}\n\n        <ListItem\n          disabled\n          accessoryLeft={() => (\n            <Text style={{ fontSize: 35, marginRight: 15 }}>{emoji}</Text>\n          )}\n          style={{\n            paddingLeft: 15,\n            paddingTop: 25,\n            paddingBottom: 0,\n          }}\n          title={() => (\n            <Text style={{ fontSize: 20, paddingBottom: 5 }}>{title}</Text>\n          )}\n          description={() => (\n            <Text style={{ color: 'grey' }}>\n              {isUrl ? renderUrl() : renderTextBody()}\n            </Text>\n          )}\n        />\n\n        <BottomBar\n          tags={tags}\n          _id={_id}\n          searchTerm={searchTerm}\n          searchedTag={searchedTag}\n        />\n      </Layout>\n    </TouchableHighlight>\n  );\n}\n","import React from 'react';\nimport { TouchableWithoutFeedback } from 'react-native';\n\nexport default class DoubleTap extends React.Component {\n  static defaultProps = {\n    delay: 300,\n    onDoubleTap: () => {},\n    children: null,\n  };\n\n  lastTap = null;\n\n  // https://gist.github.com/brunotavares/3c9a373ba5cd1b4ff28b\n  handleDoubleTap = () => {\n    const now = Date.now();\n    if (this.lastTap && (now - this.lastTap) < this.props.delay) {\n      this.props.onDoubleTap();\n    } else {\n      this.lastTap = now;\n    }\n  }\n\n  render() {\n    return (\n      <TouchableWithoutFeedback onPress={this.handleDoubleTap}>\n        {this.props.children}\n      </TouchableWithoutFeedback>\n    );\n  }\n}","import { EMOJI_LIST, IMAGE_BUCKET_URL } from './constants/discover';\n\nexport function getRndInteger(min: number, max: number) {\n  return Math.floor(Math.random() * (max - min)) + min;\n}\n\nexport function getImageUrl(imageId: string) {\n  return `${IMAGE_BUCKET_URL}/${imageId}.jpg`;\n}\n\nexport function nFormatter(num: number, digits: number) {\n  const lookup = [\n    { value: 1, symbol: '' },\n    { value: 1e3, symbol: 'k' },\n    { value: 1e6, symbol: 'M' },\n    { value: 1e9, symbol: 'G' },\n    { value: 1e12, symbol: 'T' },\n    { value: 1e15, symbol: 'P' },\n    { value: 1e18, symbol: 'E' },\n  ];\n  const rx = /\\.0+$|(\\.[0-9]*[1-9])0+$/;\n  var item = lookup\n    .slice()\n    .reverse()\n    .find(function (item) {\n      return num >= item.value;\n    });\n  return item\n    ? (num / item.value).toFixed(digits).replace(rx, '$1') + item.symbol\n    : '0';\n}\n\nexport function versionCompare(v1: string, v2: string, options: any) {\n  var lexicographical = options && options.lexicographical,\n    zeroExtend = options && options.zeroExtend,\n    v1parts = v1.split('.') as any[],\n    v2parts = v2.split('.') as any[];\n\n  function isValidPart(x) {\n    return (lexicographical ? /^\\d+[A-Za-z]*$/ : /^\\d+$/).test(x);\n  }\n\n  if (!v1parts.every(isValidPart) || !v2parts.every(isValidPart)) {\n    return NaN;\n  }\n\n  if (zeroExtend) {\n    while (v1parts.length < v2parts.length) v1parts.push('0');\n    while (v2parts.length < v1parts.length) v2parts.push('0');\n  }\n\n  if (!lexicographical) {\n    v1parts = v1parts.map(Number);\n    v2parts = v2parts.map(Number);\n  }\n\n  for (var i = 0; i < v1parts.length; ++i) {\n    if (v2parts.length == i) {\n      return 1;\n    }\n\n    if (v1parts[i] == v2parts[i]) {\n      continue;\n    } else if (v1parts[i] > v2parts[i]) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n\n  if (v1parts.length != v2parts.length) {\n    return -1;\n  }\n\n  return 0;\n}\n\nexport const stringToEmoji = (str: string) => {\n  if (!str) {\n    return '';\n  }\n  let dec = 0;\n  for (let i = 0; i < str.length; ++i) {\n    dec += str.charCodeAt(i) << i;\n  }\n  const emoji = EMOJI_LIST[dec % EMOJI_LIST.length];\n  return emoji;\n};\n\nexport function validURL(str: string) {\n  var pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i'\n  ); // fragment locator\n  return !!pattern.test(str);\n}","import { Layout, Text } from '@ui-kitten/components';\nimport { TouchableOpacity, Image, Dimensions } from 'react-native';\nimport { selectUserKey } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport DoubleTap from '../../../components/DoubleTap';\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\nimport { getImageUrl } from '../../../functions';\nimport { useLikePostMutation } from '../../api/discoverApi';\nimport BottomBar from '../BottomBar';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function ImageCard({\n  title,\n  _id,\n  navigation,\n  imageId,\n  tags,\n  postAuthor,\n  userName,\n  searchTerm,\n  searchedTag,\n  pinnedIcon,\n}) {\n  const [likePost] = useLikePostMutation();\n  const userKey = useAppSelector(selectUserKey);\n\n  const handlePressLike = async () => {\n    try {\n      await likePost({\n        userKey,\n        _id,\n        title,\n        postAuthor,\n        userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.log('Error liking post:', error);\n    }\n  };\n\n  return (\n    <Layout style={{ flex: 1, alignItems: 'center' }}>\n      {pinnedIcon}\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('SinglePost', { _id, searchTerm, searchedTag });\n        }}\n        activeOpacity={0.9}\n        style={{\n          flex: 1,\n          alignItems: 'center',\n          paddingVertical: 10,\n        }}>\n        <Layout\n          style={{\n            width: windowWidth * 0.9,\n            maxWidth: MAX_WIDTH_WEB,\n            paddingVertical: 10,\n          }}>\n          <Text style={{ fontSize: 20 }}>{title}</Text>\n        </Layout>\n        <DoubleTap delay={200} onDoubleTap={handlePressLike}>\n          <Image\n            source={{\n              uri: getImageUrl(imageId),\n            }}\n            style={{\n              borderRadius: 5,\n              width: windowWidth * 0.9,\n              height: windowWidth * 0.9,\n              maxHeight: MAX_WIDTH_WEB,\n              maxWidth: MAX_WIDTH_WEB,\n              marginBottom: 10,\n              resizeMode: 'contain',\n            }}\n          />\n        </DoubleTap>\n\n        <BottomBar\n          tags={tags}\n          _id={_id}\n          searchTerm={searchTerm}\n          searchedTag={searchedTag}\n        />\n      </TouchableOpacity>\n    </Layout>\n  );\n}\n","import {\n  Button,\n  Icon,\n  Layout,\n  List,\n  ListItem,\n  Spinner,\n  Text,\n  useTheme,\n} from '@ui-kitten/components';\nimport { useEffect, useRef, useState } from 'react';\nimport { FontAwesome5, MaterialIcons } from '@expo/vector-icons';\nimport Modal from 'react-native-modal';\n\nimport { useAppSelector } from '../../app/hooks';\nimport Header from '../../components/Header';\nimport {\n  discoverApiSlice,\n  postsAdapter,\n  postsSelectors,\n  useLazyGetDiscoverPostsQuery,\n} from '../api/discoverApi';\nimport { Keyboard, Platform, TouchableOpacity } from 'react-native';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport TextCard from './Cards/TextCard';\nimport { DiscoverPost } from '../../app/types';\nimport ImageCard from './Cards/ImageCard';\nimport { Divider } from 'react-native-paper';\nimport { usersApiSlice } from '../api/usersApi';\n\nexport default function PostsList({\n  navigation,\n  tag,\n  searchTerm,\n  recentSearches,\n  handleRemoveRecentSearch,\n  handleClickRecentSearch,\n}: {\n  navigation: any;\n  tag?: string;\n  searchTerm?: string;\n  recentSearches?: string[];\n  handleRemoveRecentSearch?: (searchTerm: string) => void;\n  handleClickRecentSearch?: (searchTerm: string) => void;\n}) {\n  const theme = useTheme();\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n\n  const {\n    data: { userName },\n  } = usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n\n  const pageNumber = useRef(0);\n  const [fetchPosts, { isFetching, isLoading, isError }] =\n    useLazyGetDiscoverPostsQuery();\n\n  const { posts, hasMorePages } =\n    discoverApiSlice.endpoints.getDiscoverPosts.useQueryState(\n      { pageNumber: 1, userKey, userName, tag, searchTerm },\n      {\n        selectFromResult: (result) => {\n          return {\n            hasMorePages: result.data?.hasMorePages,\n            posts: postsSelectors.selectAll(\n              result.data ?? postsAdapter.getInitialState()\n            ),\n          };\n        },\n      }\n    );\n\n  const fetchFirstPage = async () => {\n    pageNumber.current = 1;\n    await fetchPosts({\n      userKey,\n      pageNumber: pageNumber.current,\n      userName,\n      tag,\n      searchTerm,\n    });\n  };\n\n  const fetchMorePosts = async () => {\n    if (!hasMorePages || isFetching) return;\n    pageNumber.current++;\n    await fetchPosts({\n      userKey,\n      pageNumber: pageNumber.current,\n      userName,\n      tag,\n      searchTerm,\n    });\n  };\n\n  useEffect(() => {\n    fetchFirstPage();\n  }, [searchTerm, tag]);\n\n  const PinIcon = (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        marginBottom: 0,\n        marginTop: 10,\n        marginLeft: 10,\n      }}>\n      <MaterialIcons\n        name=\"push-pin\"\n        size={20}\n        color={theme['color-primary-500']}\n      />\n      <Text style={{ color: theme['color-primary-500'] }}>pinned</Text>\n    </Layout>\n  );\n\n  // Render Content\n\n  const renderItem = ({ item }: { item: DiscoverPost }) => {\n    const commonProps = {\n      title: item.title,\n      tags: item.tags,\n      _id: item._id,\n      postAuthor: item.userName,\n      navigation,\n      key: item._id,\n      searchTerm,\n      searchedTag: tag,\n      pinnedIcon: item.pinned ? PinIcon : null,\n    };\n\n    // console.log(item.title, item.numLikes);\n\n    switch (item.type) {\n      case 'contentText':\n        return (\n          <TextCard\n            {...commonProps}\n            body={item.contentText}\n            emoji={item.emoji}\n            isUrl={false}\n          />\n        );\n      case 'contentUrl':\n        return (\n          <TextCard\n            {...commonProps}\n            body={item.contentUrl}\n            emoji={item.emoji}\n            isUrl={true}\n          />\n        );\n      case 'contentImage':\n        return (\n          <ImageCard\n            {...commonProps}\n            imageId={item.contentImage}\n            postAuthor={item.userName}\n            userName={userName}\n          />\n        );\n\n      default:\n        console.log('Tried to load an unknown post type:', item?.type);\n        return null;\n    }\n  };\n\n  const renderRecentSearch = ({ item }: { item: string }) => {\n    return (\n      <ListItem\n        onPress={() => {\n          handleClickRecentSearch(item);\n          Keyboard.dismiss();\n        }}\n        style={{\n          paddingVertical: 10,\n          marginVertical: 0,\n          backgroundColor: 'transparent',\n        }}\n        title={item}\n        accessoryLeft={() => (\n          <Icon\n            name=\"clock\"\n            style={{\n              height: 20,\n              color: theme['color-basic-400'],\n              marginHorizontal: 10,\n            }}\n          />\n        )}\n        accessoryRight={(props) => (\n          <Button\n            appearance=\"ghost\"\n            onPress={() => handleRemoveRecentSearch(item)}\n            accessoryLeft={<Icon {...props} name=\"x\" pack=\"feather\" />}\n          />\n        )}\n      />\n    );\n  };\n\n  const FooterSpinner = () => {\n    if (isFetching) {\n      return (\n        <Layout style={{ alignItems: 'center', paddingVertical: 10 }}>\n          <Spinner />\n        </Layout>\n      );\n    }\n  };\n\n  let content = <></>;\n  if (isLoading) {\n    content = (\n      <Layout style={{ marginTop: 20, alignItems: 'center' }}>\n        <Spinner />\n      </Layout>\n    );\n  } else if (isError) {\n    content = (\n      <Layout style={{ alignItems: 'center', marginTop: 20 }}>\n        <FontAwesome5\n          name=\"exclamation\"\n          size={50}\n          color={theme['color-danger-500']}\n        />\n        <Text style={{ textAlign: 'center', fontSize: 20 }}>\n          Error loading posts\n        </Text>\n      </Layout>\n    );\n  } else if (posts.length === 0) {\n    content = (\n      <Layout style={{ alignItems: 'center', marginTop: 20 }}>\n        <FontAwesome5\n          name=\"sad-tear\"\n          size={50}\n          color={theme['color-danger-500']}\n        />\n        <Text style={{ textAlign: 'center', fontSize: 20 }}>\n          No posts found\n        </Text>\n      </Layout>\n    );\n  } else if (searchTerm === '' && tag === '') {\n    if (recentSearches?.length > 0) {\n      content = (\n        <Layout style={{ flex: 1 }}>\n          <List\n            keyboardShouldPersistTaps=\"handled\"\n            ListHeaderComponent={() => (\n              <Text\n                status=\"success\"\n                style={{ fontStyle: 'italic', marginLeft: 20 }}>\n                Recent Searches\n              </Text>\n            )}\n            data={Array.from(recentSearches)}\n            renderItem={renderRecentSearch}\n          />\n        </Layout>\n      );\n    } else {\n      content = (\n        <Layout style={{ flex: 1 }}>\n          <Layout style={{ marginTop: 30, justifyContent: 'center' }}>\n            <Text style={{ textAlign: 'center', fontSize: 20 }}>\n              Search for posts\n            </Text>\n            <Text\n              style={{\n                textAlign: 'center',\n                fontSize: 16,\n                color: theme['color-basic-500'],\n              }}>\n              Search by title, tag, or college\n            </Text>\n          </Layout>\n        </Layout>\n      );\n    }\n  } else {\n    content = (\n      <Layout style={{ flex: 1 }}>\n        <List\n          contentContainerStyle={{ width: '100%' }}\n          onRefresh={fetchFirstPage}\n          refreshing={isLoading}\n          data={posts}\n          keyExtractor={(item) => item._id}\n          renderItem={renderItem}\n          onEndReachedThreshold={0.5}\n          onEndReached={fetchMorePosts}\n          ListFooterComponent={FooterSpinner}\n          showsVerticalScrollIndicator={false}\n          ItemSeparatorComponent={Platform.OS === 'web' ? null : Divider}\n        />\n        {/* <Modal isVisible={true}>\n          <Layout style={{ flex: 1 }}>\n            <Text>I am the modal content!</Text>\n          </Layout>\n        </Modal> */}\n      </Layout>\n    );\n  }\n\n  return <Layout style={{ flex: 1 }}>{content}</Layout>;\n}\n","import { Card, Modal, Text, Button } from '@ui-kitten/components';\nimport { StyleSheet } from 'react-native';\n\nexport default function DisabledFieldModal({setShowModal}) {\n  return (\n    <Modal\n      visible={true}\n      backdropStyle={myStyles.backdrop}\n      style={{ width: '75%' }}\n      onBackdropPress={() => setShowModal(false)}>\n      <Card disabled={true}>\n        <Text style={{ fontSize: 15, paddingTop: 5, paddingBottom: 10 }}>\n          Sorry, we are experiencing technical difficulties and this\n          functionality is currently undergoing maintenance. Please try again\n          later.\n        </Text>\n        <Button\n          onPress={() => {\n            setShowModal(false);\n          }}>\n          Dismiss\n        </Button>\n      </Card>\n    </Modal>\n  );\n}\n\nconst myStyles = StyleSheet.create({\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.65)',\n  },\n});\n","import { View, TouchableOpacity, Alert } from 'react-native';\nimport { Card, Layout, Text, useTheme } from '@ui-kitten/components';\nimport { useState, useContext, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport {\n  faHeart as heartSolid,\n  faHeart,\n} from '@fortawesome/free-solid-svg-icons';\nimport { stringToEmoji } from '../../../functions';\nimport { faHeart as heartOutLine } from '@fortawesome/free-regular-svg-icons';\nimport { useAppSelector } from '../../../app/hooks';\nimport { selectDarkMode, selectUserKey } from '../../../app/appDataSlice';\nimport {\n  useDeleteCommentMutation,\n  useLikeCommentMutation,\n} from '../../api/discoverApi';\n\nexport default function Comment({\n  body,\n  postId,\n  commentId,\n  isOwnComment,\n  userName,\n  numLikes,\n  hasLiked,\n  searchTerm,\n  searchedTag,\n}) {\n  const theme = useTheme();\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const [isExpanded, setIsExpanded] = useState(true);\n  const [likeComment] = useLikeCommentMutation();\n  const [deleteComment, deleteCommentLoading] = useDeleteCommentMutation();\n\n  const handleLikeComment = async () => {\n    try {\n      await likeComment({\n        commentId,\n        postId,\n        userKey,\n        userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't like comment\", error);\n    }\n  };\n\n  const handleDeleteComment = () => {\n    try {\n      deleteComment({\n        commentId,\n        postId,\n        userKey,\n        userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't delete comment\", error);\n    }\n  };\n\n  return (\n      <TouchableOpacity\n        style={{ flexDirection: 'row', marginVertical: 10, marginHorizontal: 15 }}\n        onPress={() => setIsExpanded(!isExpanded)}\n        onLongPress={() => {\n          if (isOwnComment) {\n            Alert.alert('', body, [\n              {\n                text: 'Cancel',\n                style: 'cancel',\n              },\n              {\n                text: 'Delete',\n                onPress: handleDeleteComment,\n              },\n            ]);\n          }\n        }}>\n        <Layout\n          style={{\n            height: '100%',\n            flexDirection: 'row',\n            flex: 11,\n          }}>\n          <Layout\n            style={{\n              borderRadius: 100,\n              width: 35,\n              height: 35,\n              marginRight: 10,\n              backgroundColor: darkMode\n                ? theme['color-basic-600']\n                : theme['color-basic-300'],\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <Text style={{ fontSize: 15 }}>{stringToEmoji(body)}</Text>\n          </Layout>\n\n          <Text style={{ fontWeight: 'normal', flex: 1, paddingTop: 7 }}>\n            {`  `}\n            {isExpanded || body.length <= 50 ? body : `${body.slice(0, 50)}...`}\n          </Text>\n        </Layout>\n\n        <TouchableOpacity\n          style={{\n            flexDirection: 'row',\n            alignSelf: 'center',\n            alignItems: 'center',\n          }}\n          onPress={handleLikeComment}>\n          <Text style={{ padding: 5, fontSize: 15 }}>{numLikes}</Text>\n          <FontAwesomeIcon\n            size={15}\n            color={\n              hasLiked ? theme['color-primary-500'] : theme['color-basic-400']\n            }\n            icon={heartSolid}\n          />\n        </TouchableOpacity>\n      </TouchableOpacity>\n  );\n}\n","import { A } from '@expo/html-elements';\nimport { Input, Layout, Text } from '@ui-kitten/components';\nimport { Image, Dimensions } from 'react-native';\nimport { selectDarkMode } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport DoubleTap from '../../../components/DoubleTap';\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\nimport { getImageUrl } from '../../../functions';\nimport { validURL } from '../../../functions';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function SinglePostBody({ type, body, handleLikePost }) {\n  const darkMode = useAppSelector(selectDarkMode);\n\n  if (type === 'contentText') {\n    return (\n      <Input\n        scrollEnabled={false}\n        multiline\n        disabled\n        value={body}\n        style={{\n          backgroundColor: 'transparent',\n          borderWidth: 0,\n        }}\n        textStyle={{ color: darkMode ? 'white' : 'black' }}\n      />\n    );\n  } else if (type === 'contentUrl') {\n    if (validURL(body)) {\n      return (\n        <A style={{ color: 'blue' }} href={body}>\n          {body}\n        </A>\n      );\n    } else {\n      return <Text>{body}</Text>;\n    }\n  } else {\n    // Image Post\n    return (\n      <DoubleTap onDoubleTap={handleLikePost}>\n        <Layout\n          style={{\n            alignItems: 'center',\n          }}>\n          <Image\n            source={{\n              uri: getImageUrl(body),\n            }}\n            style={{\n              borderRadius: 5,\n              width: windowWidth * 0.9,\n              height: windowWidth * 0.9,\n              maxHeight: MAX_WIDTH_WEB,\n              maxWidth: MAX_WIDTH_WEB,\n              marginBottom: 10,\n              resizeMode: 'stretch',\n            }}\n          />\n        </Layout>\n      </DoubleTap>\n    );\n  }\n}\n","import { Layout, Spinner } from '@ui-kitten/components';\n\nexport default function FullPageSpinner({opacity = 0.4}) {\n  return (\n    <Layout\n      style={{\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        position: 'absolute',\n        backgroundColor: 'black',\n        flex: 1,\n        opacity,\n        zIndex: 100,\n      }}>\n      <Spinner size=\"large\" />\n    </Layout>\n  );\n}\n","import {\n  Layout,\n  Text,\n  Card,\n  Button,\n  List,\n  Input,\n  useTheme,\n  Spinner,\n  Divider,\n} from '@ui-kitten/components';\nimport { useState } from 'react';\nimport {\n  Keyboard,\n  TouchableWithoutFeedback,\n  ScrollView,\n  TouchableOpacity,\n  RefreshControl,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { KeyboardAwareView } from 'react-native-keyboard-aware-view';\n\nimport { selectDarkMode, selectUserKey } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport DisabledFieldModal from '../../../components/DisabledOptionModal';\nimport {\n  discoverApiSlice,\n  postsAdapter,\n  postsSelectors,\n  useAddCommentMutation,\n  useDeleteDiscoverPostMutation,\n  useLazyGetPostByIdQuery,\n  useLikePostMutation,\n} from '../../api/discoverApi';\nimport { usersApiSlice } from '../../api/usersApi';\nimport BottomBar from '../BottomBar';\nimport Comment from './Comment';\nimport SinglePostBody from './SinglePostBody';\nimport { stringToEmoji } from '../../../functions';\nimport FullPageSpinner from '../../../components/FullPageSpinner';\nimport { useAddClassMutation } from '../../api/classPagesApi';\nimport { MAX_WIDTH_WEB } from '../../../constants/discover';\n\nexport default function SinglePost({\n  route: {\n    params: { _id, searchTerm, searchedTag },\n  },\n  navigation,\n}) {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n  const userKey = useAppSelector(selectUserKey);\n  const [showModal, setShowModal] = useState(false);\n  const [comment, setComment] = useState('');\n  const [inputFocused, setInputFocused] = useState(false);\n\n  const [likePost] = useLikePostMutation();\n  const [refreshPost, { isLoading: refreshPostLoading }] =\n    useLazyGetPostByIdQuery();\n  const [addComment, { isLoading: addCommentLoading }] =\n    useAddCommentMutation();\n  const [deletePost, { isLoading: deletePostLoading }] =\n    useDeleteDiscoverPostMutation();\n  const { data: userData } =\n    usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n  const post = discoverApiSlice.endpoints.getDiscoverPosts.useQueryState(\n    { pageNumber: 1, userKey, userName: userData.userName },\n    {\n      selectFromResult: (result) =>\n        postsSelectors.selectById(\n          result.data ?? postsAdapter.getInitialState(),\n          _id\n        ),\n    }\n  );\n\n  const handleRefreshPost = async () => {\n    try {\n      await refreshPost({\n        postId: _id,\n        userKey,\n        userName: userData.userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't refresh post\", error);\n    }\n  };\n\n  const handleDeletePost = async () => {\n    try {\n      await deletePost({\n        _id,\n        userKey,\n        userName: userData.userName,\n        title: post.title,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.warn(\"Couldn't delete post\", error);\n    }\n  };\n\n  const handleSubmitComment = async () => {\n    try {\n      await addComment({\n        _id,\n        userKey,\n        userName: userData.userName,\n        text: comment,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n      setComment('');\n      setInputFocused(false);\n      Keyboard.dismiss();\n    } catch (e) {\n      console.warn('Error submitting comment', e);\n    }\n  };\n\n  const handlePressLike = async () => {\n    try {\n      await likePost({\n        userKey,\n        _id,\n        title: post.title,\n        postAuthor: post.userName,\n        userName: userData.userName,\n        searchTerm,\n        tag: searchedTag,\n      }).unwrap();\n    } catch (error) {\n      console.log('Error liking post:', error);\n    }\n  };\n\n  const TopContent = () => {\n    return (\n      <Layout style={{ maxWidth: MAX_WIDTH_WEB, alignSelf: 'center' }}>\n        <Card\n          disabled\n          style={{ margin: 8, borderWidth: 0 }}\n          header={\n            <Layout>\n              <Text style={{ fontWeight: 'bold', fontSize: 20 }}>\n                {post.title}\n              </Text>\n            </Layout>\n          }\n          footer={\n            <Layout style={{ margin: 0, padding: 0 }}>\n              <BottomBar\n                commentIconShown={false}\n                tags={post.tags}\n                _id={post._id}\n              />\n            </Layout>\n          }>\n          <SinglePostBody\n            handleLikePost={handlePressLike}\n            type={post.type}\n            body={post.contentText || post.contentUrl || post.contentImage}\n          />\n        </Card>\n        {post.userName === userData.userName ? (\n          <Layout style={{ flexDirection: 'row', width: '100%' }}>\n            <Button\n              status=\"danger\"\n              style={{ margin: 8, flex: 1 }}\n              onPress={handleDeletePost}>\n              Delete Post\n            </Button>\n            {/* <Button style={{ margin: 8, flex: 1 }} disabled>\n              Edit Post\n            </Button> */}\n          </Layout>\n        ) : null}\n\n        <Card disabled style={{ borderWidth: 0 }}>\n          <Text\n            style={{\n              fontWeight: '600',\n            }}>{`Comments (${post.comments.length})`}</Text>\n        </Card>\n      </Layout>\n    );\n  };\n\n  if (!post) {\n    navigation.goBack();\n    return null;\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      {showModal && <DisabledFieldModal setShowModal={setShowModal} />}\n      {/* Render Comments */}\n      <List\n        onRefresh={handleRefreshPost}\n        refreshing={refreshPostLoading}\n        ListHeaderComponent={TopContent}\n        contentContainerStyle={{\n          marginHorizontal: 10,\n          maxWidth: 700,\n          alignSelf: \"center\",\n        }}\n        style={{ backgroundColor: 'transparent' }}\n        data={post.comments}\n        ItemSeparatorComponent={Divider}\n        renderItem={({ item }) => (\n          <Comment\n            body={item.text}\n            postId={post._id}\n            commentId={item._id}\n            numLikes={item.numLikes}\n            hasLiked={item.hasLiked}\n            userName={userData.userName}\n            isOwnComment={item.userName === userData.userName}\n            searchTerm={searchTerm}\n            searchedTag={searchedTag}\n          />\n        )}\n        keyExtractor={(comment) => {\n          return comment._id;\n        }}\n      />\n      <Layout\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          height: 55,\n          bottom: 0,\n          width: '100%',\n          paddingVertical: 10,\n          paddingRight: 10,\n          borderColor: darkMode\n            ? theme['color-basic-500']\n            : theme['color-basic-300'],\n          borderTopWidth: 1,\n        }}>\n        <Layout\n          style={{\n            flex: 1,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}>\n          <Layout\n            style={{\n              borderRadius: 100,\n              width: 35,\n              height: 35,\n              backgroundColor: darkMode\n                ? theme['color-basic-600']\n                : theme['color-basic-300'],\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}>\n            <Text style={{ fontSize: 15 }}>\n              {stringToEmoji(userData.userName)}\n            </Text>\n          </Layout>\n        </Layout>\n\n        <Input\n          accessoryRight={\n            inputFocused ? (\n              <TouchableOpacity onPress={handleSubmitComment}>\n                <FontAwesome5\n                  name=\"arrow-alt-circle-right\"\n                  size={22}\n                  color={theme['color-primary-500']}\n                />\n              </TouchableOpacity>\n            ) : null\n          }\n          style={{ flex: 7 }}\n          placeholder=\"Add a comment...\"\n          onFocus={() => setInputFocused(true)}\n          onBlur={() => setInputFocused(false)}\n          value={comment}\n          onChangeText={(text) => setComment(text)}\n          onSubmitEditing={handleSubmitComment}\n        />\n      </Layout>\n      {(deletePostLoading || addCommentLoading) && <FullPageSpinner />}\n    </Layout>\n  );\n}\n","import {\n  Alert,\n  Image,\n  TouchableOpacity,\n  Dimensions,\n  Platform,\n} from 'react-native';\nimport React from 'react';\nimport { Layout, Text, Input } from '@ui-kitten/components';\nimport * as ImagePicker from 'expo-image-picker';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faCamera, faImage } from '@fortawesome/free-solid-svg-icons';\nimport { Feather } from '@expo/vector-icons';\nimport Toast from 'react-native-root-toast';\n\nconst windowWidth = Dimensions.get('window').width;\n\nexport default function CreateImage({\n  setIsEmojiShown,\n  discoverPostInputs,\n  setDiscoverPostInputs,\n  TagInput,\n  PinnedCheckBox,\n}) {\n  const [imagePickerStatus, requestImagePickerPermission] =\n    ImagePicker.useMediaLibraryPermissions();\n  const [cameraStatus, requestCameraPermission] =\n    ImagePicker.useCameraPermissions();\n\n  const onPressCamera = async () => {\n    const response = await requestCameraPermission();\n    if (response.granted || cameraStatus.granted) {\n      let result = await ImagePicker.launchCameraAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      });\n      if (!result.canceled) {\n        setDiscoverPostInputs({\n          ...discoverPostInputs,\n          contentImage: result.assets[0],\n        });\n      }\n    } else {\n      Alert.alert(\n        \"Permission to access camera is required. Please enable it in your phone's settings.\"\n      );\n    }\n  };\n\n  const pickImage = async () => {\n    const response = await requestImagePickerPermission();\n    if (response.granted || imagePickerStatus.granted) {\n      let result = await ImagePicker.launchImageLibraryAsync({\n        allowsEditing: true,\n      });\n      if (!result.canceled) {\n        setDiscoverPostInputs({\n          ...discoverPostInputs,\n          contentImage: result.assets[0],\n        });\n\n        if (Platform.OS === 'android') {\n          let toast = Toast.show(\n            \"Don't worry if the image seems blurry on the sides.\",\n            {\n              duration: Toast.durations.LONG,\n              opacity: 1,\n              position: -100,\n              backgroundColor: 'grey',\n              shadow: false,\n            }\n          );\n\n          setTimeout(function hideToast() {\n            Toast.hide(toast);\n          }, 3000);\n        }\n      }\n    } else {\n      Alert.alert(\n        \"Permission to access camera roll is required. Please enable it in your phone's settings.\"\n      );\n    }\n  };\n\n  let imagePicker = <></>;\n\n  if (discoverPostInputs?.contentImage) {\n    // Image Preview\n    imagePicker = (\n      <Layout\n        level=\"2\"\n        style={{\n          height: 300,\n          marginVertical: 10,\n          borderRadius: 10,\n          shadowColor: '#000',\n          shadowOffset: {\n            width: 0,\n            height: 5,\n          },\n          shadowOpacity: 0.34,\n          shadowRadius: 6.27,\n\n          elevation: 10,\n        }}>\n        <TouchableOpacity\n          onPress={() => {\n            setDiscoverPostInputs(null);\n          }}\n          style={{ position: 'absolute', right: 10, top: 5, zIndex: 1 }}>\n          <Feather name=\"x-circle\" size={30} color={'grey'} />\n        </TouchableOpacity>\n\n        <Image\n          source={{\n            uri: discoverPostInputs.contentImage.uri,\n          }}\n          style={{\n            borderRadius: 5,\n            width: '100%',\n            height: '100%',\n            resizeMode: 'contain',\n          }}\n        />\n      </Layout>\n    );\n  } else {\n    // Image Picker\n    imagePicker = (\n      <Layout style={{ flexDirection: 'row' }}>\n        <TouchableOpacity\n          onPress={() => {\n            setIsEmojiShown(false);\n            pickImage();\n          }}\n          style={{\n            height: 80,\n            justifyContent: 'center',\n            alignItems: 'center',\n            flex: 1,\n            paddingVertical: 8,\n            flexDirection: 'row',\n          }}>\n          <Layout\n            level=\"2\"\n            style={{\n              flex: 1,\n              flexDirection: 'row',\n              height: '100%',\n              marginHorizontal: 10,\n              paddingVertical: 15,\n              paddingHorizontal: 5,\n              borderRadius: 8,\n              alignItems: 'center',\n              justifyContent: 'space-around',\n            }}>\n            <FontAwesomeIcon icon={faImage} size={25} color={'grey'} />\n            <Text>Select Image</Text>\n          </Layout>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={onPressCamera}\n          style={{\n            height: 80,\n            justifyContent: 'center',\n            alignItems: 'center',\n            flex: 1,\n            paddingVertical: 8,\n            flexDirection: 'row',\n          }}>\n          <Layout\n            level=\"2\"\n            style={{\n              flex: 1,\n              flexDirection: 'row',\n              height: '100%',\n              marginHorizontal: 10,\n              paddingVertical: 15,\n              paddingHorizontal: 5,\n              borderRadius: 8,\n              alignItems: 'center',\n              justifyContent: 'space-around',\n            }}>\n            <FontAwesomeIcon icon={faCamera} size={25} color={'grey'} />\n            <Text>Use Camera</Text>\n          </Layout>\n        </TouchableOpacity>\n      </Layout>\n    );\n  }\n\n  return (\n    <>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-evenly',\n          alignItems: 'center',\n          marginTop: 15,\n        }}>\n        <Input\n          status=\"primary\"\n          placeholder=\"Post Title\"\n          onFocus={() => {\n            setIsEmojiShown(false);\n          }}\n          value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\n          style={{ flex: 5 }}\n          onChangeText={(newText) => {\n            setDiscoverPostInputs({\n              ...discoverPostInputs,\n              title: newText,\n            });\n          }}\n        />\n      </Layout>\n      \n      {TagInput()}\n      <PinnedCheckBox />\n      {imagePicker}\n    </>\n  );\n}\n","import {\n  StyleSheet,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  Keyboard,\n  ScrollView,\n  KeyboardAvoidingView,\n  Platform,\n} from 'react-native';\nimport React, { useState } from 'react';\nimport {\n  Text,\n  Input,\n  Select,\n  SelectItem,\n  IndexPath,\n  Layout,\n  Button,\n  Spinner,\n  useTheme,\n  CheckBox,\n} from '@ui-kitten/components';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport CreateImage from './CreateImagePost';\nimport {\n  tagIndices,\n  adminTagIndices,\n  postOptions,\n} from '../../../constants/discover';\nimport { useCreateDiscoverPostMutation } from '../../api/discoverApi';\nimport { useAppSelector } from '../../../app/hooks';\nimport { usersApiSlice } from '../../api/usersApi';\nimport Toast from 'react-native-root-toast';\nimport { selectDarkMode } from '../../../app/appDataSlice';\n\nexport default function CreatePost() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n  const userKey = useAppSelector((state) => state.appData.secure.userKey);\n  const {\n    data: { userName, permissionLevel },\n  } = usersApiSlice.endpoints.getUserInfo.useQueryState(userKey);\n  const [discoverPostInputs, setDiscoverPostInputs] = useState(null);\n  const [selectedTagIndex, setSelectedTagIndex] = useState<IndexPath[]>([]);\n  const [selectedPostTypeIndex, setSelectedPostTypeIndex] = useState(\n    new IndexPath(0)\n  );\n  const [error, setError] = useState(null);\n  const [isEmojiShown, setIsEmojiShown] = useState(false);\n  const [isPostPinned, setIsPostPinned] = useState(false);\n\n  const [createDiscoverPost, { isLoading }] = useCreateDiscoverPostMutation();\n\n  const tagArray = permissionLevel === 'admin' ? adminTagIndices : tagIndices;\n\n  const submitImage = async (tags: string[]) => {\n    var formdata = new FormData();\n    if (isPostPinned) {\n      formdata.append('pinned', 'true');\n    }\n    formdata.append('title', discoverPostInputs.title);\n    formdata.append('type', 'contentImage');\n    formdata.append('picture', {\n      uri: discoverPostInputs.contentImage.uri,\n      name: 'discoverImage',\n      type: 'image/jpg',\n    } as any);\n    tags.forEach((tag) => {\n      formdata.append('tags', tag);\n    });\n\n    try {\n      await createDiscoverPost({\n        type: 'contentImage',\n        userKey,\n        userName,\n        imagePostBody: formdata,\n      }).unwrap();\n\n      let toast = Toast.show('Posted Successfully!', {\n        duration: Toast.durations.LONG,\n        opacity: 1,\n        position: -100,\n        backgroundColor: theme['color-success-500'],\n        shadow: false,\n      });\n\n      setTimeout(function hideToast() {\n        Toast.hide(toast);\n      }, 7000);\n\n      setDiscoverPostInputs(null);\n      setSelectedTagIndex([]);\n      setError(null);\n    } catch (e) {\n      let toast = Toast.show('Post failed to send.', {\n        duration: Toast.durations.LONG,\n        opacity: 1,\n        position: -100,\n        backgroundColor: theme['color-warning-500'],\n        shadow: false,\n      });\n\n      setTimeout(function hideToast() {\n        Toast.hide(toast);\n      }, 4000);\n    }\n  };\n\n  const onSubmit = async () => {\n    //\n    // Validate Input\n    //\n    if (\n      (selectedPostTypeIndex.row === 1 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.contentText)) ||\n      (selectedPostTypeIndex.row === 2 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.contentUrl)) ||\n      (selectedPostTypeIndex.row === 0 &&\n        (!discoverPostInputs ||\n          !discoverPostInputs.title ||\n          !discoverPostInputs.contentImage))\n    ) {\n      console.log('onsubmit error', discoverPostInputs);\n      setError('Please Fill in All Fields');\n      return;\n    }\n    // else if (\n    //   (selectedPostTypeIndex.row === 0 || selectedPostTypeIndex.row == 1) &&\n    //   !discoverPostInputs.emoji\n    // )\n    // {\n    //   setError('Please select an emoji');\n    //   return;\n    // }\n\n    //\n    // Submit Post\n    //\n\n    const tags = selectedTagIndex.map((index) => tagArray[index.row]);\n\n    // Special Case for Image Post\n    if (selectedPostTypeIndex.row === 0) {\n      submitImage(tags);\n      return;\n    }\n\n    let type = '';\n    if (selectedPostTypeIndex.row === 1) {\n      type = 'contentText';\n    } else if (selectedPostTypeIndex.row === 2) {\n      type = 'contentUrl';\n    }\n    try {\n      await createDiscoverPost({\n        type,\n        userKey,\n        userName,\n        tags,\n        content: discoverPostInputs[type],\n        title: discoverPostInputs.title,\n        emoji: discoverPostInputs.emoji,\n        pinned: isPostPinned,\n      }).unwrap();\n\n      let toast = Toast.show('Posted Successfully!', {\n        duration: Toast.durations.LONG,\n        opacity: 1,\n        position: -100,\n        backgroundColor: theme['color-success-500'],\n        shadow: false,\n      });\n\n      setTimeout(function hideToast() {\n        Toast.hide(toast);\n      }, 7000);\n\n      setDiscoverPostInputs(null);\n      setSelectedTagIndex([]);\n      setError(null);\n    } catch (e) {\n      let toast = Toast.show('Post failed to send.', {\n        duration: Toast.durations.LONG,\n        opacity: 1,\n        position: -100,\n        backgroundColor: theme['color-warning-500'],\n        shadow: false,\n      });\n\n      setTimeout(function hideToast() {\n        Toast.hide(toast);\n      }, 4000);\n    }\n  };\n\n  const PinnedCheckBox = () => {\n    return (\n      <CheckBox\n        style={{ marginVertical: 20 }}\n        checked={isPostPinned}\n        onChange={(nextChecked) => setIsPostPinned(nextChecked)}>\n        Pinned\n      </CheckBox>\n    );\n  };\n\n  const TagInput = () => {\n    const groupedData = selectedTagIndex.map((index) => {\n      return tagArray[index.row];\n    });\n    return (\n      <Layout>\n        <Select\n          multiSelect\n          value={groupedData.join(', ')}\n          placeholder=\"Select Tags\"\n          selectedIndex={selectedTagIndex}\n          onSelect={(index: IndexPath[]) => {\n            setSelectedTagIndex(index);\n          }}\n          style={styles.input}>\n          {tagArray.map((title, i) => (\n            <SelectItem title={title} key={i} />\n          ))}\n        </Select>\n        <Text\n          style={{\n            alignSelf: 'flex-end',\n            marginRight: 5,\n            color: 'grey',\n            fontSize: 11,\n          }}>\n          Optional\n        </Text>\n      </Layout>\n    );\n  };\n\n  const EmojiToggle = () => {\n    return (\n      <TouchableOpacity\n        onPress={() => {\n          setIsEmojiShown(!isEmojiShown);\n          Keyboard.dismiss();\n        }}\n        style={{\n          flex: 1,\n        }}>\n        <Layout\n          level=\"3\"\n          style={{\n            justifyContent: 'center',\n            alignItems: 'center',\n\n            borderRadius: 6,\n            paddingVertical: 8,\n            marginRight: 5,\n          }}>\n          <Text style={{ fontSize: 20 }}>\n            {discoverPostInputs?.emoji || `😁`}\n          </Text>\n        </Layout>\n      </TouchableOpacity>\n    );\n  };\n\n  const renderPostOptions = () => {\n    // Text\n    if (selectedPostTypeIndex.row === 1) {\n      return (\n        <>\n          <Layout\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'center',\n              marginTop: 15,\n            }}>\n            {/* <EmojiToggle /> */}\n\n            <Input\n              status=\"primary\"\n              placeholder=\"Post Title\"\n              onFocus={() => {\n                setIsEmojiShown(false);\n              }}\n              value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\n              style={{ ...styles.input, flex: 5 }}\n              onChangeText={(newText) => {\n                setDiscoverPostInputs({\n                  ...discoverPostInputs,\n                  title: newText,\n                });\n              }}\n            />\n          </Layout>\n          {TagInput()}\n          <Input\n            multiline\n            placeholder=\"Post Body\"\n            onFocus={() => {\n              setIsEmojiShown(false);\n            }}\n            textStyle={{ minHeight: 100 }}\n            style={{ ...styles.input, alignSelf: 'center', width: \"100%\" }}\n            value={\n              discoverPostInputs?.contentText\n                ? discoverPostInputs.contentText\n                : ''\n            }\n            onChangeText={(newText) => {\n              setDiscoverPostInputs({\n                ...discoverPostInputs,\n                contentText: newText,\n              });\n            }}\n          />\n          {permissionLevel === 'admin' && <PinnedCheckBox />}\n        </>\n      );\n    } else if (selectedPostTypeIndex.row === 2) {\n      // LINK\n      return (\n        <>\n          <Layout\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-evenly',\n              alignItems: 'center',\n              marginTop: 15,\n            }}>\n            {/* <EmojiToggle /> */}\n            <Input\n              status=\"primary\"\n              placeholder=\"Post Title\"\n              onFocus={() => {\n                setIsEmojiShown(false);\n              }}\n              value={discoverPostInputs?.title ? discoverPostInputs.title : ''}\n              style={{ ...styles.input, flex: 5 }}\n              onChangeText={(newText) => {\n                setDiscoverPostInputs({\n                  ...discoverPostInputs,\n                  title: newText,\n                });\n              }}\n            />\n          </Layout>\n\n          <Input\n            placeholder=\"Post Link\"\n            style={styles.input}\n            onFocus={() => {\n              setIsEmojiShown(false);\n            }}\n            value={\n              discoverPostInputs?.contentUrl\n                ? discoverPostInputs.contentUrl\n                : ''\n            }\n            onChangeText={(newText) => {\n              setDiscoverPostInputs({\n                ...discoverPostInputs,\n                contentUrl: newText,\n              });\n            }}\n          />\n          {/* {PostTypeInput} */}\n          {TagInput()}\n          {permissionLevel === 'admin' && <PinnedCheckBox />}\n        </>\n      );\n    } else if (selectedPostTypeIndex.row === 0) {\n      // IMAGE\n      return (\n        <CreateImage\n          setIsEmojiShown={setIsEmojiShown}\n          discoverPostInputs={discoverPostInputs}\n          setDiscoverPostInputs={setDiscoverPostInputs}\n          TagInput={TagInput}\n          PinnedCheckBox={\n            permissionLevel === 'admin' ? PinnedCheckBox : () => <></>\n          }\n        />\n      );\n    }\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        style={{ flex: 1 }}>\n        <ScrollView style={{ flex: 1 }}>\n          <TouchableWithoutFeedback\n            style={{ flex: 1 }}\n            onPress={() => {\n              Keyboard.dismiss();\n            }}>\n            <Layout\n              style={{ flex: 1, marginBottom: 100, marginHorizontal: 16 }}>\n              <Select\n                label=\"Select Post Type\"\n                value={postOptions[selectedPostTypeIndex.row]}\n                selectedIndex={selectedPostTypeIndex}\n                onSelect={(index: IndexPath) => {\n                  setSelectedPostTypeIndex(index);\n                  setSelectedTagIndex([]);\n                  setDiscoverPostInputs(null);\n                  setError(null);\n                  setIsEmojiShown(false);\n                }}\n                style={styles.input}>\n                <SelectItem\n                  title=\"Image Post\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"image\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n                <SelectItem\n                  title=\"Text Post\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"file-alt\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n                <SelectItem\n                  title=\"Link\"\n                  accessoryLeft={\n                    <FontAwesome5\n                      name=\"link\"\n                      size={17}\n                      color={darkMode ? '#fff' : '#000'}\n                    />\n                  }\n                />\n              </Select>\n              {error && (\n                <Layout>\n                  <Text\n                    style={{\n                      textAlign: 'center',\n                      color: 'red',\n                      fontStyle: 'italic',\n                    }}>\n                    {error}\n                  </Text>\n                </Layout>\n              )}\n\n              {renderPostOptions()}\n\n              {!isEmojiShown && (\n                <Button\n                  style={styles.input}\n                  onPress={onSubmit}\n                  disabled={isLoading}>\n                  Submit\n                </Button>\n              )}\n\n              <Layout\n                style={{\n                  zIndex: -1,\n                  position: 'absolute',\n                  width: '100%',\n                  height: '100%',\n                  alignItems: 'center',\n                  bottom: -600,\n                }}>\n                {/* <Image\n                  source={require('../../../assets/panda.png')}\n                  style={{ height: 175, width: 120 }}\n                /> */}\n              </Layout>\n            </Layout>\n          </TouchableWithoutFeedback>\n        </ScrollView>\n      </KeyboardAvoidingView>\n      {isLoading && (\n        <Layout\n          style={{\n            justifyContent: 'center',\n            alignItems: 'center',\n            width: '100%',\n            height: '100%',\n            position: 'absolute',\n            backgroundColor: 'black',\n            flex: 1,\n            opacity: 0.3,\n          }}>\n          <Spinner size=\"medium\" />\n        </Layout>\n      )}\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    marginVertical: 5,\n  },\n});\n","import { Layout, Input, Button } from '@ui-kitten/components';\nimport { Icon } from '@ui-kitten/components';\nimport { useState } from 'react';\nimport {\n  Keyboard,\n  TouchableOpacity,\n  LayoutAnimation,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport { useTheme } from '@ui-kitten/components';\n\nimport { useAppSelector } from '../app/hooks';\nimport { selectDarkMode } from '../app/appDataSlice';\n\ntype SearchBarProps = {\n  onChangeText: (text: string) => void;\n  searchTerm: string;\n  placeholder?: string;\n  accessoryLeft?: any;\n  inputProps?: any;\n  inputStyle?: any;\n  inputRef?: any;\n  cancelButtonAction?: () => void;\n  onSubmitEditing?: () => void;\n  alwaysShowCancelButton?: boolean;\n  cancelButtonStatus?:\n    | 'basic'\n    | 'primary'\n    | 'success'\n    | 'info'\n    | 'warning'\n    | 'danger';\n};\n\nexport default function SearchBar({\n  onChangeText,\n  searchTerm,\n  accessoryLeft,\n  placeholder,\n  inputRef,\n  inputStyle,\n  inputProps,\n  cancelButtonAction = () => {},\n  onSubmitEditing = () => {},\n  cancelButtonStatus = 'warning',\n  alwaysShowCancelButton = false,\n}: SearchBarProps) {\n  const [selected, setSelected] = useState(false);\n\n  const darkMode = useAppSelector(selectDarkMode);\n  const theme = useTheme();\n\n  const select = () => {\n    setSelected(true);\n    if (!alwaysShowCancelButton) {\n      LayoutAnimation.configureNext(\n        LayoutAnimation.create(100, 'linear', 'scaleX')\n      );\n    }\n  };\n\n  const deselect = () => {\n    setSelected(false);\n    if (!alwaysShowCancelButton) {\n      LayoutAnimation.configureNext(\n        LayoutAnimation.create(100, 'linear', 'opacity')\n      );\n    }\n  };\n\n  return (\n    <Layout\n      style={{\n        backgroundColor: 'transparent',\n        flexDirection: 'row',\n      }}>\n      {accessoryLeft}\n\n      <Input\n        style={{\n          ...inputStyle,\n          borderRadius: 20,\n          flex: 1,\n          borderWidth: 1,\n          borderColor: darkMode\n            ? theme['color-basic-500']\n            : theme['color-basic-100'],\n        }}\n        placeholderTextColor={theme['color-basic-500']}\n        accessoryRight={\n          selected && searchTerm.length > 0\n            ? (props) => (\n                <TouchableOpacity onPress={() => onChangeText('')}>\n                  <Icon {...props} name=\"times\" pack=\"fontAwesome\" />\n                </TouchableOpacity>\n              )\n            : null\n        }\n        onFocus={select}\n        onBlur={deselect}\n        placeholder={placeholder}\n        value={searchTerm}\n        onChangeText={(text) => {\n          onChangeText(text);\n        }}\n        onSubmitEditing={onSubmitEditing}\n        ref={inputRef}\n        autoCorrect={false}\n        {...inputProps}\n      />\n\n      {alwaysShowCancelButton || selected ? (\n        <Button\n          size=\"small\"\n          status={cancelButtonStatus}\n          appearance=\"ghost\"\n          onPress={() => {\n            Keyboard.dismiss();\n            cancelButtonAction();\n          }}>\n          Cancel\n        </Button>\n      ) : null}\n    </Layout>\n  );\n}\n","import { Input, Layout, useTheme } from '@ui-kitten/components';\nimport { useEffect, useRef, useState } from 'react';\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport Header from '../../components/Header';\nimport SearchBar from '../../components/SearchBar';\nimport {\n  selectSearchTerm,\n  selectSubmittedSearchTerm,\n  searchTermChanged,\n  searchTermSubmitted,\n  selectTag,\n  selectRecentSearches,\n  recentSearchTermRemoved,\n  recentSearchTermSelected,\n} from './discoverSlice';\nimport PostsList from './PostsList';\n\nexport default function SearchPage({ navigation }) {\n  const dispatch = useAppDispatch();\n\n  const searchTerm = useAppSelector(selectSearchTerm);\n  const tag = useAppSelector(selectTag);\n  const submittedSearchTerm = useAppSelector(selectSubmittedSearchTerm);\n  const recentSearches = useAppSelector(selectRecentSearches);\n\n  const inputRef = useRef<Input>(null);\n\n  const darkMode = useAppSelector(selectDarkMode);\n  const theme = useTheme();\n\n  useEffect(() => {\n    inputRef.current?.focus();\n  }, []);\n\n  const onSubmitEditing = async () => {\n    dispatch(searchTermSubmitted(searchTerm));\n  };\n\n  const onChangeText = (text: string) => {\n    dispatch(searchTermChanged(text));\n  };\n\n  const handleRemoveRecentSearch = (searchTerm: string) => {\n    dispatch(recentSearchTermRemoved(searchTerm));\n  };\n\n  const handleClickRecentSearch = (searchTerm: string) => {\n    dispatch(recentSearchTermSelected(searchTerm));\n  };\n\n  let searchBarBackgroundColor = '';\n  if (darkMode) {\n    searchBarBackgroundColor = theme['color-basic-800'];\n  } else {\n    searchBarBackgroundColor = theme['color-basic-100'];\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <Layout level=\"2\" style={{ paddingBottom: 15 }}>\n        <Header\n          level=\"2\"\n          center={\n            <Layout\n              level=\"2\"\n              style={{ flex: 1, backgroundColor: 'transparent' }}>\n              <SearchBar\n                inputRef={inputRef}\n                inputStyle={{\n                  opacity: 1,\n                  backgroundColor: searchBarBackgroundColor,\n                }}\n                searchTerm={searchTerm}\n                onChangeText={onChangeText}\n                onSubmitEditing={onSubmitEditing}\n                placeholder=\"Search Posts...\"\n                cancelButtonAction={() => navigation.goBack()}\n                cancelButtonStatus=\"basic\"\n                alwaysShowCancelButton\n              />\n            </Layout>\n          }\n          title=\"\"\n        />\n      </Layout>\n      <PostsList\n        navigation={navigation}\n        tag={tag}\n        searchTerm={submittedSearchTerm}\n        recentSearches={recentSearches}\n        handleRemoveRecentSearch={handleRemoveRecentSearch}\n        handleClickRecentSearch={handleClickRecentSearch}\n      />\n    </Layout>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport {\n  Platform,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport Header from '../../components/Header';\nimport PostsList from './PostsList';\nimport SinglePost from './SinglePost/SinglePostPage';\nimport { Divider, Layout, Text, useTheme } from '@ui-kitten/components';\nimport CreatePost from './CreatePost/CreatePost';\nimport SearchBar from '../../components/SearchBar';\nimport { useState } from 'react';\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport SearchPage from './SearchPage';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Discover({ navigation }) {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const accessoryRight = (\n    <TouchableOpacity onPress={() => navigation.navigate('CreatePost')}>\n      <FontAwesome5 name=\"plus\" size={23} color={theme['color-primary-500']} />\n    </TouchableOpacity>\n  );\n\n  let searchBarBackgroundColor = '';\n  if (darkMode) {\n    searchBarBackgroundColor = theme['color-basic-800'];\n  } else {\n    searchBarBackgroundColor = theme['color-basic-100'];\n  }\n\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"PostsList\"\n        component={PostsList}\n        options={{\n          header: () => (\n            <Layout level=\"2\" style={{ paddingBottom: 15 }}>\n              <Header\n                level=\"2\"\n                title=\"Discover\"\n                accessoryRight={accessoryRight}\n                center={\n                  <Layout level=\"2\" style={{ flex: 1, marginHorizontal: 10 }}>\n                    {Platform.OS === 'ios' ? (\n                      <SearchBar\n                        inputStyle={{\n                          opacity: 0.8,\n                          backgroundColor: searchBarBackgroundColor,\n                        }}\n                        searchTerm={searchTerm}\n                        onChangeText={setSearchTerm}\n                        placeholder=\"Search Posts...\"\n                        inputProps={{\n                          disabled: true,\n                          onPressIn: () => {\n                            navigation.navigate('SearchPage');\n                          },\n\n                          onBlur: () => {\n                            navigation.goBack();\n                          },\n                        }}\n                      />\n                    ) : (\n                      <Layout\n                        style={{\n                          minHeight: 35,\n                          paddingLeft: 15,\n                          borderRadius: 20,\n                          flex: 1,\n                          borderWidth: 1,\n                          borderColor: darkMode\n                            ? theme['color-basic-500']\n                            : theme['color-basic-100'],\n                          justifyContent: 'center',\n                        }}>\n                        <TouchableWithoutFeedback\n                          onPress={() => {\n                            navigation.navigate('SearchPage');\n                          }}>\n                          <Text\n                            style={{\n                              color: theme['color-basic-400'],\n                              fontSize: 14,\n                            }}>\n                            Search Posts...\n                          </Text>\n                        </TouchableWithoutFeedback>\n                      </Layout>\n                    )}\n                  </Layout>\n                }\n              />\n            </Layout>\n          ),\n        }}\n      />\n      <Stack.Screen\n        name=\"CreatePost\"\n        component={CreatePost}\n        options={{ headerTitle: 'Create a Post' }}\n      />\n      <Stack.Screen\n        name=\"SinglePost\"\n        component={SinglePost}\n        options={{\n          headerTitle: '',\n        }}\n      />\n      <Stack.Screen\n        name=\"SearchPage\"\n        component={SearchPage}\n        options={{ headerShown: false, animation: 'fade' }}\n      />\n    </Stack.Navigator>\n  );\n}\n","import { View, Text } from 'react-native'\nimport React from 'react'\n\nexport default function CreateCustomEvent() {\n  return (\n    <View>\n      <Text>CreateCustomEvent</Text>\n    </View>\n  )\n}","import {useAppSelector} from \"../../app/hooks\";\nimport {selectClassesList} from \"../classPages/classPagesSlice\";\nimport {Class} from \"../../app/types\";\n\nexport default class CalendarFunctions{\n    convertTo12HourTime(time) {\n        if (time.length !== 5) {\n            time = '0' + time;\n        }\n        let hours = time.slice(0, 2);\n        let minutes = time.slice(3, 5);\n        let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n        hours = hours % 12;\n        if (hours === 0) {\n            hours = 12;\n            ampm = 'pm';\n        }\n        return hours + ':' + minutes + ampm;\n    }\n\n    getColor(string: String) {\n        let final = 0\n        for (let charIndex = 0; charIndex < string.length; charIndex++) {\n            final += string.charCodeAt(charIndex)\n        }\n        final -= Number(final.toString()[0]) * (10 ** (final.toString().length - 1))\n        final = final / (10 ** final.toString().length)\n        return \"hsl(\" + 360 * final + ',' +\n            (25 + 70 * final) + '%,' +\n            (50 + 10 * final) + '%)'\n    }\n\n    stringToColour(str: String) {\n        return this.getColor(str)\n    };\n\n    getMinutesDiff(startTime, endTime) {\n        if (endTime > startTime) {\n            return (endTime - startTime) * 0.7;\n        } else if (startTime === endTime) {\n            return 0;\n        } else {\n            return (startTime - endTime) * -0.7;\n        }\n    }\n\n    getFullClassData(courseCode: String, allClassData: any): Class {\n        const APIdata = allClassData\n        const generalCourseCode = courseCode.split('-').slice(0, -1).join('-');\n        return APIdata[generalCourseCode];\n    };\n\n}","import {Alert, Text, TouchableOpacity, View} from \"react-native\";\nimport React from \"react\";\nimport CalendarFunctions from \"./CalendarFunctions\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {useRemoveClassMutation} from \"../api/classPagesApi\";\n\nexport default function renderCustomEvent(event, userData) {\n    const calendarFun = new CalendarFunctions()\n\n    const [startHour, startMinute] = event.startTime.split(':');\n    const [endHour, endMinute] = event.endTime.split(':');\n    let color = calendarFun.stringToColour(event.name);\n\n\n    return (\n        <View\n            key={event.name + event.days}\n            style={{\n                backgroundColor: color,\n                top: (41.7 * startHour) + (startMinute * 0.7),\n                height:\n                    41.7 * (endHour - startHour) + calendarFun.getMinutesDiff(startMinute, endMinute),\n                width: '100%',\n                position: 'absolute',\n                margin: 0,\n                justifyContent: 'center',\n            }}>\n            <TouchableOpacity\n                onLongPress={() => {}\n                    /* Alert.alert(\n                        event.name,\n                        calendarFun.convertTo12HourTime(event.startTime) +\n                        ' - ' +\n                        calendarFun.convertTo12HourTime(event.endTime),\n                        [\n                            {\n                                text: 'Remove',\n                                onPress: () => {\n                                    //removeClass(event);\n                                },\n                            },\n                            {\n                                text: 'Back',\n                                onPress: () => {},\n                                style: 'cancel',\n                            },\n                        ],\n                        { cancelable: true }\n                    )*/\n                }>\n                <Text\n                    adjustsFontSizeToFit={true}\n                    numberOfLines={endHour - startHour + 2}\n                    style={{ color: 'white', textAlign: 'center' }}>\n                    {event.name}\n                </Text>\n            </TouchableOpacity>\n        </View>\n    );\n};","import { useNavigation } from '@react-navigation/native';\nimport { Alert, Text, TouchableOpacity, View } from 'react-native';\nimport React from 'react';\nimport { useAppSelector } from '../../app/hooks';\nimport CalendarFunctions from './CalendarFunctions';\nimport {\n  useGetCurrentSectionQuery,\n  useRemoveClassMutation,\n} from '../api/classPagesApi';\n\nexport default function renderItem(\n  masterClassInfo,\n  courseCode,\n  handleClassSelected = (string: string) => {}\n) {\n  const calendarFun = new CalendarFunctions();\n  const thisTime = masterClassInfo.times.find(\n    (course) => course.courseCode === courseCode\n  );\n\n  const [startHour, startMinute] = thisTime.startTime.split(':');\n  const [endHour, endMinute] = thisTime.endTime.split(':');\n  let color = calendarFun.stringToColour(masterClassInfo.masterCourseCode);\n  let code = courseCode.split(' ');\n  return (\n    <View\n      key={thisTime._id}\n      style={{\n        backgroundColor: color,\n        top: 41.7 * startHour + startMinute * 0.7,\n        height:\n          41.7 * (endHour - startHour) +\n          calendarFun.getMinutesDiff(startMinute, endMinute),\n        width: '100%',\n        position: 'absolute',\n        margin: 0,\n        justifyContent: 'center',\n      }}>\n      <TouchableOpacity\n        onPress={() => {\n          handleClassSelected(masterClassInfo.masterCourseCode);\n        }}\n        onLongPress={\n          () => {} /*{\n                    Alert.alert(\n                        courseCode,\n                        null,\n                        [\n                            {\n                                text: 'Delete',\n                                onPress: () => {\n\n                                },\n                            },\n                            {\n                                text: 'Cancel',\n                                onPress: () => console.log('Cancel Pressed'),\n                                style: 'cancel',\n                            },\n                        ],\n                        { cancelable: true }\n                    );\n                }*/\n        }>\n        <Text\n          adjustsFontSizeToFit\n          numberOfLines={5}\n          style={{\n            color: parseInt(color.slice(1), 16) > 9079434 ? 'black' : 'white',\n            fontSize: 11,\n            marginHorizontal: 3,\n            textAlign: 'center',\n          }}>\n          {code[0]} {code[1]}\n          {'\\n'}\n          {code[2]}\n          {thisTime.classLocation ? '\\n(' + thisTime.classLocation + ')' : null}\n        </Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n","import {\n  Button,\n  Card,\n  Layout,\n  Modal,\n  Text,\n  withStyles,\n} from '@ui-kitten/components';\nimport { useEffect, useRef, useState } from 'react';\nimport { StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\n\nimport { useAppSelector } from '../../../app/hooks';\nimport { useIsAllowedToReviewQuery } from '../../api/classPagesApi';\nimport { selectDarkMode, selectUserKey } from '../../../app/appDataSlice';\n\nfunction SingleClassPage({ eva, navigation }) {\n  const [showModal, setShowModal] = useState(false);\n  const scrollViewRef = useRef(null);\n\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\n  const selectedClass = useAppSelector(\n    (state) => state.appData.classPages.selectedClass\n  );\n\n  const backgroundColor = darkMode ? eva.style.dark : eva.style.light;\n\n  const { data: isAllowedToReviewRes } = useIsAllowedToReviewQuery({\n    userKey,\n    masterCourseCode: selectedClass.masterCourseCode,\n  });\n\n  useEffect(() => {\n    if (scrollViewRef?.current) {\n      scrollViewRef.current.scrollTo({\n        y: 0,\n        animated: false,\n      });\n    }\n  }, [selectedClass]);\n\n  function buildTimeString(time) {\n    if (!time.startTime || time.startTime === '' || time.startTime === null) {\n      return 'closed';\n    }\n    return (\n      convertTo12HourTime(time.startTime) +\n      ' - ' +\n      convertTo12HourTime(time.endTime) +\n      '\\n'\n    );\n  }\n\n  function convertTo12HourTime(time) {\n    if (time.length !== 5) {\n      time = '0' + time;\n    }\n    let hours = time.slice(0, 2);\n    let minutes = time.slice(3, 5);\n    let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n    hours = hours % 12;\n    if (hours === 0) {\n      hours = 12;\n      ampm = 'pm';\n    }\n    return hours + ':' + minutes + ampm;\n  }\n\n  const averageGradeMSGModal = (\n    <Modal\n      visible={showModal}\n      backdropStyle={styles.backdrop}\n      style={{ width: '75%' }}\n      onBackdropPress={() => setShowModal(false)}>\n      <Card disabled={true}>\n        <Text style={{ fontSize: 15, paddingTop: 5, paddingBottom: 10 }}>\n          The Athena Network collects and aggregates the data anonymously\n          submitted by the Course Review process and calculates what the average\n          student's experience in this course will look like. Given that it is\n          based on voluntarily submitted data, this information is to be used as\n          a reference only. Please consult your advisor before making any\n          impactful decisions.\n        </Text>\n        <Button onPress={() => setShowModal(false)}>Dismiss</Button>\n      </Card>\n    </Modal>\n  );\n\n  if (!selectedClass.times) {\n    return null;\n  }\n\n  return (\n    <ScrollView\n      contentContainerStyle={{ alignSelf: 'center', maxWidth: 700 }}\n      style={backgroundColor}\n      ref={scrollViewRef}>\n      <Layout style={[{ alignItems: 'center' }, backgroundColor]}>\n        <Text style={styles.title}>{selectedClass.courseName}</Text>\n        <Text style={{ paddingTop: 30 }}>{selectedClass.masterCourseCode}</Text>\n\n        <Text style={styles.subtitle}>\n          {`${selectedClass.courseTerm} \\u2022 credits: ${\n            filters.isHMC\n              ? selectedClass.creditWeightHM\n              : selectedClass.creditWeight\n          }`}\n        </Text>\n        {selectedClass.timeSpentOutOfClass && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5,\n              },\n              backgroundColor,\n            ]}>\n            <Text style={styles.subtitle}>Time Spent Per Week</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>\n              : {selectedClass.timeSpentOutOfClass} hours\n            </Text>\n          </Layout>\n        )}\n        {selectedClass.averageGrade && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5,\n              },\n              backgroundColor,\n            ]}>\n            <Text style={styles.subtitle}>Average Grade</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>: {selectedClass.averageGrade}</Text>\n          </Layout>\n        )}\n        {selectedClass.difficulty && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5,\n              },\n              backgroundColor,\n            ]}>\n            <Text style={styles.subtitle}>Estimated Difficulty</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>\n              : {selectedClass.difficulty} / 5\n            </Text>\n          </Layout>\n        )}\n        {selectedClass.rating && (\n          <Layout\n            style={[\n              {\n                flexDirection: 'row',\n                alignItems: 'flex-start',\n                paddingRight: 5,\n              },\n              backgroundColor,\n            ]}>\n            <Text style={styles.subtitle}>Average Rating</Text>\n            <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n            <Text style={styles.subtitle}>: {selectedClass.rating} / 5</Text>\n          </Layout>\n        )}\n      </Layout>\n      <Layout style={backgroundColor}>\n        <Text style={styles.courseDescription}>{selectedClass.summary}</Text>\n      </Layout>\n      <Layout style={{ ...backgroundColor, ...styles.boxed }}>\n        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n          Stated Prerequisites:\n        </Text>\n        <Text style={{ fontSize: 15 }}>\n          {selectedClass.prerequisites !== ''\n            ? selectedClass.prerequisites\n            : 'none'}\n        </Text>\n\n        <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n          Stated Corequisites:\n        </Text>\n        <Text style={{ fontSize: 15 }}>\n          {selectedClass.corequisites !== ''\n            ? selectedClass.corequisites\n            : 'none'}\n        </Text>\n      </Layout>\n      <Layout style={[{ alignItems: 'flex-end' }, backgroundColor]}>\n        {(selectedClass.timeSpentOutOfClass ||\n          selectedClass.averageGrade ||\n          selectedClass.difficulty ||\n          selectedClass.rating) && (\n          <TouchableOpacity onPress={() => setShowModal(!showModal)}>\n            <Layout\n              style={[\n                {\n                  flexDirection: 'row',\n                  alignItems: 'flex-start',\n                  paddingRight: 5,\n                },\n                backgroundColor,\n              ]}>\n              <Text style={{ fontSize: 12, lineHeight: 13 }}>i</Text>\n              <Text style={styles.disclaimer}>How Do We Estimate This?</Text>\n            </Layout>\n          </TouchableOpacity>\n        )}\n      </Layout>\n      <Layout style={backgroundColor}>\n        {selectedClass.times.length > 0 && (\n          <Layout style={backgroundColor}>\n            <Text style={styles.subHeader}>Sections</Text>\n            <Layout style={[styles.section, backgroundColor]}>\n              <Text style={styles.headerText}>Course Code</Text>\n              <Text style={styles.headerText}>Seats</Text>\n              <Text style={styles.headerText}>Professor</Text>\n              <Text style={styles.headerText}>Time</Text>\n              <Text style={styles.headerText}>Location</Text>\n            </Layout>\n          </Layout>\n        )}\n        {selectedClass.times.map((time) => {\n          return (\n            <Layout\n              key={time.courseCode}\n              style={{ backgroundColor, ...styles.section }}>\n              <Text style={styles.sectionText}>{time.courseCode}</Text>\n              <Text style={styles.sectionText}>\n                {time.seatsFilled} / {time.seatsFilled + time.seatsAvailable}\n              </Text>\n              <Text style={styles.sectionText}>{time.professorName}</Text>\n              <Text style={styles.sectionText}>\n                {buildTimeString(time)}\n                {time.daysOfTheWeek.join(', ')}\n              </Text>\n              <Text style={styles.sectionText}>\n                {time.classLocation ? time.classLocation : 'TBD'}\n              </Text>\n            </Layout>\n          );\n        })}\n        {averageGradeMSGModal}\n      </Layout>\n      {isAllowedToReviewRes?.isAllowed ? (\n        <Button\n          style={{ margin: 10 }}\n          onPress={() => {\n            navigation.navigate('PostReview');\n          }}>\n          Post Review\n        </Button>\n      ) : null}\n      <Text style={styles.subHeader}>Reviews</Text>\n      {selectedClass.reviews.length === 0 ? (\n        <Text style={{ alignSelf: 'center', marginBottom: 10 }}>\n          No Reviews yet\n        </Text>\n      ) : (\n        selectedClass.reviews.map((review, index) => (\n          <Card key={index}>\n            <Text>{review.text + '\\n\\nPosted: ' + review.date}</Text>\n            {review.professor && (\n              <Text>{'Taught By: ' + review.professor}</Text>\n            )}\n          </Card>\n        ))\n      )}\n    </ScrollView>\n  );\n}\n\nexport default withStyles(SingleClassPage, (theme) => ({\n  dark: {\n    backgroundColor: theme['color-basic-900'],\n  },\n  light: {\n    backgroundColor: theme['color-basic-200'],\n  },\n}));\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 20,\n    marginTop: 20,\n    fontWeight: 'bold',\n  },\n  subtitle: {\n    fontSize: 16,\n  },\n  courseOpen: {\n    backgroundColor: 'green',\n    color: '#fff',\n    padding: 5,\n    marginRight: 10,\n  },\n  courseClosed: {\n    backgroundColor: 'red',\n    color: '#fff',\n    padding: 5,\n    borderRadius: 5,\n  },\n  header: {\n    alignItems: 'center',\n  },\n  details: {\n    flexDirection: 'row',\n    padding: 10,\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  courseDescription: {\n    paddingRight: 20,\n    paddingLeft: 20,\n    paddingTop: 10,\n    paddingBottom: 5,\n    fontSize: 17,\n  },\n  BodyContainer: {\n    borderTopWidth: 1,\n    borderTopColor: 'black',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly',\n    padding: 10,\n    paddingTop: 20,\n    paddingBottom: 20,\n  },\n  boxed: {\n    alignItems: 'center',\n    margin: 8,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 7,\n  },\n  documentStyle: {\n    width: 150,\n    height: 190,\n    paddingTop: 100,\n  },\n  imageLabel: {\n    fontSize: 12,\n    color: 'black',\n    padding: 10,\n    textAlign: 'center',\n  },\n  schedule: {\n    paddingLeft: 20,\n    paddingTop: 10,\n  },\n  graphImage: {\n    width: '100%',\n    aspectRatio: 1,\n    resizeMode: 'contain',\n  },\n  grade: {\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'green',\n  },\n  reviewText: {\n    fontSize: 16,\n    fontStyle: 'italic',\n  },\n  reviewBox: {\n    width: '95%',\n    padding: 10,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 5,\n    marginBottom: 10,\n  },\n  section: {\n    flexDirection: 'row',\n    paddingLeft: 5,\n    borderBottomWidth: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  headerText: {\n    fontWeight: 'bold',\n    fontSize: 13,\n    flex: 1,\n  },\n  sectionText: {\n    flex: 1,\n  },\n  disclaimer: {\n    fontSize: 14,\n    fontStyle: 'italic',\n  },\n  backdrop: {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  containerDrop: {\n    height: 42,\n    margin: 12,\n    borderWidth: 1,\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  subHeader: {\n    fontSize: 20,\n    paddingLeft: 20,\n    paddingBottom: 20,\n    paddingTop: 20,\n    fontWeight: 'bold',\n  },\n});\n","export const RENDERED_RESULTS_LIMIT = 10;\nexport const NEW_REVIEW_FIELDS = [\n  {\n    label: 'Professor',\n    id: 'professor',\n    mandatory: false,\n    type: 'String',\n  },\n  {\n    label: 'Grade',\n    id: 'grade',\n    type: 'DropDown',\n    mandatory: false,\n    options: [\n      {\n        label: 'A+',\n        id: 'A',\n      },\n      {\n        label: 'A',\n        id: 'A',\n      },\n      {\n        label: 'A-',\n        id: 'A',\n      },\n      {\n        label: 'B+',\n        id: 'B',\n      },\n      {\n        label: 'B',\n        id: 'B',\n      },\n      {\n        label: 'B-',\n        id: 'B',\n      },\n      {\n        label: 'C+',\n        id: 'C',\n      },\n      {\n        label: 'C',\n        id: 'C',\n      },\n      {\n        label: 'C-',\n        id: 'C',\n      },\n      {\n        label: 'D+',\n        id: 'D',\n      },\n      {\n        label: 'D',\n        id: 'D',\n      },\n      {\n        label: 'D-',\n        id: 'D',\n      },\n      {\n        label: 'F+',\n        id: 'F',\n      },\n      {\n        label: 'F',\n        id: 'F',\n      },\n      {\n        label: 'F-',\n        id: 'F',\n      },\n    ],\n  },\n  {\n    label: 'Time Spent in Hours (ie: 7)',\n    id: 'timeSpent',\n    mandatory: false,\n    type: 'String',\n  },\n];\n","import {\n  IndexPath,\n  Layout,\n  Select,\n  SelectItem,\n  Text,\n  useTheme,\n  Button,\n  Spinner,\n  Input,\n} from '@ui-kitten/components';\nimport { useState } from 'react';\nimport { Alert, StyleSheet, ScrollView } from 'react-native';\nimport { selectUserKey } from '../../../app/appDataSlice';\nimport { useAppSelector } from '../../../app/hooks';\nimport { NEW_REVIEW_FIELDS as fields } from '../../../constants/classPages';\nimport { useSendReviewMutation } from '../../api/classPagesApi';\n\nexport default function NewReview({ navigation }) {\n  const [body, setBody] = useState({});\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector((state) => state.appData.secure.darkMode);\n  const selectedClass = useAppSelector(\n    (state) => state.appData.classPages.selectedClass\n  );\n  const [sendReview, { isLoading }] = useSendReviewMutation();\n\n  const theme = useTheme();\n\n  const backgroundColor = darkMode\n    ? theme['color-basic-900']\n    : theme['color-basic-200'];\n\n  const color = darkMode ? theme['color-basic-200'] : theme['color-basic-900'];\n\n  const handleReviewSubmitted = async () => {\n    try {\n      await sendReview({\n        body: {\n          ...body,\n          masterCourseCode: selectedClass.masterCourseCode,\n        },\n        userKey,\n      }).unwrap();\n      Alert.alert(\n        'Review Submitted',\n        `Your review of \"${selectedClass.courseName}\" has been submitted and is now pending approval.\\n\\nThank You!`,\n        [\n          {\n            text: 'OK',\n            onPress: () => {\n              navigation.goBack();\n            },\n          },\n        ]\n      );\n    } catch (error) {\n      Alert.alert(\n        'Error',\n        `There was an error submitting your review. Please try again later.`\n      );\n      console.warn('Error submitting review: ', error);\n    }\n  };\n\n  function renderTheFieldsNecessary(fields) {\n    const changeValue = (theValue, valueToChange) => {\n      let newBody = body;\n      for (const aspect in newBody) {\n        if (\n          newBody[aspect] === null ||\n          newBody[aspect] === undefined ||\n          newBody[aspect] === ''\n        ) {\n          delete newBody[aspect];\n        }\n      }\n      if (theValue !== undefined) {\n        newBody[valueToChange] = theValue;\n      } else {\n        if (newBody[valueToChange]) {\n          delete newBody[valueToChange];\n        }\n      }\n      setBody(newBody);\n    };\n    const renderFilterParameters = (fields) => {\n      if (fields.length === 0) {\n        return null;\n      }\n      return (\n        <Layout style={{ flexDirection: 'row', backgroundColor }}>\n          <Text\n            style={{\n              fontSize: 15,\n              paddingLeft: 12,\n              paddingBottom: 5,\n              paddingTop: 5,\n              alignContent: 'center',\n              fontWeight: 'bold',\n            }}>\n            Review Details\n          </Text>\n        </Layout>\n      );\n    };\n    let final = [];\n\n    const renderDropDown = (field) => {\n      const [selectedIndex, setSelectedIndex] = useState(new IndexPath(0));\n      const [hasChosen, setHasChosen] = useState(false);\n\n      function currentValue() {\n        return (\n          <Text key={'gal;fkdjsl;f'}>\n            {!hasChosen\n              ? 'Choose ' +\n                field.label +\n                (field.mandatory ? ' (mandatory)' : '')\n              : field.options[selectedIndex.row - 1].label}{' '}\n          </Text>\n        );\n      }\n\n      function handleSelection(index) {\n        setSelectedIndex(index);\n        changeValue(\n          index.row === 0 ? undefined : field.options[index.row - 1].id,\n          field.id\n        );\n        if (index.row === 0) {\n          setHasChosen(false);\n        } else {\n          setHasChosen(true);\n        }\n      }\n\n      return (\n        <Select\n          style={{ ...styles.containerDrop, backgroundColor }}\n          value={currentValue}\n          selectedIndex={selectedIndex}\n          onSelect={handleSelection}>\n          <SelectItem title={' '} />\n          {field.options.map(({ label }, index) => (\n            <SelectItem title={label} key={index} />\n          ))}\n        </Select>\n      );\n    };\n    final.push(\n      <Input\n        key={'lfjdsa;lfaj'}\n        autoCapitalize={'sentences'}\n        onChangeText={(theValue) => changeValue(theValue, 'text')}\n        style={{ ...styles.inputBig, backgroundColor, color }}\n        multiline={true}\n        placeholderTextColor={darkMode ? theme['color-basic-500'] : 'gray'}\n        placeholder={'Review Text (mandatory)'}\n      />\n    );\n    for (let i = 0; i < fields.length; i++) {\n      const type = fields[i].type;\n      if (type === 'String') {\n        final.push(\n          <Input\n            key={i}\n            autoCapitalize={'words'}\n            clearButtonMode={'always'}\n            onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\n            style={{ ...styles.input, backgroundColor, color }}\n            placeholderTextColor={darkMode ? theme['color-basic-500'] : 'gray'}\n            placeholder={\n              fields[i].mandatory\n                ? fields[i].label + ' (mandatory)'\n                : fields[i].label\n            }\n          />\n        );\n      } else if (type === 'DropDown') {\n        final.push(renderDropDown(fields[i]));\n      }\n    }\n\n    return (\n      <Layout style={{ backgroundColor }}>\n        {renderFilterParameters(fields)}\n        <Layout style={{ backgroundColor }}>{final}</Layout>\n      </Layout>\n    );\n  }\n\n  return (\n    <ScrollView style={{ backgroundColor }}>\n      <Layout style={{ backgroundColor, ...styles.container }}>\n        <Layout style={{ backgroundColor }}>\n          {renderTheFieldsNecessary(fields)}\n        </Layout>\n        <Button style={{ margin: 12 }} onPress={handleReviewSubmitted}>\n          Post Review\n        </Button>\n      </Layout>\n      {isLoading ? (\n        <Layout\n          style={{\n            backgroundColor: 'transparent',\n            position: 'absolute',\n            right: '50%',\n            top: '50%',\n          }}>\n          <Spinner />\n        </Layout>\n      ) : null}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  input: {\n    height: 50,\n    margin: 12,\n    padding: 10,\n    borderColor: '#B3B3B3',\n    borderRadius: 5,\n    borderWidth: 1,\n  },\n  inputBig: {\n    height: 200,\n    margin: 12,\n    padding: 10,\n    borderColor: '#B3B3B3',\n    borderRadius: 5,\n    borderWidth: 1,\n  },\n  containerDrop: {\n    height: 42,\n    margin: 12,\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n  },\n  container: {\n    flex: 1,\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    padding: 10,\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10,\n  },\n  logo: {\n    width: '100%',\n    height: 100,\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  coupon: {\n    width: 400,\n    height: 267,\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0,\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n});\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport InfoPage from './InfoPage';\nimport PostReview from './PostReview';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function SingleClassPage({ bottomSheetRef }) {\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"InfoPage\"\n        component={InfoPage}\n        options={{ title: '' }}\n      />\n      <Stack.Screen\n          name=\"PostReview\"\n          component={PostReview}\n          options={{ title: 'Add Review' }}\n        />\n    </Stack.Navigator>\n  );\n}\n","import {\n  Animated,\n  Dimensions,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  Text,\n  View,\n} from 'react-native';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {\n  classSelected,\n  selectClassesList,\n} from '../classPages/classPagesSlice';\nimport {\n  appDataSlice,\n  selectDarkMode,\n  selectUserKey,\n} from '../../app/appDataSlice';\nimport { useNavigation } from '@react-navigation/native';\nimport renderCustomEvent from './customEvent';\nimport { useGetCurrentSectionQuery } from '../api/classPagesApi';\nimport renderItem from './ScheduledItem';\nimport CalendarFunctions from './CalendarFunctions';\nimport { useGetUserInfoQuery } from '../api/usersApi';\nimport { Button, Layout, useTheme } from '@ui-kitten/components';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport BottomSheet from '@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet';\nimport SingleClassPage from '../classPages/SingleClassPage';\n\nexport default function CalendarPage({ navigation }) {\n  const isThreeDay = useAppSelector(\n    (state) => state.appData.calendar.isThreeDay\n  );\n  const dispatch = useAppDispatch();\n  const bottomSheetRef = useRef<BottomSheet>(null);\n  const darkMode: Boolean = useAppSelector(selectDarkMode);\n  const calendarFun = new CalendarFunctions();\n  const threeDayWidth = (Dimensions.get('window').width - 75) / 3;\n  const fiveDayWidth = (Dimensions.get('window').width - 75) / 5;\n  const days = [\n    { day: 'Mon', id: 'Monday' },\n    { day: 'Tues', id: 'Tuesday' },\n    { day: 'Wed', id: 'Wednesday' },\n    { day: 'Thurs', id: 'Thursday' },\n    { day: 'Fri', id: 'Friday' },\n    { day: 'Sat', id: 'Saturday' },\n    { day: 'Sun', id: 'Sunday' },\n  ];\n  const times = [\n    '12:00 AM',\n    '1:00 AM',\n    '2:00 AM',\n    '3:00 AM',\n    '4:00 AM',\n    '5:00 AM',\n    '6:00 AM',\n    '7:00 AM',\n    '8:00 AM',\n    '9:00 AM',\n    '10:00 AM',\n    '11:00 AM',\n    '12:00 PM',\n    '1:00 PM',\n    '2:00 PM',\n    '3:00 PM',\n    '4:00 PM',\n    '5:00 PM',\n    '6:00 PM',\n    '7:00 PM',\n    '8:00 PM',\n    '9:00 PM',\n    '10:00 PM',\n    '11:00 PM',\n  ];\n\n  const { data: userData } = useGetUserInfoQuery(useAppSelector(selectUserKey));\n  let addedClasses = userData?.addedClasses?.classes;\n  const allClassData = useAppSelector(selectClassesList);\n  const { data: currentSection, isLoading: isCurrentSectionLoading } =\n    useGetCurrentSectionQuery();\n\n  const renderCustomEvents = (elem) => {\n    let finalRender = [];\n    if (!userData.customEvents) {\n      return null;\n    }\n    for (const event of userData.customEvents) {\n      if (event.days.includes(elem.id)) {\n        finalRender.push(renderCustomEvent(event, userData));\n      }\n    }\n    return finalRender;\n  };\n\n  const handleClassSelected = (courseCode: string) => {\n    dispatch(classSelected(courseCode));\n    if (Platform.OS === 'web') {\n      navigation.navigate('SingleClassPage');\n    } else {\n      bottomSheetRef.current?.snapToIndex(0);\n    }\n  };\n\n  function renderDashes() {\n    let final = [];\n    for (let i = 0; i < 24; i++) {\n      final.push(\n        <View\n          style={{\n            width: (isThreeDay ? threeDayWidth : fiveDayWidth) * 0.73016,\n            marginLeft: (isThreeDay ? threeDayWidth : fiveDayWidth) * 0.14286,\n            top: 41.7 * i,\n            position: 'absolute',\n            height: 41.7,\n            borderBottomWidth: 0.7,\n            borderBottomColor: darkMode ? 'rgb(68,68,68)' : 'rgb(204,204,204)',\n          }}\n        />\n      );\n    }\n    return final;\n  }\n\n  const renderClasses = (elem) => {\n    let classes = [];\n    Object.keys(addedClasses).map((term) => {\n      if (term === currentSection) {\n        Object.keys(addedClasses[term]).map((masterCourseCode) => {\n          for (const courseCode of addedClasses[term][masterCourseCode]) {\n            try {\n              let data = calendarFun.getFullClassData(courseCode, allClassData);\n              let data2 = data.times.find(\n                (time) => time.courseCode === courseCode\n              );\n              for (const day in data2['daysOfTheWeek']) {\n                if (data2['daysOfTheWeek'][day] === elem.id) {\n                  classes.push(\n                    renderItem(data, courseCode, handleClassSelected)\n                  );\n                }\n              }\n            } catch (e) {\n              console.log(e);\n            }\n          }\n        });\n      }\n    });\n    return classes;\n  };\n\n  const topBar = useRef(null);\n  const [startingOffset, setStartingOffset] = useState({ x: 0, y: 292 });\n\n  return (\n    <View style={{ flex: 1 }}>\n      {/* Times */}\n      <ScrollView\n        horizontal={true}\n        snapToInterval={isThreeDay ? threeDayWidth : fiveDayWidth}\n        showsHorizontalScrollIndicator={false}\n        style={{ marginLeft: 75 }}\n        ref={topBar}>\n        <View style={{ flexDirection: 'row' }}>\n          {days.map((elem) => {\n            return (\n              <View>\n                <View\n                  style={{\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\n                    borderBottomWidth: 1,\n                    width: '100%',\n                  }}>\n                  <Text\n                    style={{\n                      textAlign: 'center',\n                      color: darkMode ? '#7a7a7a' : '#525252',\n                      width: isThreeDay ? threeDayWidth : fiveDayWidth,\n                    }}>\n                    {elem.day}\n                  </Text>\n                </View>\n              </View>\n            );\n          })}\n        </View>\n      </ScrollView>\n      <ScrollView\n        contentOffset={startingOffset}\n        showsVerticalScrollIndicator={false}\n        bounces={false}>\n        <View style={{ flexDirection: 'row' }}>\n          <View\n            style={{\n              justifyContent: 'space-around',\n              height: 1000,\n            }}>\n            {times.map((time) => {\n              return (\n                <Text\n                  style={{\n                    paddingTop: '15%',\n                    height: 43,\n                    width: 75,\n                    borderWidth: 1,\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\n                    textAlign: 'center',\n                    color: darkMode ? '#7a7a7a' : '#525252',\n                  }}>\n                  {time}\n                </Text>\n              );\n            })}\n          </View>\n          {/* Classes */}\n          <ScrollView\n            horizontal={true}\n            snapToInterval={isThreeDay ? threeDayWidth : fiveDayWidth}\n            decelerationRate={'normal'}\n            showsHorizontalScrollIndicator={false}\n            bounces={false}\n            scrollEventThrottle={1}\n            onScroll={(e) =>\n              topBar.current.scrollTo({\n                x: e.nativeEvent.contentOffset.x,\n                animated: false,\n                useNativeDriver: true,\n              })\n            }\n            onMomentumScrollBegin={(e) =>\n              topBar.current.scrollTo({\n                x: e.nativeEvent.contentOffset.x,\n                animated: false,\n                useNativeDriver: true,\n              })\n            }>\n            <View style={{ flexDirection: 'row' }}>\n              {days.map((elem) => {\n                return (\n                  <View>\n                    {renderDashes()}\n                    <View\n                      key={elem.day}\n                      style={{\n                        width: isThreeDay ? threeDayWidth : fiveDayWidth,\n                      }}>\n                      {userData?.addedClasses && renderClasses(elem)}\n                      {userData?.addedClasses && renderCustomEvents(elem)}\n                    </View>\n                    <View\n                      style={{\n                        height: '100%',\n                        width: 1,\n                        backgroundColor: darkMode ? '#7a7a7a' : '#525252',\n                      }}\n                    />\n                  </View>\n                );\n              })}\n            </View>\n          </ScrollView>\n        </View>\n      </ScrollView>\n\n      {Platform.OS !== 'web' && (\n        <SingleClassPage bottomSheetRef={bottomSheetRef} />\n      )}\n    </View>\n  );\n}\n\nconst myStyles = {\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n    backgroundColor: 'black',\n  },\n  timeButton: {\n    width: 100,\n    height: 50,\n    marginHorizontal: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n    backgroundColor: '#c45269',\n  },\n  timeText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  actualTimeText: {\n    fontSize: 13,\n    lineHeight: 18,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n};\n\nconst sponsorPageStyles = {\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 10,\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10,\n  },\n  logo: {\n    width: '100%',\n    height: 100,\n  },\n  description: {\n    borderWidth: 1,\n    margin: 10,\n    borderColor: '#5d5c5c',\n    borderRadius: 5,\n    width: '95%',\n    padding: 10,\n    backgroundColor: 'rgba(178,166,166,0.22)',\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  coupon: {\n    width: 400,\n    height: 267,\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0,\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n};\n","import {apiSlice} from \"../api/apiSlice\";\n\nexport const base_URL = \"http://54.200.234.43:1234/api\"","import {JSXElementConstructor, ReactElement, useEffect, useState} from \"react\";\nimport {base_URL} from \"../notifications/constants\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {selectDarkMode, selectUserKey} from \"../../app/appDataSlice\";\nimport {Autocomplete, AutocompleteItem, Card, Modal} from \"@ui-kitten/components\";\nimport {Alert, Button, View, Text} from \"react-native\";\nimport {useGetUserInfoQuery} from \"../api/usersApi\";\nimport {useGetCurrentSectionQuery} from \"../api/classPagesApi\";\nimport renderItem from \"./ScheduledItem\";\n\nexport default function renderModal(setShowModal, showModal) {\n    const {data: userData} = useGetUserInfoQuery(useAppSelector(selectUserKey));\n    const {data: currentSection} = useGetCurrentSectionQuery();\n    const darkMode = useAppSelector(selectDarkMode)\n    const userKey = useAppSelector(selectUserKey)\n    const [ names, setNames ] = useState([])\n    const [ users, setUsers ] = useState([])\n    const [ value, setValue ] = useState('')\n    const [ hasChosen, setHasChosen ] = useState(false)\n    const [ recipient, setRecipient ] = useState(null)\n\n    const myStyles = {\n        modal: {\n            fontSize: 18, paddingBottom: 20, fontWeight: 'bold',\n            textAlign: 'center', width: '100%', color: darkMode ? 'rgb(255,255,255)' : 'rgb(0,0,0)'\n        },\n        backdrop: {\n            backgroundColor: darkMode ? 'rgba(141,141,141,0.5)' : 'rgba(0, 0, 0, 0.5)',\n        },\n        containerDrop: {\n            minWidth: 200,\n            paddingBottom: 15\n        },\n    }\n\n    useEffect(() => {\n        fetch(base_URL + '/users/userNamesAndNames', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            }\n        }).then(async (data) => {\n            if (data.ok) {\n                const userList = await data.json();\n                setNames(userList.map(user => {\n                    if (user) {\n                        return user.realName + ' (' + user.userName + ')'\n                    }\n                }))\n                setUsers(userList)\n            }\n        })\n    }, [])\n    const renderDropDownForExport = () => {\n\n        function renderEachDropItem() {\n            let final = []\n            for (const option in names) {\n                final.push(\n                    <AutocompleteItem\n                        title={names[option]}\n                        key={option}\n                    />\n                )\n            }\n            return final\n        }\n\n        const onChangeText = (query) => {\n            setNames(\n                freshNames().filter(name =>\n                    name?.toLowerCase().includes(query.toLowerCase())\n                    || userNameContainsString(name, query))\n            );\n            setValue(query);\n        };\n\n        function freshNames() {\n            return users.map(user => {\n                if (user) {\n                    return user.realName + ' (' + user.userName + ')'\n                }\n            })\n        }\n\n        const userNameContainsString = (name, query) => {\n            const user = users.find(auser => auser?.userName.toLowerCase().includes(query.toLowerCase()) && auser?.realName === name);\n            return user !== undefined;\n        }\n\n        function handleSelection(index) {\n            if (index === 0) {\n                setHasChosen(false)\n                setRecipient(null)\n                // @ts-ignore\n                setValue('')\n            } else {\n                setHasChosen(true)\n                setValue(names[index - 1])\n                setRecipient(findUserNameFromName(names[index - 1]))\n            }\n        }\n\n        function findUserNameFromName(name) {\n            const firstPar = name.indexOf('(')\n            const secondPar = name.indexOf(')')\n            return name.slice(firstPar + 1, secondPar)\n        }\n\n        return (\n            <Autocomplete\n                style={myStyles.containerDrop}\n                value={value}\n                onChangeText={onChangeText}\n                onSelect={handleSelection}>\n                <AutocompleteItem title={' '}/>\n                {renderEachDropItem()}\n            </Autocomplete>\n        );\n    };\n\n    const exportSchedule = async (recipient) => {\n        function convert(addedClasses) {\n            let final = []\n            Object.keys(addedClasses).map((term) => {\n                if (term === currentSection) {\n                    Object.keys(addedClasses[term]).map((masterCourseCode) => {\n                        for (const courseCode of addedClasses[term][masterCourseCode]) {\n                            final.push({\n                                courseCode,\n                                courseTerm: currentSection\n                            })\n                        }\n                    });\n                }\n            });\n            return final\n        }\n        let status = await fetch(base_URL + '/users/sendNotification', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            },\n            body: JSON.stringify({\n                recipients: [recipient],\n                text: JSON.stringify(convert(userData.addedClasses?.classes)),\n                title: userData.realFirstName + \"'s Schedule\",\n                isSchedule: true\n            })\n        })\n        return status.ok\n    }\n    return (\n        <Modal\n            visible={showModal}\n            backdropStyle={myStyles.backdrop}\n            style={{ width: '80%', height: '70%' }}\n            onBackdropPress={() => setShowModal(false)}>\n            <Card disabled={true}>\n                <Text style={myStyles.modal}>\n                    Share Your Schedule\n                </Text>\n                {renderDropDownForExport()}\n                <View>\n                    <Button disabled={recipient === null} title={'Send'} onPress={() => {\n                        exportSchedule(recipient).then((returnValue) => {\n                            setShowModal(false)\n                            returnValue ? Alert.alert('Message Sent') :\n                                Alert.alert('Error Sending Message', 'Please Try Again Later')\n                        })\n                    }} />\n                    <Button title={'Dismiss'} onPress={() => {\n                        setShowModal(false)\n                    }} />\n                </View>\n            </Card>\n        </Modal>\n    );\n}","import { Button, Icon, Layout, Text, useTheme } from '@ui-kitten/components';\nimport Modal from 'react-native-modal';\nimport { selectDarkMode } from '../app/appDataSlice';\nimport { useAppSelector } from '../app/hooks';\n\ntype ModalContainerProps = {\n  children: React.ReactNode;\n  backDropVisible: boolean;\n  setBackDropVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  title: string;\n};\n\nexport default function ModalContainer({\n  children,\n  backDropVisible,\n  setBackDropVisible,\n  title,\n}: ModalContainerProps) {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Modal\n      backdropOpacity={0}\n      onBackdropPress={() => setBackDropVisible(false)}\n      isVisible={backDropVisible}\n      style={{\n        backgroundColor: darkMode\n          ? theme['color-basic-900']\n          : theme['color-basic-50'],\n        borderRadius: 20,\n        flex: 1,\n        marginTop: 300,\n        marginBottom: 50,\n        shadowColor: '#000',\n        shadowOffset: {\n          width: 0,\n          height: 12,\n        },\n        shadowOpacity: 0.58,\n        shadowRadius: 16.0,\n\n        elevation: 11,\n      }}>\n      <Layout\n        style={{\n          flex: 1,\n          alignItems: 'center',\n          borderRadius: 20,\n          backgroundColor: darkMode\n            ? theme['color-basic-900']\n            : theme['color-basic-100'],\n        }}>\n        <Button\n          appearance=\"ghost\"\n          style={{\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            flex: 1,\n            borderRadius: 20,\n          }}\n          accessoryRight={(props) => (\n            <Icon pack=\"fontAwesome\" name=\"angle-down\" {...props} />\n          )}\n          onPress={() => setBackDropVisible(false)}\n        />\n        <Text category=\"h5\" style={{ marginVertical: 15 }}>\n          {title}\n        </Text>\n        {children}\n      </Layout>\n    </Modal>\n  );\n}\n","import React, { useState } from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { Button, Layout, Text } from '@ui-kitten/components';\nimport CreateCustomEvent from './CreateCustomEvent';\nimport CalendarPage from './CalendarPage';\nimport Header from '../../components/Header';\nimport { Dimensions, Image, Platform, TouchableOpacity, View } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { useNavigation } from '@react-navigation/native';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport {selectDarkMode, selectIsGuest, selectUserKey} from '../../app/appDataSlice';\nimport { base_URL } from '../notifications/constants';\nimport renderModal from './exportModal';\nimport { isThreeDaySet } from './calendarSlice';\nimport ModalContainer from \"../../components/ModalContainer\";\nimport SingleClassPage from '../classPages/SingleClassPage';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Calendar() {\n  const isThreeDay = useAppSelector(\n    (state) => state.appData.calendar.isThreeDay\n  );\n  const dispatch = useAppDispatch();\n  const isGuest = useAppSelector(selectIsGuest)\n  const darkMode = useAppSelector(selectDarkMode);\n  const userKey = useAppSelector(selectUserKey);\n  const [showModal, setShowModal] = useState(false);\n    const [showGuestModal, setShowGuestModal] = useState(false);\n  async function sendNotification(bodyTosend) {\n    await fetch(base_URL + '/users/sendNotification', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n      body: JSON.stringify(bodyTosend),\n    });\n  }\n  const accessoryLeft = (\n    <Image\n      style={{\n        height: 28,\n        width: 28,\n        alignItems: 'center',\n      }}\n      source={require('../../../assets/logos/app-logo-transparent.png')}\n    />\n  );\n\n  const accessoryRight = (\n    <View\n      style={{\n        paddingHorizontal: 20,\n        alignItems: 'center',\n        flexDirection: 'row',\n      }}>\n      {/*\n            <TouchableOpacity\n                onPress={() => {\n                    //navigation.navigate('CreateCustomEvent');\n                }}\n                style={{\n                    alignItems: 'center',\n                }}>\n                <FontAwesome5\n                    name={'plus'}\n                    size={25}\n                    color={darkMode ? 'white' : 'black'}\n                />\n            </TouchableOpacity>*/}\n      <TouchableOpacity\n        onPress={() => {\n          dispatch(isThreeDaySet(!isThreeDay))\n        }}\n        style={{\n          alignItems: 'center',\n          paddingRight: 40,\n        }}>\n        {Dimensions.get('window').width < 525 && (\n          <FontAwesome5\n            name={isThreeDay ? 'search-minus' : 'search-plus'}\n            size={20}\n            color={darkMode ? 'white' : 'black'}\n          />\n        )}\n      </TouchableOpacity>\n      <TouchableOpacity\n        onPress={() => {\n            if (isGuest) {\n                setShowGuestModal(true)\n            } else {\n                setShowModal(true);\n            }\n        }}\n        style={{\n          alignItems: 'center',\n        }}>\n        <FontAwesome5\n          name={'file-export'}\n          size={20}\n          color={darkMode ? 'white' : 'black'}\n        />\n      </TouchableOpacity>\n        {\n            showGuestModal &&\n            <ModalContainer\n                title=\"Wait!\"\n                children={<Text style={{paddingHorizontal: 30}}>This feature is locked to our Guest Users. Please create a free account with us to take advantage this feature.</Text>}\n                backDropVisible={showGuestModal}\n                setBackDropVisible={setShowGuestModal}\n            />\n        }\n      {renderModal(setShowModal, showModal)}\n    </View>\n  );\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"CalendarPage\"\n        component={CalendarPage}\n        options={{\n          header: () => {\n            return (\n              <Layout style={{ paddingBottom: 10 }}>\n                <Header\n                  accessoryLeft={accessoryLeft}\n                  accessoryRight={accessoryRight}\n                  title=\"Calendar\"\n                />\n              </Layout>\n            );\n          },\n        }}\n      />\n      <Stack.Screen\n        name=\"CreateCustomEvent\"\n        component={CreateCustomEvent}\n        options={{ headerShown: false }}\n      />\n      {Platform.OS === 'web' && (\n        <Stack.Screen\n          name=\"SingleClassPage\"\n          component={SingleClassPage}\n          options={{ headerShown: false, headerTitle: 'Class Pages' }}\n        />\n      )}\n    </Stack.Navigator>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\n\nexport default function Message({ title, item }) {\n  return (\n    <Layout\n      style={{\n        flex: 1,\n        marginTop: 10,\n        alignItems: 'center',\n        backgroundColor: 'transparent',\n      }}>\n      <Text style={{ margin: 20, color: '#fff' }}>{title}</Text>\n      {item}\n    </Layout>\n  );\n}\n","import { Layout, Text } from '@ui-kitten/components';\nimport {\n  StyleSheet,\n  Animated,\n  TouchableOpacity,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { useRef } from 'react';\n\nexport default function ClassListItemItem({\n  courseCode,\n  seatsAvailable,\n  seatsFilled,\n  handleAddClass,\n  handleRemoveClass,\n  darkMode,\n  added,\n  masterCourseCode,\n}) {\n  const selectedAnim = useRef(new Animated.Value(1)).current;\n\n  return (\n    <Layout style={styles.dropDownItem}>\n      <Text>{`\\u2022 ${courseCode}`}</Text>\n      <Text\n        style={seatsAvailable > 0 ? styles.isAvailable : styles.notAvailable}>\n        {seatsFilled} / {seatsFilled + seatsAvailable}\n      </Text>\n      {/* Add / Remove Class */}\n      <TouchableOpacity\n        activeOpacity={1}\n        onPress={() => {\n          if (added) {\n            handleRemoveClass(courseCode, masterCourseCode);\n          } else {\n            handleAddClass(courseCode, masterCourseCode);\n          }\n          Animated.sequence([\n            Animated.spring(selectedAnim, {\n              toValue: 0.0,\n              speed: 16,\n              useNativeDriver: true,\n            }),\n          ]).start(() => {\n            Animated.spring(selectedAnim, {\n              toValue: 1,\n              speed: 16,\n              useNativeDriver: true,\n            }).start();\n          });\n        }}>\n        <Animated.View\n          style={{\n            width: 50,\n            alignItems: 'center',\n            transform: [\n              {\n                scale: selectedAnim,\n              },\n            ],\n          }}>\n          <FontAwesome5\n            style={{ padding: 5 }}\n            size={24}\n            name={added ? 'times' : 'plus'}\n            color={darkMode ? 'white' : 'black'}\n          />\n        </Animated.View>\n      </TouchableOpacity>\n    </Layout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  list__container: {\n    margin: 10,\n    marginLeft: 0,\n    height: '90%',\n    width: '100%',\n  },\n  addedClassesContainer: {\n    position: 'absolute',\n    zIndex: 1,\n    width: '60%',\n    borderTopRightRadius: 20,\n    borderBottomRightRadius: 20,\n    borderColor: '#c2c2c2',\n    backgroundColor: '#f7f7f7',\n    paddingTop: 5,\n    borderTopWidth: 1.5,\n    borderBottomWidth: 1.5,\n    borderRightWidth: 1.5,\n  },\n  addedClasses: {\n    position: 'absolute',\n    right: 3,\n    top: 3,\n    padding: 7,\n    margin: 5,\n    backgroundColor: '#c9c9c9',\n    borderRadius: 100,\n  },\n  item: {\n    marginBottom: 10,\n    marginTop: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  buttonContainer: {\n    right: 0,\n    position: 'absolute',\n    width: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  button: {\n    padding: 5,\n    borderColor: 'grey',\n  },\n  dropDown: {\n    backgroundColor: '#f7f7f7',\n    paddingLeft: 30,\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  dropDownItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 54,\n  },\n  isAvailable: {\n    color: 'green',\n  },\n  notAvailable: {\n    color: 'red',\n  },\n  loadingMessage: {\n    fontSize: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontStyle: 'italic',\n  },\n  loadingMessageRefresh: {\n    fontSize: 15,\n    paddingTop: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontWeight: 'bold',\n  },\n  filters: {\n    backgroundColor: 'white',\n    alignItems: 'center',\n    padding: 10,\n  },\n});\n","import { Layout, Text } from '@ui-kitten/components';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  LayoutAnimation,\n  UIManager,\n  Platform,\n  Animated,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { useEffect, useMemo, useRef, useState } from 'react';\nimport useTraceUpdate from '../../hooks/useTraceUpdate';\nimport ClassListItemItem from './ClassListItemItem';\n\nif (\n  Platform.OS === 'android' &&\n  UIManager.setLayoutAnimationEnabledExperimental\n) {\n  UIManager.setLayoutAnimationEnabledExperimental(true);\n}\n\nexport default function Item({\n  courseName,\n  masterCourseCode,\n  schedule,\n  menuOpen,\n  setIsMenuOpen,\n  darkMode,\n  handleClassSelected,\n  handleAddClass,\n  handleRemoveClass,\n  inItem,\n}) {\n  \n\n  const memoizedItem = useMemo(() => {\n    return (\n      <Layout\n        style={{\n          borderRadius: 20,\n          opacity: 1,\n          marginTop: 7,\n          marginRight: 9,\n          marginLeft: 9,\n        }}>\n        {/* Name and master coursecode */}\n        <Layout style={{ marginHorizontal: 20 }}>\n          <Layout style={{ height: 67 }}>\n            <TouchableOpacity\n              onPress={() => {\n                handleClassSelected(masterCourseCode);\n              }}>\n              <Layout style={styles.item}>\n                <Text style={styles.title}>{courseName}</Text>\n                <Text>{masterCourseCode}</Text>\n              </Layout>\n            </TouchableOpacity>\n\n            {/* Dropdown Menu Toggle */}\n            <TouchableOpacity\n              style={styles.buttonContainer}\n              onPress={() => {\n                if (menuOpen === masterCourseCode) {\n                  setIsMenuOpen('');\n                  LayoutAnimation.configureNext({\n                    duration: 730,\n                    create: { type: 'easeInEaseOut', property: 'opacity' },\n                    update: { type: 'spring', springDamping: 0.8 },\n                  });\n                } else {\n                  setIsMenuOpen(masterCourseCode);\n                  LayoutAnimation.configureNext({\n                    duration: Platform.OS === \"android\" ? 500 : 730,\n                    create: { type: 'easeInEaseOut', property: 'opacity' },\n                    update: { type: 'spring', springDamping: 0.8 },\n                  });\n                }\n              }}>\n              <Layout style={styles.button}>\n                <FontAwesome5\n                  name={\n                    menuOpen === masterCourseCode\n                      ? 'chevron-up'\n                      : 'chevron-down'\n                  }\n                  size={20}\n                  color={darkMode ? 'white' : 'black'}\n                />\n              </Layout>\n            </TouchableOpacity>\n          </Layout>\n\n          {/* Dropdown Menu */}\n          {menuOpen === masterCourseCode && (\n            <Layout>\n              {schedule.map(\n                ({ _id, courseCode, seatsAvailable, seatsFilled, added }) => (\n                  <ClassListItemItem\n                    key={_id}\n                    courseCode={courseCode}\n                    seatsAvailable={seatsAvailable}\n                    seatsFilled={seatsFilled}\n                    handleAddClass={handleAddClass}\n                    handleRemoveClass={handleRemoveClass}\n                    darkMode={darkMode}\n                    added={added}\n                    masterCourseCode={masterCourseCode}\n                  />\n                )\n              )}\n            </Layout>\n          )}\n        </Layout>\n      </Layout>\n    );\n  }, [menuOpen, inItem, darkMode]);\n\n  // useTraceUpdate(memoizedItem);\n  return memoizedItem;\n}\n\nconst styles = StyleSheet.create({\n  list__container: {\n    margin: 10,\n    marginLeft: 0,\n    height: '90%',\n    width: '100%',\n  },\n  addedClassesContainer: {\n    position: 'absolute',\n    zIndex: 1,\n    width: '60%',\n    borderTopRightRadius: 20,\n    borderBottomRightRadius: 20,\n    borderColor: '#c2c2c2',\n    backgroundColor: '#f7f7f7',\n    paddingTop: 5,\n    borderTopWidth: 1.5,\n    borderBottomWidth: 1.5,\n    borderRightWidth: 1.5,\n  },\n  addedClasses: {\n    position: 'absolute',\n    right: 3,\n    top: 3,\n    padding: 7,\n    margin: 5,\n    backgroundColor: '#c9c9c9',\n    borderRadius: 100,\n  },\n  item: {\n    marginBottom: 10,\n    marginTop: 10,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 5,\n  },\n  buttonContainer: {\n    right: 0,\n    position: 'absolute',\n    width: 50,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n  },\n  button: {\n    padding: 5,\n    borderColor: 'grey',\n  },\n  dropDown: {\n    backgroundColor: '#f7f7f7',\n    paddingLeft: 30,\n    paddingBottom: 10,\n    paddingTop: 10,\n  },\n  dropDownItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    height: 54,\n  },\n  isAvailable: {\n    color: 'green',\n  },\n  notAvailable: {\n    color: 'red',\n  },\n  loadingMessage: {\n    fontSize: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontStyle: 'italic',\n  },\n  loadingMessageRefresh: {\n    fontSize: 15,\n    paddingTop: 20,\n    color: 'white',\n    alignSelf: 'center',\n    fontWeight: 'bold',\n  },\n  addClassButton: {\n    padding: 15,\n  },\n  filters: {\n    backgroundColor: 'white',\n    alignItems: 'center',\n    padding: 10,\n  },\n});\n","import { Divider, Layout, Text, useTheme } from '@ui-kitten/components';\nimport { Entypo } from '@expo/vector-icons';\nimport { FlatList, TouchableOpacity } from 'react-native';\n\ntype AddedClassesProps = {\n  setAddedClassesVisible: (visible: boolean) => void;\n  addedClasses: { [masterCourseCode: string]: string[] };\n  handleRemoveClass: (courseCode: string, masterCourseCode: string) => void;\n  darkMode: boolean;\n};\n\nexport default function AddedClasses({\n  addedClasses,\n  handleRemoveClass,\n  darkMode,\n}: AddedClassesProps) {\n  const theme = useTheme();\n\n  let classes = [];\n  Object.entries(addedClasses).forEach(([masterCourseCode, courseCodes]) => {\n    courseCodes.forEach((courseCode) => {\n      classes.push([masterCourseCode, courseCode]);\n    });\n  });\n\n  const renderItem = ({ item }) => {\n    const [masterCourseCode, courseCode] = item;\n    return (\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          paddingVertical: 7,\n          backgroundColor: darkMode\n            ? theme['color-basic-900']\n            : theme['color-basic-100'],\n        }}>\n        <Text style={{ fontSize: 18 }}>{courseCode}</Text>\n\n        <TouchableOpacity\n          onPress={() => handleRemoveClass(courseCode, masterCourseCode)}>\n          <Entypo name=\"cross\" size={28} color={'red'} />\n        </TouchableOpacity>\n      </Layout>\n    );\n  };\n\n  return (\n    <Layout\n      style={{\n        flex: 1,\n        paddingBottom: 10,\n        backgroundColor: darkMode\n          ? theme['color-basic-900']\n          : theme['color-basic-100'],\n      }}>\n      <FlatList\n        contentContainerStyle={{ width: 300 }}\n        ListEmptyComponent={\n          <Text>\n            No classes yet... Click the{' '}\n            <Text style={{ fontWeight: 'bold' }}>+</Text> next to a class to see\n            it here\n          </Text>\n        }\n        ItemSeparatorComponent={() => <Divider />}\n        data={classes}\n        renderItem={renderItem}\n      />\n    </Layout>\n  );\n}\n","import {\n  Button,\n  CheckBox,\n  Divider,\n  Layout,\n  Text,\n  Toggle,\n  useTheme,\n} from '@ui-kitten/components';\nimport { useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { classPagesSlice, filtersReset, filtersSaved } from './classPagesSlice';\n\nexport default function FilterClasses({ darkMode, setFiltersMenuVisible }) {\n  const theme = useTheme();\n  const initialFilters = classPagesSlice.getInitialState().filters;\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\n\n  const [isHMC, setIsHMC] = useState(filters.isHMC);\n  const [colleges, setColleges] = useState(filters.colleges);\n\n  const dispatch = useAppDispatch();\n\n  const onChangeIsHMC = (change: boolean) => {\n    setIsHMC(change);\n  };\n\n  const onChangeFilterCollege = (college: string, change: boolean) => {\n    setColleges({ ...colleges, [college]: change });\n  };\n\n  const resetFilters = () => {\n    setIsHMC(initialFilters.isHMC);\n    setColleges(initialFilters.colleges);\n    dispatch(filtersReset());\n  };\n\n  const saveFilters = () => {\n    dispatch(filtersSaved({ isHMC, colleges }));\n    setFiltersMenuVisible(false);\n  };\n\n  return (\n    <Layout\n      style={{\n        backgroundColor: darkMode\n          ? theme['color-basic-900']\n          : theme['color-basic-100'],\n        alignItems: 'center',\n        padding: 10,\n      }}>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginBottom: 10,\n          backgroundColor: darkMode\n            ? theme['color-basic-900']\n            : theme['color-basic-100'],\n        }}>\n        <Text>4C Credits </Text>\n        <Toggle\n          checked={isHMC}\n          onChange={(change) => {\n            onChangeIsHMC(change);\n          }}\n        />\n        <Text> HMC Credits</Text>\n      </Layout>\n      <Divider />\n      <Text style={{ marginVertical: 5 }}>Colleges</Text>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}>\n        {Object.keys(colleges).map((college) => (\n          <CheckBox\n            style={{\n              backgroundColor: darkMode\n                ? theme['color-basic-900']\n                : theme['color-basic-100'],\n            }}\n            key={college}\n            checked={colleges[college]}\n            onChange={(change) => {\n              onChangeFilterCollege(college, change);\n            }}>\n            {college}\n          </CheckBox>\n        ))}\n      </Layout>\n      {/* <Layout style={{ width: '100%' }}>\n        <Text style={{ marginVertical: 5 }}>Semester</Text>\n        <Select\n          placeholder=\"Semester\"\n          value={Object.keys(semesterSelectVals)[semsesterSelectIndex.row]}\n          selectedIndex={semsesterSelectIndex}\n          onSelect={(index) => setSemesterSelectedIndex(index)}>\n          {Object.keys(semesterSelectVals).map((option, i) => (\n            <SelectItem\n              key={i}\n              disabled={semesterSelectVals[option].disabled}\n              title={option}\n            />\n          ))}\n        </Select>\n      </Layout> */}\n      <Button style={{ marginTop: 20 }} onPress={saveFilters}>\n        Update Results\n      </Button>\n      <Button\n        size=\"small\"\n        style={{ marginTop: 20 }}\n        status=\"info\"\n        onPress={resetFilters}>\n        Reset Filters\n      </Button>\n    </Layout>\n  );\n}\n","import {\n  Button,\n  Layout,\n  List,\n  Spinner,\n  Text,\n  useTheme,\n} from '@ui-kitten/components';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useEffect, useRef, useState } from 'react';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport BottomSheet from '@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet';\nimport { Platform, RefreshControl, TouchableOpacity } from 'react-native';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport Message from '../../components/Message';\nimport SearchBar from '../../components/SearchBar';\nimport {\n  useAddClassMutation,\n  useRemoveClassMutation,\n  useGetCurrentSectionQuery,\n  useLazyGetAllClassesQuery,\n} from '../api/classPagesApi';\nimport { useGetUserInfoQuery, useLazyGetUserInfoQuery } from '../api/usersApi';\nimport {\n  classSelected,\n  endOfListReached,\n  resetClasses,\n  searchTermUpdated,\n  selectClassesList,\n} from './classPagesSlice';\nimport Item from './ClassListItem';\nimport { RENDERED_RESULTS_LIMIT } from '../../constants/classPages';\nimport SingleClassPage from './SingleClassPage';\nimport AddedClasses from './AddedClasses';\nimport FilterClasses from './FilterClasses';\nimport ModalContainer from '../../components/ModalContainer';\n\nexport default function ClassesList({ navigation }) {\n  const [menuOpen, setMenuOpen] = useState(null);\n  const [addedClassesVisible, setAddedClassesVisible] = useState(false);\n  const [filtersMenuVisible, setFiltersMenuVisible] = useState(false);\n  const [listRef, setListRef] = useState(null);\n\n  const [addClass] = useAddClassMutation();\n  const [removeClass] = useRemoveClassMutation();\n  const [fetchUserInfo] = useLazyGetUserInfoQuery();\n  const [getClasses, { isLoading: classListLoading, isError }] =\n    useLazyGetAllClassesQuery();\n  const { data: currentSection, isLoading: isCurrentSectionLoading } =\n    useGetCurrentSectionQuery();\n\n  // Selectors\n  const filters = useAppSelector((state) => state.appData.classPages.filters);\n  const classes = useAppSelector(selectClassesList);\n  const userKey = useAppSelector(selectUserKey);\n  const page = useAppSelector((state) => state.appData.classPages.page);\n  const darkMode = useAppSelector(selectDarkMode);\n  const searchTerm = useAppSelector(\n    (state) => state.appData.classPages.searchTerm\n  );\n  const renderedClasses = useAppSelector(\n    (state) => state.appData.classPages.renderedClasses\n  );\n  const selectedClass = useAppSelector(\n    (state) => state.appData.classPages.selectedClass\n  );\n\n  const { data: userData, isSuccess: userInfoSuccess } = useGetUserInfoQuery(\n    userKey,\n    {\n      skip: !userKey,\n    }\n  );\n  const collegeName = userData?.collegeName || 'claremontColleges';\n\n  const userName = userData?.userName;\n  const addedClasses = userData?.addedClasses?.classes;\n  const length = userData?.addedClasses?.length;\n\n  // Other Hooks\n  const theme = useTheme();\n  const dispatch = useAppDispatch();\n  const bottomSheetRef = useRef<BottomSheet>(null);\n\n  useEffect(() => {\n    fetchClasses();\n  }, []);\n\n  const fetchClasses = () => {\n    if (Object.keys(classes).length === 0) {\n      try {\n        getClasses({ userKey, collegeName }).unwrap();\n      } catch (e) {\n        console.warn('Error getting classes: ', e);\n      }\n    } else {\n      dispatch(resetClasses());\n    }\n  };\n\n  const handleRefresh = () => {\n    fetchUserInfo(userKey);\n    fetchClasses();\n  };\n\n  const handleSearch = (searchPhrase: string) => {\n    if (listRef) {\n      listRef.scrollToOffset({ animated: true, offset: 0 });\n    }\n    dispatch(searchTermUpdated(searchPhrase));\n  };\n\n  const handleClassSelected = (courseCode: string) => {\n    dispatch(classSelected(courseCode));\n    if (Platform.OS === 'web') {\n      navigation.navigate('SingleClassPage');\n    } else {\n      bottomSheetRef.current?.snapToIndex(0);\n    }\n  };\n\n  const handleAddClass = (courseCode: string, masterCourseCode: string) => {\n    if (isCurrentSectionLoading) {\n      return;\n    }\n    try {\n      addClass({\n        userKey,\n        courseCode,\n        courseTerm: currentSection,\n        userName,\n        masterCourseCode,\n      }).unwrap();\n    } catch (e) {\n      console.warn('Add class error: ', e);\n    }\n  };\n\n  const handleRemoveClass = (courseCode: string, masterCourseCode: string) => {\n    if (isCurrentSectionLoading) {\n      return;\n    }\n    try {\n      removeClass({\n        userKey,\n        courseCode,\n        courseTerm: currentSection,\n        userName,\n        masterCourseCode,\n      }).unwrap();\n    } catch (e) {\n      console.warn('Add class error: ', e);\n    }\n  };\n\n  const renderItem = ({ item: [masterCourseCode, courseInfo] }) => {\n    // check if course is in addedClasses set and set to true if it is\n    let inItem = [];\n    const schedule = courseInfo.times.map((time) => {\n      if (\n        currentSection in addedClasses &&\n        masterCourseCode in addedClasses[currentSection] &&\n        addedClasses[currentSection][masterCourseCode].includes(time.courseCode)\n      ) {\n        inItem.push(time.courseCode);\n        return { ...time, added: true };\n      } else {\n        inItem.push(time.courseCode);\n        return { ...time, added: false };\n      }\n    });\n\n    return (\n      <Item\n        courseName={courseInfo.courseName}\n        masterCourseCode={masterCourseCode}\n        schedule={schedule}\n        menuOpen={menuOpen}\n        setIsMenuOpen={setMenuOpen}\n        darkMode={darkMode}\n        handleClassSelected={handleClassSelected}\n        handleAddClass={handleAddClass}\n        handleRemoveClass={handleRemoveClass}\n        inItem={inItem}\n      />\n    );\n  };\n\n  const accessoryLeft = (\n    <Layout style={{ flexDirection: 'row', backgroundColor: 'transparent' }}>\n      <TouchableOpacity\n        onPress={() => setAddedClassesVisible(!addedClassesVisible)}\n        style={{ justifyContent: 'center', marginRight: 10 }}>\n        <FontAwesome5\n          name=\"list-ul\"\n          size={24}\n          color={darkMode ? theme['color-basic-500'] : theme['color-basic-200']}\n        />\n        {length > 0 ? (\n          <Layout\n            style={{\n              position: 'absolute',\n              backgroundColor: darkMode ? 'red' : '#fff',\n              borderRadius: 10,\n              paddingHorizontal: 3,\n              right: -7,\n              top: -3,\n            }}>\n            <Text>{length}</Text>\n          </Layout>\n        ) : null}\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={{ justifyContent: 'center', marginRight: 10 }}\n        onPress={() => setFiltersMenuVisible(!filtersMenuVisible)}>\n        <FontAwesome5\n          name={filtersMenuVisible ? 'chevron-up' : 'chevron-down'}\n          size={24}\n          color={darkMode ? theme['color-basic-500'] : theme['color-basic-200']}\n        />\n      </TouchableOpacity>\n    </Layout>\n  );\n\n  const renderFilteredCollegesList = () => {\n    const filteredColleges = Object.keys(filters.colleges).filter(\n      (c) => filters.colleges[c]\n    );\n\n    if (filteredColleges.length < 5) {\n      return (\n        <Text\n          category=\"label\"\n          style={{ fontStyle: 'italic', marginTop: 5, color: '#fff' }}>\n          {`Colleges: ${filteredColleges.join(', ')}`}\n        </Text>\n      );\n    } else {\n      return (\n        <Layout style={{ backgroundColor: 'transparent', marginTop: 20 }} />\n      );\n    }\n  };\n\n  // Decide what content to render\n  let content: keyof JSX.IntrinsicElements | JSX.Element;\n\n  if (classListLoading || isCurrentSectionLoading || !userInfoSuccess) {\n    content = <Message title=\"Loading Classes\" item={<Spinner />} />;\n  } else if (isError) {\n    content = (\n      <Message\n        title=\"Error Loading Classes\"\n        item={<Button onPress={fetchClasses}>Refresh</Button>}\n      />\n    );\n  } else {\n    content = (\n      <List\n        style={{ backgroundColor: 'transparent' }}\n        data={Object.entries(renderedClasses).slice(\n          0,\n          RENDERED_RESULTS_LIMIT * page\n        )}\n        renderItem={renderItem}\n        keyExtractor={([courseCode, _]) => courseCode}\n        maxToRenderPerBatch={10}\n        ListEmptyComponent={\n          <Message\n            title=\"No Classes Found\"\n            item={<Button onPress={fetchClasses}>Refresh</Button>}\n          />\n        }\n        initialNumToRender={10}\n        // ListHeaderComponent={() => <Layout style={{minHeight: 67, opacity: 0}}/>}\n        onEndReachedThreshold={0.5}\n        onEndReached={() => dispatch(endOfListReached())}\n        refreshControl={\n          <RefreshControl\n            refreshing={classListLoading}\n            onRefresh={handleRefresh}\n            title=\"Pull to refresh\"\n            tintColor={theme['color-basic-100']}\n            titleColor={theme['color-basic-100']}\n          />\n        }\n        ref={(ref) => {\n          setListRef(ref);\n        }}\n      />\n    );\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <LinearGradient\n        colors={\n          darkMode\n            ? [theme['color-basic-1100'], theme['color-basic-1100']]\n            : [theme['color-primary-500'], theme['color-success-500']]\n        }\n        style={{ width: '100%', margin: 0, flex: 1 }}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 0.4 }}>\n        <LinearGradient\n          colors={[\n            // 'rgba(219,76,113,1)',\n            // 'rgba(219,76,113,00)',\n\n            'rgba(225,78,106,0)',\n            'rgba(225,78,106,0)',\n            // 'rgba(225,78,106,.6)',\n            // 'rgba(225,78,106,0)',\n          ]}\n          locations={[0, 1]}\n          style={{\n            zIndex: 1,\n            width: '100%',\n            paddingHorizontal: 20,\n            paddingTop: 20,\n          }}>\n          <SearchBar\n            accessoryLeft={accessoryLeft}\n            searchTerm={searchTerm}\n            onChangeText={handleSearch}\n            inputProps={{ autoCorrect: false }}\n            placeholder=\"Search classes...\"\n          />\n          {renderFilteredCollegesList()}\n        </LinearGradient>\n\n        {content}\n      </LinearGradient>\n\n      <ModalContainer\n        setBackDropVisible={setAddedClassesVisible}\n        backDropVisible={addedClassesVisible}\n        title=\"Added Classes\">\n        {addedClasses && currentSection ? (\n          <AddedClasses\n            setAddedClassesVisible={setAddedClassesVisible}\n            addedClasses={addedClasses[currentSection] || {}}\n            handleRemoveClass={handleRemoveClass}\n            darkMode={darkMode}\n          />\n        ) : (\n          <Layout\n            style={{\n              flex: 1,\n              alignItems: 'center',\n              borderRadius: 20,\n              paddingTop: 50,\n            }}>\n            <Text>Loading</Text>\n            <Spinner />\n          </Layout>\n        )}\n      </ModalContainer>\n\n      <ModalContainer\n        setBackDropVisible={setFiltersMenuVisible}\n        backDropVisible={filtersMenuVisible}\n        title=\"Filters\">\n        <FilterClasses\n          setFiltersMenuVisible={setFiltersMenuVisible}\n          darkMode={darkMode}\n        />\n      </ModalContainer>\n      {Platform.OS !== 'web' && (\n        <SingleClassPage bottomSheetRef={bottomSheetRef} />\n      )}\n    </Layout>\n  );\n}\n","import { ScrollView, View, Text } from 'react-native';\nimport React from 'react';\nimport { Button, useTheme } from '@ui-kitten/components';\nimport { Feather } from '@expo/vector-icons';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nexport default function Menu({ menuItems, setMenuItems }) {\n  const theme = useTheme();\n\n  return (\n    <View style={{ marginVertical: 10 }}>\n      <ScrollView\n        showsHorizontalScrollIndicator={false}\n        horizontal={true}\n        style={{ flexDirection: 'row' }}>\n        {Object.entries(menuItems).map(([name, value]: any[], index) => {\n          if (!value.selected) {\n            return (\n              <Button\n                onPress={() => {\n                  setMenuItems({\n                    ...menuItems,\n                    [name]: { selected: !value.selected },\n                  });\n                }}\n                status={value.selected ? 'info' : 'primary'}\n                style={{\n                  height: 45,\n                  marginHorizontal: 10,\n                  borderRadius: 20,\n                  backgroundColor: `rgba(${theme['color-success-500']}, ${1 - 0.03 * index})`,\n                  borderColor: `rgba(${theme['color-success-500']}, ${1 - 0.03 * index})`,\n                }}\n                key={index}>\n                <View\n                  style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <Text style={{ color: 'white' }}>\n                    {name}\n                    {value.selected && (\n                      <Text>\n                        {`    `}\n                        <Feather name=\"x\" size={15} />\n                      </Text>\n                    )}\n                  </Text>\n                </View>\n              </Button>\n            );\n          }\n        })}\n      </ScrollView>\n      <ScrollView\n        showsHorizontalScrollIndicator={false}\n        horizontal={true}\n        style={{ flexDirection: 'row', marginTop: 3, marginLeft: 8 }}>\n        {Object.entries(menuItems).map(([name, value] : any[], index) => {\n          if (value.selected) {\n            return (\n              <Button\n                accessoryRight={\n                  <FontAwesome5 name=\"times\" size={14} color=\"white\" />\n                }\n                onPress={() => {\n                  setMenuItems({\n                    ...menuItems,\n                    [name]: { selected: !value.selected },\n                  });\n                }}\n                style={{\n                  height: 45,\n                  marginHorizontal: 2,\n                  borderRadius: 20,\n                  backgroundColor: theme['color-success-500'],\n                  borderColor: theme['color-success-500'],\n                }}\n                key={index}>\n                <View\n                  style={{ alignItems: 'center', justifyContent: 'center' }}>\n                  <Text style={{ color: 'white' }}>{name}</Text>\n                </View>\n              </Button>\n            );\n          }\n        })}\n      </ScrollView>\n    </View>\n  );\n}\n","import { apiSlice } from './apiSlice';\n\nexport const sponsorsApiSlice = apiSlice.injectEndpoints({\n  overrideExisting: true,\n  endpoints: (builder) => ({\n    refreshSponsors: builder.query({\n      query: (userKey) => ({\n        url: '/sponsors',\n        headers: {\n          userKey,\n        },\n      }),\n      transformResponse: (sponsors: any[]) => {\n        sponsors = sponsors.sort(function (a, b) {\n          const textA = a.sponsorName.toUpperCase();\n          const textB = b.sponsorName.toUpperCase();\n          return textA < textB ? 1 : textA > textB ? -1 : 0;\n        });\n\n        return [\n          sponsors.find((sponsor) => sponsor.sponsorName === \"Big Mo's\"),\n          ...sponsors.filter((sponsor) => sponsor.sponsorName !== \"Big Mo's\"),\n        ];\n      },\n    }),\n    postSponsorVisit: builder.mutation({\n      query: ({ userKey, sponsorId }) => ({\n        url: '/analytics/sponsor/ping',\n        method: 'POST',\n        headers: {\n          userKey,\n        },\n        body: {\n          sponsorId,\n        },\n        responseHandler: (response) => response.text(),\n      }),\n    }),\n  }),\n});\n\nexport const { useLazyRefreshSponsorsQuery, usePostSponsorVisitMutation } =\n  sponsorsApiSlice;\n","import React, { useEffect, useState } from 'react';\nimport {\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  SafeAreaView,\n  ScrollView,\n  Linking,\n  View,\n  Text,\n  Platform,\n} from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nimport _ from 'lodash';\nimport { useAppSelector } from '../../app/hooks';\nimport { selectDarkMode, selectUserKey } from '../../app/appDataSlice';\nimport Menu from '../../components/Menu';\nimport {\n  useLazyRefreshSponsorsQuery,\n  usePostSponsorVisitMutation,\n} from '../api/sponsorsApi';\nimport { Layout } from '@ui-kitten/components';\n\nexport const SponsorPage = ({\n  route: {\n    params: { data },\n  },\n}) => {\n  const isDarkMode = useAppSelector(selectDarkMode);\n  const sponsorPageStyles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    header: {\n      marginTop: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      width: '100%',\n    },\n    address: {\n      color: isDarkMode ? 'white' : 'black',\n      alignItems: 'center',\n      margin: 10,\n      borderColor: 'black',\n      borderWidth: 1,\n      padding: 10,\n    },\n    video: {\n      marginTop: 20,\n      display: 'flex',\n      justifyContent: 'flex-start',\n    },\n    title: {\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 26,\n      marginLeft: 10,\n    },\n    subtitle: {\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 14,\n      justifyContent: 'center',\n    },\n    logo: {\n      width: '100%',\n      height: 100,\n    },\n    description: {\n      borderWidth: 1,\n      margin: 10,\n      borderColor: '#F1E4B5',\n      borderRadius: 5,\n      width: '95%',\n      padding: 10,\n      //backgroundColor: '#F9F9F9',\n    },\n    couponContainer: {\n      width: '100%',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginTop: 20,\n      marginBottom: 20,\n    },\n    coupon: {\n      width: 400,\n      height: 267,\n    },\n    imageGallery: {\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n      margin: 10,\n      marginBottom: 0,\n    },\n    imageStyle: {\n      width: 150,\n      height: 150,\n      paddingTop: 100,\n      margin: 5,\n    },\n    headerText: {\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 20,\n      fontWeight: 'bold',\n    },\n  });\n  const [imageIndex, setImageIndex] = useState(0);\n  const [visible, setIsVisible] = useState(false);\n  const [canOpenLink, setCanOpenLink] = useState(false);\n\n  const [postSponsorVisitQuery] = usePostSponsorVisitMutation();\n\n  const userKey = useAppSelector(selectUserKey);\n\n  const videoLinkArray = data.videoLink && data.videoLink.split('/');\n  const videoLink = data.videoLink && videoLinkArray[videoLinkArray.length - 1];\n\n  function getSubtitle() {\n    if (data.phoneNumber && data.email) {\n      return data.phoneNumber + ' \\u2022 ' + data.email;\n    } else if (data.phoneNumber) {\n      return data.phoneNumber;\n    } else if (data.email) {\n      return data.email;\n    } else {\n      return null;\n    }\n  }\n\n  const postSponsorVisit = async () => {\n    try {\n      await postSponsorVisitQuery({ userKey, sponsorId: data._id }).unwrap();\n    } catch (e) {\n      console.warn('Error posting sponsor visit: ', e);\n    }\n  };\n\n  useEffect(() => {\n    const funct = async () => {\n      setCanOpenLink(await Linking.canOpenURL(data.website));\n      postSponsorVisit();\n    };\n    funct();\n  }, []);\n\n  function renderWebsiteLink() {\n    if (canOpenLink) {\n      return (\n        <View>\n          <TouchableOpacity\n            onPress={() => {\n              Linking.openURL(data.website);\n            }}\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n            }}>\n            <Text\n              style={{\n                fontSize: 15,\n                color: isDarkMode ? '#6b7ee5' : '#4b5dc7',\n                paddingRight: 5,\n              }}>\n              Check Out Our Website!\n            </Text>\n            <FontAwesome5 name=\"link\" size={15} color=\"#4b5dc7\" />\n          </TouchableOpacity>\n        </View>\n      );\n    } else {\n      return null;\n    }\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <ScrollView>\n        <Layout style={sponsorPageStyles.container}>\n          <View style={sponsorPageStyles.header}>\n            <Image\n              resizeMode=\"contain\"\n              style={sponsorPageStyles.logo}\n              source={{ uri: data.logo }}\n            />\n          </View>\n          <View\n            style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\n            <Text style={sponsorPageStyles.title}>{data.sponsorName}</Text>\n            <Text style={sponsorPageStyles.subtitle}>{getSubtitle()}</Text>\n          </View>\n\n          {data.location && (\n            <View style={sponsorPageStyles.address}>\n              <Text\n                style={{ fontSize: 18, color: isDarkMode ? 'white' : 'black' }}>\n                {data.location}\n              </Text>\n            </View>\n          )}\n\n          <View\n            style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\n            {renderWebsiteLink()}\n          </View>\n\n        \n\n          <Layout style={sponsorPageStyles.description}>\n            <Text\n              style={{ fontSize: 17, color: isDarkMode ? 'white' : 'black' }}>\n              {data.description}\n            </Text>\n          </Layout>\n          <View\n            style={{\n              width: '100%',\n              alignSelf: 'flex-start',\n              marginLeft: 20,\n              borderBottomColor: '#F1E4B5',\n              borderBottomWidth: 2,\n              paddingBottom: 5,\n            }}>\n            <Text style={sponsorPageStyles.headerText}>Image Gallery</Text>\n          </View>\n\n          <View style={sponsorPageStyles.imageGallery}>\n            {data.images.map((img, index) => {\n              return (\n                <TouchableOpacity\n                  onPress={() => {\n                    setImageIndex(index);\n                    setIsVisible(true);\n                  }}>\n                  <Image\n                    style={sponsorPageStyles.imageStyle}\n                    source={{ uri: img }}\n                  />\n                </TouchableOpacity>\n              );\n            })}\n          </View>\n\n          {data.coupons[0] && (\n            <Layout style={sponsorPageStyles.couponContainer}>\n              <Image\n                resizeMode={'contain'}\n                source={require('../../../assets/sponsorPage/coupon.jpg')}\n                style={sponsorPageStyles.coupon}\n              />\n              <Text\n                style={{\n                  position: 'absolute',\n                  fontSize: 30,\n                  textAlign: 'center',\n                  justifyContent: 'center',\n                  width: '75%',\n                  paddingBottom: 20,\n                  paddingRight: 7,\n                }}>\n                {data.coupons[0].couponDescription}\n              </Text>\n              <Text\n                style={{ fontSize: 15, color: isDarkMode ? 'white' : 'black' }}>\n                Show this coupon at the store to redeem.\n              </Text>\n            </Layout>\n          )}\n\n          <View\n            style={{\n              width: '100%',\n              alignSelf: 'flex-start',\n              marginLeft: 20,\n              borderBottomColor: '#F1E4B5',\n              borderBottomWidth: 2,\n              paddingBottom: 5,\n            }}>\n            <Text style={sponsorPageStyles.headerText}>Hours</Text>\n          </View>\n          <View\n            style={{\n              alignSelf: 'flex-start',\n              marginLeft: 25,\n              marginBottom: 50,\n            }}>\n            {data.hours.map((day, i) => {\n              return (\n                <Layout\n                  key={i}\n                  style={{\n                    justifyContent: 'space-between',\n                    flexDirection: 'row',\n                    width: '100%',\n                  }}>\n                  <Text\n                    style={{\n                      marginTop: 10,\n                      color: isDarkMode ? 'white' : 'black',\n                    }}>\n                    {day.dayOfTheWeek}:\n                  </Text>\n                  <Text\n                    style={{\n                      alignSelf: 'flex-end',\n                      paddingRight: 30,\n                      marginTop: 10,\n                      color: isDarkMode ? 'white' : 'black',\n                    }}>\n                    {buildTimeString(day)}\n                  </Text>\n                </Layout>\n              );\n            })}\n          </View>\n        </Layout>\n      </ScrollView>\n    </Layout>\n  );\n};\n\nfunction buildTimeString(time) {\n  if (!time.openTime || time.openTime === '' || time.openTime === null) {\n    return 'closed';\n  }\n  return (\n    convertTo12HourTime(time.openTime) +\n    ' - ' +\n    convertTo12HourTime(time.closeTime)\n  );\n}\n\nfunction convertTo12HourTime(time) {\n  if (time.length !== 5) {\n    time = '0' + time;\n  }\n  let hours = time.slice(0, 2);\n  let minutes = time.slice(3, 5);\n  let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n  hours = hours % 12;\n  if (hours === 0) {\n    hours = 12;\n    ampm = 'pm';\n  }\n  return hours + ':' + minutes + ampm;\n}\n\nexport function SponsorsList({ navigation }) {\n  const isDarkMode = useAppSelector(selectDarkMode);\n  const [sponsorFilters, setSponsorFilters] = useState({});\n  const [gotSponsors, setGotSponsors] = useState(false);\n  const userKey = useAppSelector(selectUserKey);\n  const [refreshSponsorsQuery, { data: sponsors }] =\n    useLazyRefreshSponsorsQuery();\n\n  if (!gotSponsors) {\n    setGotSponsors(true);\n    refreshSponsors();\n  }\n\n  useEffect(() => {\n    if (sponsors?.length > 0) {\n      getFilters();\n    }\n  }, [sponsors]);\n\n  async function refreshSponsors() {\n    try {\n      await refreshSponsorsQuery(userKey).unwrap();\n    } catch (e) {\n      console.warn('Error refreshing sponsors: ', e);\n    }\n  }\n\n  function getFilters() {\n    let tabNames = [];\n    let final = [];\n    for (const sponsor of sponsors) {\n      if (sponsor.tags !== undefined) {\n        for (const name of sponsor.tags) {\n          if (!tabNames.includes(name)) {\n            tabNames.push(name);\n          }\n        }\n      }\n    }\n    tabNames = tabNames.sort();\n\n    // Puts 'Other' at the end\n    const temp = tabNames.includes('Other')\n      ? tabNames.findIndex((item) => item === 'Other')\n      : -1;\n    if (temp !== -1) {\n      tabNames.splice(temp, 1);\n    }\n    tabNames.push('Other');\n\n    let tempFilters = {};\n    for (const name of tabNames) {\n      tempFilters[name] = {\n        selected: false,\n      };\n    }\n    setSponsorFilters(tempFilters);\n  }\n\n  function renderSponsorsBasedOnFilters() {\n    let shouldLimitPrint = false;\n    for (const filterName in sponsorFilters) {\n      if (sponsorFilters[filterName].selected) {\n        shouldLimitPrint = true;\n        break;\n      }\n    }\n    if (!shouldLimitPrint) {\n      return getTheSponsors(sponsors || [], navigation);\n    } else {\n      let sponsorsToSend = [];\n      for (const filterName in sponsorFilters) {\n        if (sponsorFilters[filterName].selected) {\n          for (const sponsor of sponsors) {\n            if (sponsor.tags.includes(filterName)) {\n              sponsorsToSend.push(sponsor);\n            }\n          }\n        }\n      }\n      return getTheSponsors(sponsorsToSend || [], navigation);\n    }\n  }\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <Menu\n        setMenuItems={setSponsorFilters}\n        menuItems={Object.keys(sponsorFilters).length > 0}\n      />\n      <ScrollView style={{ flexDirection: 'column' }}>\n        {sponsors?.length === 0 ? (\n          <Text>Nothing to see here</Text>\n        ) : (\n          renderSponsorsBasedOnFilters()\n        )}\n      </ScrollView>\n    </Layout>\n  );\n}\n\nfunction getTheSponsors(sponsors, navigation) {\n  const isDarkMode = useAppSelector(selectDarkMode);\n  const listingStyles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n    },\n    cardContainer: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      width: '100%',\n      height: 130,\n      backgroundColor: isDarkMode ? '#464646' : '#fff',\n      borderRadius: 10,\n      borderWidth: 1,\n      borderColor: isDarkMode ? '#818181' : '#ddd',\n      borderBottomWidth: isDarkMode ? 1 : 0,\n      shadowColor: '#000',\n      shadowOffset: { width: 0, height: 2 },\n      shadowOpacity: 0.2,\n      shadowRadius: 2,\n      elevation: 1,\n      marginLeft: 5,\n      marginRight: 5,\n      marginTop: 10,\n    },\n    text: {\n      flex: 1,\n      color: isDarkMode ? 'white' : 'black',\n      fontSize: 20,\n      textAlign: 'center',\n      marginTop: 5,\n      marginBottom: 5,\n    },\n    image: {\n      width: '100%',\n      height: '100%',\n      marginLeft: 10,\n      borderRadius: 10,\n    },\n  });\n  if (sponsors.length === 0) {\n    return;\n  }\n  let final = [];\n  let starredFinal = [];\n  for (const sponsor of sponsors) {\n    if (sponsor.coupons && sponsor.coupons.length > 0) {\n      starredFinal.push(\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SponsorPage', { data: sponsor });\n          }}\n          style={listingStyles.cardContainer}\n          key={sponsor._id}>\n          {sponsor.coupons?.length ? (\n            <FontAwesome5\n              name=\"star\"\n              color={'gold'}\n              style={{\n                position: 'fixed',\n                alignSelf: 'flex-start',\n                top: 5,\n                left: 5,\n              }}\n            />\n          ) : null}\n\n          <View style={{ flex: 1 }}>\n            <Image\n              resizeMode={'contain'}\n              style={listingStyles.image}\n              source={{ uri: sponsor.logo }}\n            />\n          </View>\n\n          <Text style={listingStyles.text}>{sponsor.sponsorName}</Text>\n        </TouchableOpacity>\n      );\n    } else {\n      final.push(\n        <TouchableOpacity\n          onPress={() => {\n            navigation.navigate('SponsorPage', { data: sponsor });\n          }}\n          style={listingStyles.cardContainer}\n          key={sponsor._id}>\n          {sponsor.coupons?.length ? (\n            <FontAwesome5\n              name=\"star\"\n              color={'gold'}\n              style={{\n                position: 'absolute',\n                alignSelf: 'flex-start',\n                top: 5,\n                left: 5,\n              }}\n            />\n          ) : null}\n\n          <View style={{ flex: 1 }}>\n            <Image\n              resizeMode={'contain'}\n              style={listingStyles.image}\n              source={{ uri: sponsor.logo }}\n            />\n          </View>\n\n          <Text style={listingStyles.text}>{sponsor.sponsorName}</Text>\n        </TouchableOpacity>\n      );\n    }\n  }\n  for (const object of final) {\n    starredFinal.push(object);\n  }\n  return starredFinal;\n}\n","import { Layout } from '@ui-kitten/components';\nimport React from 'react';\n\nexport default function WrapItems({ childStyle, children, ...LayoutProps }) {\n  return (\n    <Layout {...LayoutProps}>\n      {React.Children.map(children, (child) => (\n        <Layout style={childStyle}>{child}</Layout>\n      ))}\n    </Layout>\n  );\n}\n","import { Input, Layout, Spinner, Text } from '@ui-kitten/components';\nimport { TouchableWithoutFeedback } from '@ui-kitten/components/devsupport';\nimport { useState } from 'react';\nimport {\n  Keyboard,\n  KeyboardAvoidingView,\n  Platform,\n  TouchableOpacity,\n} from 'react-native';\nimport { selectUserKey } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport WrapItems from '../../components/WrapItems';\nimport { useEditUserMutation, useGetUserInfoQuery } from '../api/usersApi';\n\nconst EditProfileHeader = ({ navigation, saveChanges }) => {\n  return (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        margin: 20,\n        marginTop: Platform.OS !== 'ios' ? 40 : 20,\n      }}>\n      <TouchableOpacity\n        onPress={() => {\n          navigation.goBack();\n        }}>\n        <Text>Cancel</Text>\n      </TouchableOpacity>\n      <Text category=\"s1\">Edit Profile</Text>\n      <TouchableOpacity onPress={saveChanges}>\n        <Text>Save</Text>\n      </TouchableOpacity>\n    </Layout>\n  );\n};\n\nexport default function EditUser({ navigation }) {\n  const userKey = useAppSelector(selectUserKey);\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey,\n  });\n\n  const inputs = [\n    {\n      placeholder: '*******',\n      label: 'password',\n      name: 'password',\n    },\n    {\n      placeholder: userData.realFirstName,\n      label: 'First Name',\n      name: 'realFirstName',\n    },\n    {\n      placeholder: userData.realLastName,\n      label: 'Last Name',\n      name: 'realLastName',\n    },\n    {\n      placeholder: userData.profileDescription,\n      label: 'Profile Description',\n      name: 'profileDescription',\n      propOptions: { multiline: true, textStyle: { minHeight: 64 } },\n    },\n    {\n      placeholder: userData.linkedin,\n      label: 'LinkedIn',\n      name: 'linkedin',\n    },\n    {\n      placeholder: userData.major,\n      label: 'Major',\n      name: 'major',\n    },\n  ];\n\n  const [fields, setFields] = useState(\n    Object.fromEntries(inputs.map((input) => [input.name, '']))\n  );\n  const [editUser, { isLoading }] = useEditUserMutation();\n\n  const saveChanges = async () => {\n    const changedFields = Object.entries(fields).filter(\n      ([_, value]) => value !== ''\n    );\n\n    try {\n      if (changedFields.length > 0) {\n        await editUser({\n          userKey,\n          userName: userData.userName,\n          fields: Object.fromEntries(changedFields),\n        }).unwrap();\n      }\n\n      navigation.goBack();\n    } catch (err) {\n      console.log('Error editing user', err);\n    }\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      {isLoading ? (\n        <Layout\n          style={{\n            flex: 1,\n            backgroundColor: 'transparent',\n            position: 'absolute',\n            top: '30%',\n            right: '50%',\n            zIndex: 1,\n          }}>\n          <Spinner size=\"medium\" />\n        </Layout>\n      ) : null}\n\n      <EditProfileHeader navigation={navigation} saveChanges={saveChanges} />\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n        <TouchableWithoutFeedback\n          style={{ flex: 1 }}\n          onPress={Keyboard.dismiss}>\n          <WrapItems\n            style={{ marginVertical: 20 }}\n            childStyle={{ marginHorizontal: 40, marginVertical: 10 }}>\n            {inputs.map(({ placeholder, label, name, propOptions }) => (\n              <Input\n                key={name}\n                placeholder={placeholder}\n                label={label}\n                onChangeText={(text) => setFields({ ...fields, [name]: text })}\n                {...propOptions}\n              />\n            ))}\n          </WrapItems>\n        </TouchableWithoutFeedback>\n      </KeyboardAvoidingView>\n    </Layout>\n  );\n}\n","import { Button, Divider, Layout, Text, Toggle } from '@ui-kitten/components';\nimport React, {useState} from 'react';\nimport Constants from 'expo-constants';\n\nimport {deviceDarkModeSet, selectDarkMode, selectIsGuest, selectUserKey} from '../../app/appDataSlice';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { reset as resetClassPages } from '../classPages/classPagesSlice';\nimport { reset as resetDiscover } from '../discover/discoverSlice';\nimport {\n  reset as resetAppData,\n  useDeviceColorSchemeSet,\n} from '../../app/appDataSlice';\nimport { apiSlice } from '../api/apiSlice';\nimport { useDeleteAccountMutation, useGetUserInfoQuery } from '../api/usersApi';\nimport WrapItems from '../../components/WrapItems';\nimport { useColorScheme } from 'react-native';\nimport ModalContainer from \"../../components/ModalContainer\";\n\nexport default function SettingsPage({ navigation }) {\n  const darkMode = useAppSelector(selectDarkMode);\n  const useDeviceColorScheme = useAppSelector(\n    (state) => state.appData.secure.useDeviceColorScheme\n  );\n  const userKey = useAppSelector(selectUserKey);\n  const isGuest = useAppSelector(selectIsGuest)\n  const colorScheme = useColorScheme()\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey,\n  });\n  const dispatch = useAppDispatch();\n  const [showGuestModal, setShowGuestModal] = useState(false)\n  const [deleteAccount, { isLoading }] = useDeleteAccountMutation();\n\n  const logOut = () => {\n    dispatch(resetClassPages());\n    dispatch(resetDiscover());\n    dispatch(resetAppData());\n    dispatch(apiSlice.util.resetApiState());\n  };\n\n  const handleDeleteAccount = async () => {\n    try {\n      await deleteAccount({ userKey, userName: userData.userName }).unwrap();\n      logOut();\n    } catch (e) {\n      console.warn('Error deleting account: ', e);\n    }\n  };\n\n  const handleUseDeviceSettingToggled = (checked: boolean) => {\n    dispatch(useDeviceColorSchemeSet(checked));\n    if (checked) {\n      dispatch(deviceDarkModeSet(colorScheme === 'dark'))\n    }\n  };\n\n  const handleDarkModeToggled = (checked: boolean) => {\n    dispatch(useDeviceColorSchemeSet(false));\n    dispatch(deviceDarkModeSet(checked));\n  };\n\n  return (\n    <Layout style={{ flex: 1 }}>\n      <Layout\n        style={{\n          flexDirection: 'row',\n          marginHorizontal: 20,\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          flex: 1,\n        }}>\n        <Layout>\n          <Text category=\"h2\">\n            {userData.realFirstName} {userData.realLastName}\n          </Text>\n          <Text category=\"h6\" status=\"success\">\n            @{userData.userName}\n          </Text>\n        </Layout>\n        <Layout>\n          <Button onPress={() => {\n              if (isGuest) {\n                  setShowGuestModal(true)\n              } else {\n                  navigation.navigate('EditUser')\n              }\n          }}>\n              Edit\n          </Button>\n        </Layout>\n      </Layout>\n        {\n            showGuestModal &&\n            <ModalContainer\n                title=\"Wait!\"\n                children={<Text style={{paddingHorizontal: 30}}>This feature is locked to our Guest Users. Please create a free account with us to take advantage this feature.</Text>}\n                backDropVisible={showGuestModal}\n                setBackDropVisible={setShowGuestModal}\n            />\n        }\n\n      <Divider />\n\n      <Layout\n        style={{\n          flex: 5,\n          justifyContent: 'space-between',\n          marginHorizontal: 20,\n        }}>\n        <Layout>\n          <Text category=\"h6\" style={{ textAlign: 'center', marginTop: 20 }}>\n            Dark Mode\n          </Text>\n          <Layout\n            style={{\n              marginTop: 20,\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n            }}>\n            <Text>Use Device Setting</Text>\n            <Toggle\n              onChange={(checked) => handleUseDeviceSettingToggled(checked)}\n              checked={useDeviceColorScheme}\n            />\n          </Layout>\n          <Layout\n            style={{\n              marginTop: 20,\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n              opacity: useDeviceColorScheme ? 0.4 : 1,\n            }}>\n            <Text>Dark Mode</Text>\n            <Toggle\n              onChange={(checked) => handleDarkModeToggled(checked)}\n              checked={darkMode}\n            />\n          </Layout>\n        </Layout>\n\n        <WrapItems\n          childStyle={{ marginVertical: 3 }}\n          style={{ alignItems: 'center', marginBottom: 10 }}>\n          <Button onPress={logOut} status=\"warning\" appearance=\"outline\">\n            Log Out\n          </Button>\n          <Button\n            onPress={handleDeleteAccount}\n            status=\"danger\"\n            appearance=\"ghost\">\n            Delete Account\n          </Button>\n          <Text>Version {Constants.manifest.version}</Text>\n        </WrapItems>\n      </Layout>\n    </Layout>\n  );\n}\n","import { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { HeaderBackButton } from '@react-navigation/elements';\n\nimport { Platform, TouchableOpacity } from 'react-native';\nimport { Text, useTheme } from '@ui-kitten/components';\nimport { selectDarkMode } from '../../app/appDataSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport EditUser from './EditUser';\nimport SettingsPage from './SettingsPage';\nimport BackButton from '../../components/BackButton';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function Settings() {\n  const theme = useTheme();\n  const darkMode = useAppSelector(selectDarkMode);\n\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerStyle: {\n          backgroundColor: darkMode ? theme['color-basic-800'] : '#fff',\n        },\n      }}>\n      <Stack.Screen\n        name=\"SettingsPage\"\n        component={SettingsPage}\n        options={({ navigation }) => ({\n          title: 'Settings',\n          headerLeft: (props) => (\n            <BackButton navigation={navigation} {...props} />\n          ),\n        })}\n      />\n      <Stack.Group screenOptions={{ presentation: 'modal' }}>\n        <Stack.Screen\n          name=\"EditUser\"\n          component={EditUser}\n          options={{ headerShown: false }}\n        />\n      </Stack.Group>\n    </Stack.Navigator>\n  );\n}\n","import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Alert,\n  Animated,\n  Dimensions,\n  Image,\n  KeyboardAvoidingView,\n  Platform,\n  RefreshControl,\n  SafeAreaView,\n  ScrollView,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View,\n} from 'react-native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport BackButton from '../../components/BackButton';\nimport {\n  IndexPath,\n  Select,\n  SelectItem,\n  Layout,\n  Text,\n  Button,\n  Input,\n  List,\n} from '@ui-kitten/components';\nimport { base_URL } from './constants';\nimport { useNavigation } from '@react-navigation/native';\nimport { FontAwesome5, FontAwesome } from '@expo/vector-icons';\nimport {useAppDispatch, useAppSelector} from '../../app/hooks';\nimport {selectDarkMode, selectIsGuest, selectUserKey} from '../../app/appDataSlice';\nimport { useGetCurrentSectionQuery } from '../api/classPagesApi';\nimport CalendarFunctions from '../calendar/CalendarFunctions';\nimport { useGetUserInfoQuery } from '../api/usersApi';\nimport {classSelected, selectClassesList} from '../classPages/classPagesSlice';\nimport renderCustomEvent from '../calendar/customEvent';\nimport renderItem from '../calendar/ScheduledItem';\nimport GestureRecognizer from 'react-native-swipe-gestures';\nimport { SwipeRow } from 'react-native-swipe-list-view';\nimport BottomSheet from \"@gorhom/bottom-sheet/lib/typescript/components/bottomSheet/BottomSheet\";\nimport ModalContainer from \"../../components/ModalContainer\";\n\nconst NotificationHomePage = createNativeStackNavigator();\n\nexport default function NotificationsNavigation({ navigation }) {\n  const [notifications, setNotifications] = useState([]);\n  const [selectedIndex, setSelectedIndex] = React.useState([]);\n  const [hasChosen, setHasChosen] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [showGuestModal, setShowGuestModal] = useState(false)\n  const [isOpen, setIsOpen] = useState(false);\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const isGuest = useAppSelector(selectIsGuest)\n\n  useEffect(() => {\n    refreshNotifications();\n    fetch(base_URL + '/users/getUserNameList', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    }).then(async (data) => {\n      if (data.ok) {\n        let newUsers = (await data.json()).map((userName) => {\n          return {\n            label: userName,\n            id: userName,\n          };\n        });\n        setUsers(newUsers);\n      }\n    });\n  }, []);\n  async function refreshNotifications() {\n    fetch(base_URL + '/users/getNotifications', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    }).then((res) => {\n      res.text().then((notifications) => {\n        notifications = JSON.parse(notifications);\n        // @ts-ignore\n        setNotifications(notifications);\n      });\n    });\n  }\n  async function sendNotification(bodyTosend) {\n    await fetch(base_URL + '/users/sendNotification', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n      body: JSON.stringify(bodyTosend),\n    });\n  }\n  function createNotificationButton() {\n    navigation.navigate('CreateNotification');\n  }\n  function clearNotifications() {\n    fetch(base_URL + '/users/clearNotifications', {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    }).then(() => {\n      refreshNotifications();\n    });\n  }\n  const navigationHeader = (navigation) => (\n    <Layout\n      style={{\n        width: '100%',\n        justifyContent: 'space-between',\n        flexDirection: 'row',\n        alignItems: 'center',\n        flex: 1,\n        backgroundColor: 'transparent',\n      }}>\n      {Platform.OS === 'ios' && <BackButton navigation={navigation} />}\n\n      <Layout\n        style={{\n          paddingBottom: 5,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          flex: 1,\n          backgroundColor: 'transparent',\n        }}>\n        {/* <Image\n          style={{\n            height: 28,\n            width: 28,\n          }}\n          source={require('../../../assets/logos/app-logo.png')}\n        /> */}\n        <Text\n          style={{\n            paddingTop: 3,\n            fontSize: 20,\n            fontWeight: '500',\n            color: darkMode ? '#fff' : '#000',\n          }}>\n          Notifications\n        </Text>\n      </Layout>\n      <Layout\n        style={{\n          alignSelf: 'flex-end',\n          paddingRight: 40,\n          paddingBottom: 10,\n          flexDirection: 'row',\n          backgroundColor: 'transparent',\n        }}>\n        <TouchableOpacity\n          onPress={() => {\n            if (isGuest) {\n              setShowGuestModal(true)\n            } else {\n              createNotificationButton();\n            }\n          }}>\n          <FontAwesome5 size={25} color={'#1E90FF'} name=\"plus\" />\n        </TouchableOpacity>\n        {\n            showGuestModal &&\n            <ModalContainer\n                title=\"Wait!\"\n                children={<Text style={{paddingHorizontal: 30}}>This feature is locked to our Guest Users. Please create a free account with us to take advantage this feature.</Text>}\n                backDropVisible={showGuestModal}\n                setBackDropVisible={setShowGuestModal}\n            />\n        }\n        <TouchableOpacity\n          style={{\n            paddingLeft: 20,\n            marginRight: Platform.OS == 'android' ? 50 : 0,\n          }}\n          onPress={() => {\n            Alert.alert(\n              'Caution',\n              'Are you sure you want to clear your notifications?\\nThis action cannot be undone.',\n              [\n                {\n                  text: 'No',\n                  style: 'cancel',\n                },\n                {\n                  text: 'Yes',\n                  onPress: async () => {\n                    clearNotifications();\n                  },\n                },\n              ]\n            );\n          }}>\n          <FontAwesome5 size={25} color={'#d71717'} name=\"times\" />\n        </TouchableOpacity>\n        {/* <TouchableOpacity\n          style={{ paddingLeft: 20 }}\n          onPress={() => {\n            refreshNotifications();\n          }}>\n          <FontAwesome size={25} color={'#1E90FF'} name=\"rotate-right\" />\n        </TouchableOpacity> */}\n      </Layout>\n    </Layout>\n  );\n  const Notifications = ({ navigation }) => {\n    const [refreshing, setRefreshing] = useState(false);\n    const [isMoving, setIsMoving] = useState(false);\n\n    const onRefresh = useCallback(() => {\n      setRefreshing(true);\n      refreshNotifications().then(() => {\n        setRefreshing(false);\n      });\n    }, []);\n    async function handleOnLeftSwipe(postId) {\n      const newNotifications = notifications.map((not) => {\n        if (not._id !== postId) {\n          return not;\n        }\n      });\n      console.log(newNotifications);\n      setNotifications(newNotifications);\n      let res = await fetch(base_URL + '/users/removeNotification', {\n        method: 'DELETE',\n        headers: {\n          'Content-Type': 'application/json',\n          userKey: userKey,\n        },\n        body: JSON.stringify({\n          id: postId,\n        }),\n        redirect: 'follow',\n      });\n      if (res.ok) {\n        refreshNotifications();\n      } else {\n        console.log(await res.json());\n      }\n      setIsOpen(false);\n      setIsMoving(false);\n    }\n\n    const renderItem = ({ item: notification }) => {\n      return (\n        <Layout>\n          {notification && (\n            // @ts-ignore\n            <SwipeRow\n              disableRightSwipe={true}\n              onSwipeValueChange={(status) => {\n                if (status.value < -Dimensions.get('window').width) {\n                  if (!isOpen) {\n                    setIsOpen(true);\n                    handleOnLeftSwipe(notification._id);\n                  }\n                } else if (status.value < -5) {\n                  setIsMoving(true);\n                } else {\n                  setIsMoving(false);\n                }\n              }}\n              rightOpenValue={-Dimensions.get('window').width}\n              useNativeDriver={true}>\n              <Layout\n                style={{\n                  alignItems: 'flex-end',\n                  justifyContent: 'center',\n                  alignSelf: 'center',\n                  width: '95%',\n                  height: 75,\n                  borderRadius: 11,\n                  backgroundColor: '#ce0f0f',\n                  marginLeft: 5,\n                  paddingRight: 20,\n                  marginRight: 5,\n                  marginTop: 10,\n                }}>\n                <Text style={{ color: '#fff' }}>Delete</Text>\n              </Layout>\n              <TouchableWithoutFeedback\n                style={{\n                  alignItems: 'center',\n                  alignSelf: 'center',\n                  width: '95%',\n                  height: 75,\n                  borderRadius: 10,\n                  marginLeft: 5,\n                  marginRight: 5,\n                  marginTop: 10,\n                }}\n                onPress={() => {\n                  navigation.navigate('SingleNotification', {\n                    data: notification,\n                  });\n                }}\n                key={notification?._id}>\n                <Layout\n                  style={{\n                    alignItems: 'center',\n                    alignSelf: 'center',\n                    width: '95%',\n                    height: 75,\n                    borderRadius: 10,\n                    backgroundColor: darkMode ? '#333333' : '#ebebeb',\n                    shadowColor: '#000',\n                    shadowOffset: { width: 0, height: 1 },\n                    shadowOpacity: 0.2,\n                    shadowRadius: 2,\n                    elevation: 1,\n                    marginLeft: 5,\n                    marginRight: 5,\n                    marginTop: 10,\n                  }}>\n                  <Text\n                    style={{\n                      paddingTop: 5,\n                      fontWeight: 'bold',\n                      fontSize: 20,\n                    }}>\n                    {notification?.title}\n                  </Text>\n                  <Text style={{}}>From: {notification?.from}</Text>\n                  {notification?.creationDate ? (\n                    <Text style={{ fontStyle: 'italic', fontSize: 12 }}>\n                      {notification?.creationDate}\n                    </Text>\n                  ) : null}\n                </Layout>\n              </TouchableWithoutFeedback>\n            </SwipeRow>\n          )}\n        </Layout>\n      );\n    };\n\n    return (\n      <Layout style={{ flex: 1 }}>\n        {notifications.length === 0 ? (\n          <Layout style={{ alignItems: 'center' }}>\n            <Text\n              style={{\n                paddingTop: '25%',\n                paddingBottom: 10,\n                textAlign: 'center',\n              }}>\n              No New Notifications\n            </Text>\n            <TouchableOpacity\n              onPress={() => {\n                refreshNotifications();\n              }}>\n              <FontAwesome size={25} color={'#1E90FF'} name=\"rotate-right\" />\n            </TouchableOpacity>\n          </Layout>\n        ) : null}\n        <List\n          style={{ backgroundColor: 'transparent' }}\n          contentContainerStyle={{ flex: 1 }}\n          data={notifications}\n          renderItem={renderItem}\n          onRefresh={refreshNotifications}\n          refreshing={refreshing}\n        />\n      </Layout>\n    );\n  };\n\n  function getDateText(text) {\n    let spaceIndex = text.indexOf(' ');\n    let first = text.substring(0, spaceIndex);\n    let second = text.substring(spaceIndex + 1);\n    return second + ' |  ' + first;\n  }\n\n  const SingleNotification = ({\n    route: {\n      params: { data },\n    },\n  }) => {\n    navigation = useNavigation();\n    const { data: currentSection } = useGetCurrentSectionQuery();\n\n    let listToRemove = [];\n    if (data.isSchedule) {\n      let jsonSchedule = JSON.parse(data.message);\n      let thereIsAtLeastOne = false;\n      for (const index in jsonSchedule) {\n        if (jsonSchedule[index].courseTerm === currentSection) {\n          thereIsAtLeastOne = true;\n        } else {\n          listToRemove.push(index);\n        }\n      }\n      for (const index of listToRemove) {\n        jsonSchedule.splice(index, 1);\n      }\n      if (!thereIsAtLeastOne) {\n        Alert.alert(\n          'This schedule is either empty or contains outdated class information'\n        );\n        navigation.goBack();\n      }\n      return thereIsAtLeastOne ? (\n        <Layout>{Calendar(jsonSchedule)}</Layout>\n      ) : null;\n    }\n    return (\n      <KeyboardAvoidingView\n        style={{ flex: 1 }}\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n        <ScrollView contentContainerStyle={{ flex: 1 }}>\n          <Layout style={sponsorPageStyles.container}>\n            <Layout\n              style={{ width: '100%', alignItems: 'center', marginTop: 20 }}>\n              <Text style={sponsorPageStyles.title}>{data.title}</Text>\n            </Layout>\n\n            {data.from && (\n              <Layout style={sponsorPageStyles.address}>\n                <Layout style={{ flexDirection: 'row' }}>\n                  <Text style={{ fontSize: 15, fontWeight: 'bold' }}>\n                    From:{' '}\n                  </Text>\n                  <Text style={{ fontSize: 15 }}>{data.from}</Text>\n                </Layout>\n                <Layout style={{ flexDirection: 'row' }}>\n                  <Text style={{ fontSize: 15 }}>\n                    {getDateText(data.creationDate)}\n                  </Text>\n                </Layout>\n              </Layout>\n            )}\n            <Layout style={sponsorPageStyles.description}>\n              <Text>{data.message}</Text>\n            </Layout>\n            {data.repliable && (\n              <TouchableOpacity\n                onPress={() => {\n                  // TODO: reply\n                }}\n                style={myStyles.button}>\n                <Text style={myStyles.text}>Reply</Text>\n              </TouchableOpacity>\n            )}\n          </Layout>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    );\n  };\n  const CreateNotification = ({ navigation }) => {\n    const [body, setBody] = useState({});\n    const [done, setDone] = useState(false);\n    function checkForDone(tempBody) {\n      if (tempBody.recipients && tempBody.title && tempBody.text) {\n        setDone(true);\n      } else {\n        setDone(false);\n      }\n    }\n\n    function renderInputFields() {\n      const changeValue = (theValue, valueToChange) => {\n        let newBody = body;\n        for (const aspect in newBody) {\n          if (\n            newBody[aspect] === null ||\n            newBody[aspect] === undefined ||\n            newBody[aspect] === ''\n          ) {\n            delete newBody[aspect];\n          }\n        }\n        if (theValue !== undefined) {\n          newBody[valueToChange] = theValue;\n        } else {\n          if (newBody[valueToChange]) {\n            delete newBody[valueToChange];\n          }\n        }\n        console.log(JSON.stringify(newBody));\n        checkForDone(newBody);\n        setBody(newBody);\n      };\n      function recipientSelector() {\n        const [selectedIndex, setSelectedIndex] = React.useState(\n          new IndexPath(0)\n        );\n        const [hasChosen, setHasChosen] = useState(false);\n\n        function currentValue() {\n          return (\n            <Text>\n              {!hasChosen ? 'Choose Recipient' : users[selectedIndex.row].label}{' '}\n            </Text>\n          );\n        }\n\n        function handleSelection(index) {\n          setSelectedIndex(index);\n          changeValue([users[index.row].id], 'recipients');\n          if (index.row === 0) {\n            setHasChosen(false);\n          } else {\n            setHasChosen(true);\n          }\n        }\n\n        function renderEachDropItem() {\n          let list = [] as JSX.Element[];\n          for (const user of users) {\n            list.push(<SelectItem title={user.label} />);\n          }\n          return list;\n        }\n\n        return (\n          <Select\n            value={currentValue}\n            selectedIndex={selectedIndex}\n            onSelect={handleSelection}>\n            {users.map((user) => (\n              <SelectItem title={user.label} />\n            ))}\n          </Select>\n        );\n      }\n      const renderHeader = () => {\n        return (\n          <Layout style={{ flexDirection: 'row' }}>\n            <Text\n              style={{\n                fontSize: 15,\n                paddingLeft: 12,\n                paddingBottom: 5,\n                paddingTop: 5,\n                alignContent: 'center',\n                fontWeight: 'bold',\n              }}>\n              Send Message\n            </Text>\n          </Layout>\n        );\n      };\n      let final = [];\n\n      final.push(\n        <Input\n          autoCapitalize={'words'}\n          onChangeText={(theValue) => changeValue(theValue, 'title')}\n          style={myStyles.input}\n          placeholderTextColor={'gray'}\n          placeholder={'Title'}\n        />\n      );\n      final.push(\n        <Input\n          autoCapitalize={'sentences'}\n          onChangeText={(theValue) => changeValue(theValue, 'text')}\n          style={myStyles.inputBig}\n          multiline={true}\n          textStyle={{ minHeight: 150 }}\n          placeholderTextColor={'gray'}\n          placeholder={'Body'}\n        />\n      );\n      final.push(recipientSelector());\n\n      return (\n        <Layout style={{ flex: 1 }}>\n          {renderHeader()}\n          {final}\n        </Layout>\n      );\n    }\n    return (\n      <SafeAreaView style={{ flex: 1 }}>\n        <KeyboardAvoidingView\n          style={{ flex: 1 }}\n          behavior={Platform.OS === 'ios' ? 'padding' : 'height'}>\n          <ScrollView contentContainerStyle={{ flex: 1 }}>\n            <Layout style={sponsorPageStyles.container}>\n              <Layout style={sponsorPageStyles.description}>\n                {renderInputFields()}\n                <Button\n                  disabled={!done}\n                  onPress={async () => {\n                    // console.log(JSON.stringify(body));\n                    await sendNotification(body);\n                    navigation.navigate('Notifications');\n                  }}>\n                  <Text style={myStyles.text}>Send Message</Text>\n                </Button>\n              </Layout>\n            </Layout>\n          </ScrollView>\n        </KeyboardAvoidingView>\n      </SafeAreaView>\n    );\n  };\n  return (\n    <NotificationHomePage.Navigator initialRouteName=\"Notifications & Messages\">\n      <NotificationHomePage.Screen\n        options={({ navigation }) => ({\n          title: 'Notifications',\n          headerTitle: () => {\n            return navigationHeader(navigation);\n          },\n        })}\n        name=\"Notifications\"\n        component={Notifications}\n      />\n      <NotificationHomePage.Screen\n        name=\"SingleNotification\"\n        component={SingleNotification}\n        options={{ headerTitle: '' }}\n      />\n      <NotificationHomePage.Screen\n        name=\"CreateNotification\"\n        component={CreateNotification}\n        options={{ headerTitle: '' }}\n      />\n    </NotificationHomePage.Navigator>\n  );\n}\n\nfunction convertTo12HourTime(time) {\n  if (time.length !== 5) {\n    time = '0' + time;\n  }\n  let hours = time.slice(0, 2);\n  let minutes = time.slice(3, 5);\n  let ampm = Number.parseInt(hours) > 12 ? 'pm' : 'am';\n  hours = hours % 12;\n  if (hours === 0) {\n    hours = 12;\n    ampm = 'pm';\n  }\n  return hours + ':' + minutes + ampm;\n}\n\nfunction getMinutesDiff(startTime, endTime) {\n  if (endTime > startTime) {\n    return (endTime - startTime) * 0.7;\n  } else if (startTime === endTime) {\n    return 0;\n  } else {\n    return (startTime - endTime) * -0.7;\n  }\n}\n\nfunction Calendar(userData) {\n  const allClassData = useAppSelector(selectClassesList);\n  const { data: currentSection, isLoading: isCurrentSectionLoading } =\n    useGetCurrentSectionQuery();\n  const darkMode: Boolean = useAppSelector(selectDarkMode);\n  const calendarFun = new CalendarFunctions();\n  const days = [\n    { day: 'Mon', id: 'Monday' },\n    { day: 'Tues', id: 'Tuesday' },\n    { day: 'Wed', id: 'Wednesday' },\n    { day: 'Thurs', id: 'Thursday' },\n    { day: 'Fri', id: 'Friday' },\n    { day: 'Sat', id: 'Saturday' },\n    { day: 'Sun', id: 'Sunday' },\n  ];\n  const times = [\n    '12:00 AM',\n    '1:00 AM',\n    '2:00 AM',\n    '3:00 AM',\n    '4:00 AM',\n    '5:00 AM',\n    '6:00 AM',\n    '7:00 AM',\n    '8:00 AM',\n    '9:00 AM',\n    '10:00 AM',\n    '11:00 AM',\n    '12:00 PM',\n    '1:00 PM',\n    '2:00 PM',\n    '3:00 PM',\n    '4:00 PM',\n    '5:00 PM',\n    '6:00 PM',\n    '7:00 PM',\n    '8:00 PM',\n    '9:00 PM',\n    '10:00 PM',\n    '11:00 PM',\n  ];\n\n  function renderDashes() {\n    let final = [];\n    for (let i = 0; i < 24; i++) {\n      final.push(\n        <Layout\n          style={{\n            width: 46,\n            marginLeft: 9,\n            top: 41.7 * i,\n            position: 'absolute',\n            height: 41.7,\n            borderBottomWidth: 0.7,\n            borderBottomColor: darkMode ? 'rgb(68,68,68)' : 'rgb(204,204,204)',\n          }}\n        />\n      );\n    }\n    return final;\n  }\n\n  const renderClasses = (elem) => {\n    let classes = [];\n    for (const course of userData) {\n      if (course.courseTerm === currentSection) {\n        let data = calendarFun.getFullClassData(\n          course.courseCode,\n          allClassData\n        );\n        let data2 = data.times.find(\n          (time) => time.courseCode === course.courseCode\n        );\n        for (const day in data2['daysOfTheWeek']) {\n          if (data2['daysOfTheWeek'][day] === elem.id) {\n            classes.push(renderItem(data, course.courseCode, () => {}));\n          }\n        }\n      }\n    }\n\n    return classes;\n  };\n\n  const topBar = useRef(null);\n\n  return (\n    <SafeAreaView\n      style={{\n        marginTop: 0,\n        marginLeft: 0,\n        paddingBottom: 15,\n        marginBottom: 20,\n      }}>\n      {/* Times */}\n      <ScrollView\n        horizontal={true}\n        snapToInterval={63}\n        showsHorizontalScrollIndicator={false}\n        style={{ marginLeft: 75 }}\n        ref={topBar}>\n        <View style={{ flexDirection: 'row' }}>\n          {days.map((elem) => {\n            return (\n              <Layout>\n                <Layout\n                  style={{\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\n                    borderBottomWidth: 1,\n                    width: '100%',\n                  }}>\n                  <Text\n                    style={{\n                      textAlign: 'center',\n                      color: darkMode ? '#7a7a7a' : '#525252',\n                      width: 63,\n                    }}>\n                    {elem.day}\n                  </Text>\n                </Layout>\n              </Layout>\n            );\n          })}\n        </View>\n      </ScrollView>\n      <ScrollView\n        contentOffset={{ x: 0, y: 292 }}\n        showsVerticalScrollIndicator={false}\n        bounces={false}>\n        <View style={{ flexDirection: 'row' }}>\n          <View\n            style={{\n              justifyContent: 'space-around',\n              height: 1000,\n            }}>\n            {times.map((time) => {\n              return (\n                <Text\n                  style={{\n                    textAlign: 'center',\n                    color: darkMode ? '#7a7a7a' : '#525252',\n                    paddingTop: '15%',\n                    height: 43,\n                    width: 75,\n                    borderWidth: 1,\n                    borderColor: darkMode ? '#7a7a7a' : '#525252',\n                  }}>\n                  {time}\n                </Text>\n              );\n            })}\n          </View>\n          {/* Classes */}\n          <ScrollView\n            horizontal={true}\n            snapToInterval={63}\n            decelerationRate={'normal'}\n            showsHorizontalScrollIndicator={false}\n            bounces={false}\n            scrollEventThrottle={1}\n            onScroll={(e) =>\n              topBar.current.scrollTo({\n                x: e.nativeEvent.contentOffset.x,\n                animated: false,\n                useNativeDriver: true,\n              })\n            }\n            onMomentumScrollBegin={(e) =>\n              topBar.current.scrollTo({\n                x: e.nativeEvent.contentOffset.x,\n                animated: false,\n                useNativeDriver: true,\n              })\n            }>\n            <View style={{ flexDirection: 'row' }}>\n              {days.map((elem) => {\n                return (\n                  <Layout>\n                    {renderDashes()}\n                    <Layout key={elem.day} style={{ width: 63 }}>\n                      {renderClasses(elem)}\n                    </Layout>\n                    <Layout\n                      style={{\n                        height: '100%',\n                        width: 1,\n                        backgroundColor: darkMode ? '#7a7a7a' : '#525252',\n                      }}\n                    />\n                  </Layout>\n                );\n              })}\n            </View>\n          </ScrollView>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst sponsorPageStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // alignItems: 'center',\n  },\n  header: {\n    marginTop: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n  },\n  address: {\n    alignItems: 'center',\n    margin: 10,\n    borderColor: 'black',\n    borderWidth: 1,\n    padding: 10,\n  },\n  video: {\n    marginTop: 20,\n    display: 'flex',\n    justifyContent: 'flex-start',\n  },\n  title: {\n    fontSize: 26,\n    marginLeft: 10,\n  },\n  logo: {\n    width: '100%',\n    height: 100,\n  },\n  description: {\n    flex: 1,\n    margin: 10,\n    borderRadius: 5,\n    width: '95%',\n    padding: 10,\n  },\n  couponContainer: {\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  coupon: {\n    width: 400,\n    height: 267,\n  },\n  imageGallery: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    margin: 10,\n    marginBottom: 0,\n  },\n  imageStyle: {\n    width: 150,\n    height: 150,\n    paddingTop: 100,\n    margin: 5,\n  },\n  headerText: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n});\n\nconst myStyles = StyleSheet.create({\n  inputBig: {\n    height: 200,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  input: {\n    height: 50,\n    margin: 12,\n    borderWidth: 1,\n    padding: 10,\n  },\n  indentedInput: {\n    height: 50,\n    marginVertical: 12,\n    borderWidth: 1,\n    padding: 10,\n    marginRight: 12,\n    marginLeft: 30,\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n  },\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 32,\n    borderRadius: 4,\n    elevation: 3,\n  },\n  timeButton: {\n    width: 100,\n    height: 50,\n    marginHorizontal: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 4,\n  },\n  timeText: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  actualTimeText: {\n    fontSize: 13,\n    lineHeight: 18,\n    fontWeight: 'bold',\n    letterSpacing: 0.25,\n    color: 'white',\n  },\n  timeStyle: {\n    flex: 0.3,\n    borderWidth: 2,\n    borderLeftColor: 'white',\n  },\n});\n\nconst listingStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  cardContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n  },\n  containerForNotifications: {\n    alignItems: 'center',\n    alignSelf: 'center',\n    width: '95%',\n    height: 75,\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#ddd',\n    borderBottomWidth: 0,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 1,\n    marginLeft: 5,\n    marginRight: 5,\n    marginTop: 10,\n  },\n  text: {\n    flex: 1,\n    fontSize: 20,\n    textAlign: 'center',\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  image: {\n    width: '100%',\n    height: '100%',\n    borderRadius: 10,\n  },\n});\n","import React, { useEffect, useState } from 'react';\nimport { Image, Platform, TouchableOpacity } from 'react-native';\nimport { FontAwesome5, Ionicons } from '@expo/vector-icons';\nimport { Button, Layout, Text, useTheme } from '@ui-kitten/components';\n\nimport ClassesList from './ClassesList';\nimport { SponsorsList, SponsorPage } from '../sponsors/SponsorsList';\nimport Header from '../../components/Header';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Settings from '../settings/index';\nimport { useAppSelector } from '../../app/hooks';\nimport {\n  selectDarkMode,\n  selectIsGuest,\n  selectUserKey,\n} from '../../app/appDataSlice';\nimport NotificationsNavigation from '../notifications/Notifications';\nimport { base_URL } from '../notifications/constants';\nimport SingleClassPage from './SingleClassPage/index';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function SearchClasses({ navigation }) {\n  const theme = useTheme();\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const [numberOfNotifications, setNumberOfNotifications] = useState(0);\n\n  function refreshNotifications() {\n    fetch(base_URL + '/users/getNotifications', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        userKey: userKey,\n      },\n    }).then((res) => {\n      res.text().then((notifications) => {\n        notifications = JSON.parse(notifications);\n        setNumberOfNotifications(notifications.length);\n      });\n    });\n  }\n\n  useEffect(() => {\n    refreshNotifications();\n    setInterval(() => {\n      refreshNotifications();\n    }, 60000); // refresh every minute\n  }, []);\n\n  const accessoryLeft = (\n    <Image\n      style={{\n        height: 28,\n        width: 28,\n      }}\n      source={require('../../../assets/logos/app-logo-transparent.png')}\n    />\n  );\n\n  const accessoryRight = (\n    <Layout\n      style={{\n        flexDirection: 'row',\n        width: 100,\n        justifyContent: 'space-between',\n      }}>\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('SponsorsList');\n        }}\n        style={{ flexDirection: 'row', alignItems: 'center' }}>\n        <FontAwesome5\n          name=\"shopping-bag\"\n          size={23}\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\n        />\n      </TouchableOpacity>\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('Settings');\n        }}>\n        <Ionicons\n          name=\"settings\"\n          size={23}\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\n        />\n      </TouchableOpacity>\n      <TouchableOpacity\n        onPress={() => {\n          navigation.navigate('NotificationsPage');\n        }}>\n        <FontAwesome5\n          name=\"bell\"\n          size={23}\n          color={darkMode ? theme['color-basic-200'] : theme['color-basic-800']}\n        />\n        {numberOfNotifications > 0 ? (\n          <Layout\n            style={{\n              position: 'absolute',\n              backgroundColor: darkMode ? 'red' : '#fff',\n              borderRadius: 10,\n              paddingHorizontal: 3,\n              right: -7,\n              top: -3,\n            }}>\n            <Text>{numberOfNotifications}</Text>\n          </Layout>\n        ) : null}\n      </TouchableOpacity>\n    </Layout>\n  );\n\n  return (\n    <Stack.Navigator>\n      <Stack.Screen\n        name=\"ClassesList\"\n        component={ClassesList}\n        options={{\n          header: () => (\n            <Layout style={{ paddingBottom: 10 }}>\n              <Header\n                accessoryLeft={accessoryLeft}\n                accessoryRight={accessoryRight}\n                title=\"Athena\"\n              />\n            </Layout>\n          ),\n        }}\n      />\n      <Stack.Screen\n        name=\"Settings\"\n        component={Settings}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Group screenOptions={{ headerTitle: 'Sponsors' }}>\n        <Stack.Screen name=\"SponsorsList\" component={SponsorsList} />\n        <Stack.Screen name=\"SponsorPage\" component={SponsorPage} />\n      </Stack.Group>\n      <Stack.Screen\n        name=\"NotificationsPage\"\n        component={NotificationsNavigation}\n        options={{ headerShown: false }}\n      />\n      {Platform.OS === 'web' && (\n        <Stack.Screen\n          name=\"SingleClassPage\"\n          component={SingleClassPage}\n          options={{ headerShown: false, headerTitle: 'Class Pages' }}\n        />\n      )}\n    </Stack.Navigator>\n  );\n}\n","export default {\n  'color-basic-100': '#FFFFFF',\n  'color-basic-200': '#F5F5F5',\n  'color-basic-300': '#D4D4D4',\n  'color-basic-400': '#B3B3B3',\n  'color-basic-500': '#808080',\n  'color-basic-600': '#4A4A4A',\n  'color-basic-700': '#383838',\n  'color-basic-800': '#292929',\n  'color-basic-900': '#1F1F1F',\n  'color-basic-1000': '#141414',\n  'color-basic-1100': '#141414',\n  'color-primary-100': '#FFE0D8',\n  'color-primary-200': '#FFBBB2',\n  'color-primary-300': '#FF8E8B',\n  'color-primary-400': '#FF6F78',\n  'color-primary-500': '#FF3F5E',\n  'color-primary-600': '#DB2E5A',\n  'color-primary-700': '#B71F54',\n  'color-primary-800': '#93144C',\n  'color-primary-900': '#7A0C47',\n  'color-success-100': '#FBD4F0',\n  'color-success-200': '#F8ABE8',\n  'color-success-300': '#EA7EDC',\n  'color-success-400': '#D55AD0',\n  'color-success-500': '#b42bba',\n  'color-success-600': '#8F1F9F',\n  'color-success-700': '#6E1585',\n  'color-success-800': '#500D6B',\n  'color-success-900': '#3A0859',\n  'color-info-100': '#CDFDFE',\n  'color-info-200': '#9CF4FE',\n  'color-info-300': '#6AE4FC',\n  'color-info-400': '#45D0FA',\n  'color-info-500': '#09B0F7',\n  'color-info-600': '#0689D4',\n  'color-info-700': '#0466B1',\n  'color-info-800': '#02498F',\n  'color-info-900': '#013476',\n  'color-warning-100': '#FFF6CC',\n  'color-warning-200': '#FFEA99',\n  'color-warning-300': '#FFDC66',\n  'color-warning-400': '#FFCD3F',\n  'color-warning-500': '#FFB600',\n  'color-warning-600': '#DB9600',\n  'color-warning-700': '#B77800',\n  'color-warning-800': '#935C00',\n  'color-warning-900': '#7A4800',\n  'color-danger-100': '#FEE5DE',\n  'color-danger-200': '#FEC6BE',\n  'color-danger-300': '#FEA09D',\n  'color-danger-400': '#FD858D',\n  'color-danger-500': '#FC5D77',\n  'color-danger-600': '#D8436A',\n  'color-danger-700': '#B52E5E',\n  'color-danger-800': '#921D51',\n  'color-danger-900': '#781149',\n  'color-grey-800': '#1F1F1F',\n  'color-grey-700': '#2F2F2F',\n  'color-grey-600': '#3F3F3F',\n  'color-grey-500': '#4F4F4F',\n  'color-grey-400': '#5F5F5F',\n  'color-grey-300': '#6F6F6F',\n  'color-grey-200': '#7F7F7F',\n  'color-grey-100': '#8F8F8F',\n  'color-grey-50': '#9F9F9F',\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { FontAwesome5 } from '@expo/vector-icons';\n\nexport const FontAwesomeIconsPack = {\n  name: 'fontAwesome',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy(\n    {},\n    {\n      get(target, name) {\n        return IconProvider(name);\n      },\n    }\n  );\n}\n\nconst IconProvider = (name) => ({\n  toReactElement: (props) => FontAwesomeIcon({ name, ...props }),\n});\n\nfunction FontAwesomeIcon({ name, style }) {\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <FontAwesome5\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Feather } from '@expo/vector-icons';\n\nexport const FeatherIconsPack = {\n  name: 'feather',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy(\n    {},\n    {\n      get(target, name) {\n        return IconProvider(name);\n      },\n    }\n  );\n}\n\nconst IconProvider = (name) => ({\n  toReactElement: (props) => FeatherIcon({ name, ...props }),\n});\n\nfunction FeatherIcon({ name, style }) {\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <Feather name={name} size={height} color={tintColor} style={iconStyle} />\n  );\n}\n","export const base_URL = 'http://54.200.234.43:1234/api';","import {useCallback, useEffect, useState} from \"react\";\nimport {base_URL} from \"../../constants/admin\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {selectUserKey} from \"../../app/appDataSlice\";\nimport {\n    View,\n    Image,\n    Text,\n    TouchableOpacity,\n    ScrollView,\n    TextInput,\n    RefreshControl,\n    KeyboardAvoidingView,\n    Platform,\n    Dimensions\n} from \"react-native\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-native-fontawesome\";\nimport {faArrowsRotate, faImage} from \"@fortawesome/free-solid-svg-icons\";\nimport {createNativeStackNavigator} from \"@react-navigation/native-stack\";\nimport {Card, IndexPath, Layout, Select, SelectItem} from \"@ui-kitten/components\";\nimport moment from \"moment-timezone\";\nimport {LineChart} from \"react-native-chart-kit\";\nimport {CardDivider} from \"@rneui/base/dist/Card/Card.Divider\";\nimport * as ImagePicker from \"expo-image-picker\";\n\nconst AdminHomePage = createNativeStackNavigator();\n\nexport default function AdminHomeNavigation() {\n    const [ adminCommands, setAdminCommands ] = useState([])\n    const userKey = useAppSelector(selectUserKey)\n    useEffect(() => {\n        getAdminCommands()\n    }, [])\n    async function getAdminCommands() {\n        const adminURL = base_URL + '/adminCommands'\n        let res = await fetch(adminURL + '/getAdminCommands', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            },\n        })\n        let commands = await res.text()\n        commands = JSON.parse(commands).sort(function(a, b) {\n            const textA = a.label.toUpperCase();\n            const textB = b.label.toUpperCase();\n            return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n        });\n        // @ts-ignore\n        setAdminCommands(commands)\n        return commands\n    }\n\n    const [refreshing, setRefreshing] = useState(false);\n\n    const onRefresh = useCallback(() => {\n        setRefreshing(true);\n        setAdminCommands([])\n        getAdminCommands().then(commands => setRefreshing(false))\n    }, []);\n\n    const AdminHome = ({ navigation }) => {\n        return (\n            <ScrollView refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}>\n                {adminCommands?.length === 0 ? <Text>No Commands Yet. Rip</Text> : null}\n                {adminCommands?.map((command) => {\n                    return (\n                        <TouchableOpacity\n                            onPress={() => {\n                                navigation.navigate('AdminCommand', { data: command });\n                            }}\n                            style={listingStyles.cardContainer}\n                            key={command.url}>\n                            <Text style={listingStyles.text}>{command.label}</Text>\n                        </TouchableOpacity>\n                    );\n                })}\n            </ScrollView>\n        );\n    };\n\n    return (\n        <AdminHomePage.Navigator initialRouteName=\"AdminHome\">\n            <AdminHomePage.Screen\n                options={{\n                    //title: 'Admin Home',\n                    /*headerTitle: () => {\n                        return adminControlPanelHeader;\n                    },*/\n                    headerShown: false\n                }}\n                name=\"AdminHome\"\n                component={AdminHome}\n            />\n            <AdminHomePage.Screen\n                name=\"AdminCommand\"\n                component={AdminCommand}\n                options={{ headerTitle: '' }}\n            />\n        </AdminHomePage.Navigator>\n    );\n}\n\n\nconst AdminCommand = ({route: {params: { data }}}) => {\n    const [ info, setInfo ] = useState({});\n    const [ isFileUpload, setIsFileUpload ] = useState(false);\n    const [ body, setBody ] = useState({})\n    const [ users, setUsers ] = useState([])\n    const [ fileUploads, setFileUploads ] = useState([])\n    const [ sponsors, setSponsors ] = useState([])\n    const [ status, setStatus ] = useState('0')\n    const [ allFieldsFilled, setAllFieldsFilled ] = useState(false)\n    const [ buttonPushed, setButtonPushed ] = useState(false) // refresh button\n    const userKey = useAppSelector(selectUserKey)\n\n    useEffect(() => {\n        // Check for first button render\n        checkForFieldsFilled(body)\n        // Fetch User List\n        fetch(base_URL + '/users/getUserNameList', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            }\n        }).then(async (data) => {\n            if (data.ok) {\n                let newUsers = (await data.json()).map(userName => {\n                    return {\n                        label: userName,\n                        id: userName\n                    }\n                })\n                setUsers(newUsers)\n            }\n        })\n        // Fetch Sponsor List\n        fetch(base_URL + '/sponsors/', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            }\n        }).then(async (data) => {\n            if (data.ok) {\n                let sponsors = (await data.json()).map(sponsor => {\n                    return {\n                        label: sponsor.sponsorName,\n                        id: sponsor._id\n                    }\n                })\n                setSponsors(sponsors)\n            }\n        })\n        // Fetch File upload List\n        fetch(base_URL + '/adminCommands/getReferenceImages', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'userKey': userKey\n            }\n        }).then(async (data) => {\n            if (data.ok) {\n                let images = (await data.json()).map(imageName => {\n                    return {\n                        label: imageName,\n                        id: imageName\n                    }\n                })\n                setFileUploads(images)\n            }\n        })\n    }, [])\n\n    function checkForFieldsFilled(body) {\n        for (const field of data.fields) {\n            if (field.mandatory) {\n                if (body[field.id] === undefined || body[field.id] === null) {\n                    setAllFieldsFilled(false)\n                    return\n                }\n            }\n        }\n        setAllFieldsFilled(true)\n    }\n\n    const sendApiData = (data, userKey) => {\n        let additionToUrl = ''\n        for (const aspect in body) {\n            if (body[aspect].paramOverride) {\n                additionToUrl += body[aspect]\n                break\n            }\n        }\n        if (JSON.stringify(body,null,2) !== '{}' && data.apiType === 'GET') {\n            for (const aspect in body) {\n                if (additionToUrl === '') {\n                    additionToUrl = '?'\n                } else {\n                    additionToUrl += '&'\n                }\n                additionToUrl += aspect + '=' + body[aspect]\n            }\n        }\n        const newUrl = data.url + additionToUrl\n        console.log('isFileUpload: ' + isFileUpload)\n        if (!isFileUpload) {\n            fetch(\n                newUrl,\n                {\n                    method: data.apiType,\n                    headers: {\n                        'Content-Type': 'application/json',\n                        userKey: userKey\n                    },\n                    body: JSON.stringify(body,null,2) !== '{}' && data.apiType !== 'GET' ? JSON.stringify(body) : undefined\n                }\n            ).then((res) => {\n                // @ts-ignore\n                setStatus(res.status)\n                res.text().then((text) => {\n                    try {\n                        const text2 = JSON.parse(text)\n                        setInfo(text2)\n                    } catch (err) {\n                        setInfo(text)\n                    }\n                })\n            })\n        } else {\n            let formdata = new FormData();\n            for (const item in body) {\n                if (!item.includes('picture')) {\n                    formdata.append(item, body[item]);\n                } else {\n                    formdata.append(item, {\n                        // @ts-ignore\n                        uri: body[item].uri,\n                        name: item,\n                        type: 'image/jpg',\n                    });\n                }\n            }\n            fetch(newUrl, {\n                body: formdata,\n                redirect: 'follow',\n                method: data.apiType,\n                headers: {\n                    userKey: userKey\n                },\n            }).then((res) => {\n                // @ts-ignore\n                setStatus(res.status)\n                res.text().then((text) => {\n                    try {\n                        const text2 = JSON.parse(text)\n                        setInfo(text2)\n                    } catch (err) {\n                        setInfo(text)\n                    }\n                })\n            })\n        }\n    }\n\n    if (buttonPushed) {\n        setButtonPushed(false)\n        sendApiData(data, userKey)\n    }\n\n    function renderEachDropItem(field) {\n        if (field['data']) {\n            // This is where we can add preset lists if we can't use something hardcoded on the server\n            switch (field['data']) {\n                case 'users' : {\n                    field.options = users\n                    break\n                }\n                case 'sponsors' : {\n                    field.options = sponsors\n                    break\n                }\n                case 'fileUploads' : {\n                    field.options = fileUploads\n                    break\n                }\n            }\n        }\n        let final = []\n        for (const option of field.options) {\n            final.push(\n                <SelectItem title={option.label}/>\n            )\n        }\n        return final\n    }\n\n    function renderTheFieldsNecessary(fields) {\n        const changeValue = (theValue, valueToChange) => {\n            let newBody = body\n            for (const aspect in newBody) {\n                if (newBody[aspect] === null || newBody[aspect] === undefined || newBody[aspect] === '') {\n                    delete newBody[aspect]\n                }\n            }\n            if (theValue !== undefined) {\n                newBody[valueToChange] = theValue\n            } else {\n                if (newBody[valueToChange]) {\n                    delete newBody[valueToChange]\n                }\n            }\n            console.log(newBody)\n            setBody(newBody)\n            checkForFieldsFilled(newBody)\n        }\n\n        const fileUploadTemplate = (field) => {\n            const pickImage = async () => {\n                let result = await ImagePicker.launchImageLibraryAsync({\n                    allowsEditing: false,\n                });\n                if (!result.cancelled) {\n                    changeValue(result, field.id);\n                }\n            };\n\n            return (\n                <View>\n                    {/* Image Picker */}\n                    <TouchableOpacity\n                        onPress={() => {\n                            pickImage();\n                        }}\n                        style={{\n                            height: 80,\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            borderRadius: 8,\n                            paddingVertical: 8,\n                            flexDirection: 'row',\n                            backgroundColor: '#dbdbdb',\n                            marginVertical: 15,\n                            marginHorizontal: 5,\n                        }}>\n                        <Layout\n                            style={{\n                                flex: 1,\n                                flexDirection: 'row',\n                                height: '100%',\n                                marginHorizontal: 10,\n                                backgroundColor: '#dbdbdb',\n                            }}>\n                            <Layout\n                                style={{\n                                    flex: 1,\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                    height: '100%',\n                                    borderRadius: 10,\n                                    backgroundColor: '#bfbfbf',\n                                }}>\n                                {body && body[field?.id] ? (\n                                    <Image\n                                        source={{ uri: body[field.id].uri }}\n                                        style={{ width: '90%', height: '90%', borderRadius: 10 }}\n                                    />\n                                ) : (\n                                    <FontAwesomeIcon icon={faImage} size={40} color={'grey'} />\n                                )}\n                            </Layout>\n                            <Layout\n                                style={{\n                                    backgroundColor: '#dbdbdb',\n                                    flex: 4,\n                                    height: '100%',\n                                    justifyContent: 'center',\n                                    alignItems: 'center',\n                                }}>\n                                <Text\n                                    style={{\n                                        fontSize: 17,\n                                    }}>\n                                    {body && body[field?.id]\n                                        ? 'Select Another Image'\n                                        : 'Select Image'}\n                                </Text>\n                            </Layout>\n                        </Layout>\n                    </TouchableOpacity>\n                </View>\n            );\n        }\n        const renderFilterParameters = (fields) => {\n            if (fields.length === 0) {\n                return null\n            }\n            return (\n                <View style={{flexDirection:'row'}}>\n                    <Text\n                        style={{\n                            fontSize: 15,\n                            paddingLeft: 12,\n                            paddingBottom: 5,\n                            paddingTop: 5,\n                            alignContent:'center',\n                            fontWeight: 'bold',\n                        }}>\n                        Filters/Parameters\n                    </Text>\n                </View>\n            )\n        }\n        let final = [];\n\n        function renderStringArray(field) {\n            const valuesToSend = {}\n            function changeStringValue(theValue, miniField, field) {\n                valuesToSend[miniField] = theValue\n                let newFieldForBody = []\n                for (const value of Object.values(valuesToSend)) {\n                    newFieldForBody.push(value)\n                }\n                changeValue(newFieldForBody, field.id)\n            }\n            let tempFinal = []\n            tempFinal.push(\n                <Text\n                    style={{\n                        fontSize: 14,\n                        paddingLeft: 5,\n                        paddingBottom: 3,\n                        paddingTop: 3,\n                    }}>\n                    {field.mandatory ? field.label + ' (mandatory)' : field.label}\n                </Text>\n            )\n            for (const eachOne in field.stringArray) {\n                tempFinal.push(\n                    <TextInput\n                        autoCapitalize={'none'}\n                        onChangeText={(theValue) => changeStringValue(theValue, field.stringArray[eachOne].label, field)}\n                        style={myStyles.indentedInput}\n                        placeholderTextColor={'gray'}\n                        placeholder={field.stringArray[eachOne].mandatory ? field.stringArray[eachOne].label + ' (mandatory)' : field.stringArray[eachOne].label}\n                    />\n                )\n            }\n            return tempFinal;\n        }\n\n        const renderMultiSelectDropDown = (field) => {\n            const [ selectedIndex, setSelectedIndex ] = useState([]);\n            const [ hasChosen, setHasChosen ] = useState(false)\n            function toggleValue(index) {\n                setHasChosen(true)\n                setSelectedIndex(index)\n                const newSelection = Array.isArray(index) ? index.map((littleIndex) => {\n                    return field.options[littleIndex.row].id\n                }) : field.options[index.row].id\n                changeValue(newSelection, field.id)\n            }\n            function calculateSelectedValues() {\n                let finalArray = selectedIndex.map((littleIndex) => {\n                    return field.options[littleIndex.row].label + ', '\n                })\n                if (finalArray.length > 0){\n                    let finalObject = finalArray.at(-1)\n                    finalObject = finalObject.replace(', ', '')\n                    finalArray.splice( -1, 1)\n                    finalArray.push(finalObject)\n                    return finalArray\n                } else {\n                    return field.mandatory ? field.label + ' (mandatory)' : field.label\n                }\n            }\n            return (\n                <Layout style={myStyles.containerDrop} level='1'>\n                    <Select\n                        multiSelect={true}\n                        value={hasChosen ? calculateSelectedValues() : field.label}\n                        selectedIndex={selectedIndex}\n                        onSelect={index => toggleValue(index)}>\n                        {renderEachDropItem(field)}\n                    </Select>\n                </Layout>\n            );\n        }\n\n        const renderDropDown = (field) => {\n            const [ selectedIndex, setSelectedIndex ] = useState(new IndexPath(0));\n            const [ hasChosen, setHasChosen ] = useState(false)\n\n            function currentValue() {\n                return <Text>{!hasChosen ? ('Choose ' + field.label + (field.mandatory ? ' (mandatory)' : '')) : field.options[selectedIndex.row - 1].label} </Text>\n            }\n\n            function handleSelection(index) {\n                setSelectedIndex(index)\n                changeValue(index.row === 0 ? undefined : field.options[index.row - 1].id, field.id)\n                if (index.row === 0) {\n                    setHasChosen( false)\n                } else {\n                    setHasChosen(true)\n                }\n\n            }\n\n            return (\n                <Select\n                    style={myStyles.containerDrop}\n                    value={currentValue}\n                    selectedIndex={selectedIndex}\n                    onSelect={handleSelection}>\n                    <SelectItem title={' '}/>\n                    {renderEachDropItem(field)}\n                </Select>\n            );\n        };\n\n        for (let i = 0; i < fields.length; i++) {\n            const type = fields[i].type\n            if (type === 'Boolean') {\n                final.push(\n                    trueFalseTemplate(fields[i])\n                )\n            } else if (type === 'String') {\n                final.push(\n                    <TextInput\n                        autoCapitalize={'none'}\n                        clearButtonMode={'always'}\n                        onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\n                        style={myStyles.input}\n                        placeholderTextColor={'gray'}\n                        placeholder={fields[i].mandatory ? fields[i].label + ' (mandatory)' : fields[i].label}\n                    />\n                )\n            } else if (type === 'ArrayString') {\n                final.push(renderStringArray(fields[i]))\n            } else if (type === 'DropDown') {\n                final.push(renderDropDown(fields[i]))\n            } else if (type === 'MultiSelectDropDown') {\n                final.push(renderMultiSelectDropDown(fields[i]))\n            } else if (type === 'BigString') {\n                final.push(\n                    <TextInput\n                        autoCapitalize={'sentences'}\n                        clearButtonMode={'always'}\n                        onChangeText={(theValue) => changeValue(theValue, fields[i].id)}\n                        style={myStyles.inputBig}\n                        multiline={true}\n                        placeholderTextColor={'gray'}\n                        placeholder={fields[i].mandatory ? fields[i].label + ' (mandatory)' : fields[i].label}\n                    />\n                )\n            } else if (type === 'FileUpload') {\n                if (!isFileUpload) {\n                    setIsFileUpload(true);\n                }\n                final.push(fileUploadTemplate(fields[i]))\n            }\n        }\n        return (\n            <View>\n                {renderFilterParameters(fields)}\n                <View>\n                    {final}\n                </View>\n            </View>\n        )\n    }\n\n    const trueFalseTemplate = (field) => {\n        const [selectedIndex, setSelectedIndex] = useState();\n        const boolValues = ['false', 'true']\n        // @ts-ignore\n        const displayValue = boolValues[selectedIndex - 1]\n        const renderOption = (displayValue) => (\n            <SelectItem title={displayValue}/>\n        );\n        const changeEverything = (value) => {\n            setSelectedIndex(value)\n            if (value.row === 0) {\n                let newBody = body\n                newBody[field.id] = false\n                setBody(newBody)\n            } else if (value.row === 1) {\n                let newBody = body\n                newBody[field.id] = true\n                setBody(newBody)\n            }\n        }\n        return (\n            <Layout style={styles.container} level='1'>\n                <Select\n                    label={field.label}\n                    selectedIndex={selectedIndex}\n                    value={displayValue}\n                    onSelect={index => changeEverything(index)}\n                    placeholder={field.mandatory ? field.label + \" (mandatory)\" : field.label + \"\"}>\n                    {boolValues.map(renderOption)}\n                </Select>\n            </Layout>\n        );\n    };\n\n    function showResponseData(actions) {\n        if (JSON.stringify(info,null,2) === '{}') {\n            return null\n        }\n        let informationToShow = [];\n\n        // use this one for displaying everything pretty\n        if (Array.isArray(info)) {\n            if (data.isDateGraph) { // check for need for rendering graphs\n                const timeFrames = [\n                    '2week-unique',\n                    '2week-total',\n                    'month-unique',\n                    '6month-total'\n                ]\n                for (const item of timeFrames) {\n                    const dataToShow = {\n                        labels: getDates(item),\n                        datasets: [\n                            {\n                                data: getData(item)\n                            }\n                        ]\n                    }\n                    informationToShow.push(renderOneGraph(dataToShow, item))\n                }\n            }\n            for (const oneElement of info) {\n                informationToShow.push(\n                    renderOneCard(oneElement, actions ? actions : [])\n                );\n            }\n        } else {\n            informationToShow.push(\n                <Text style={{ flexShrink: 1 }}>\n                    {typeof info === 'string' ? info : JSON.stringify(info,null,2)}\n                </Text>\n            );\n        }\n\n        function getData(timeFrame) {\n            let final = [];\n            switch (timeFrame) {\n                case '2week-unique': {\n                    for (let i = 13; i >= 0; i--) {\n                        let day = moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('YYYY-MM-DD');\n                        let counter = 0;\n                        let usersToday = []\n                        // @ts-ignore\n                        for (const instance of info) {\n                            let userName = instance.userName\n                            if (instance.date === day && !usersToday.includes(userName)) {\n                                usersToday.push(userName)\n                                counter++;\n                            }\n                        }\n                        final.push(counter);\n                    }\n                    break;\n                }\n                case '2week-total': {\n                    for (let i = 13; i >= 0; i--) {\n                        let day = moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('YYYY-MM-DD');\n                        let counter = 0;\n                        let usersToday = []\n                        // @ts-ignore\n                        for (const instance of info) {\n                            let userName = instance.userName\n                            if (instance.date === day) {\n                                usersToday.push(userName)\n                                counter++;\n                            }\n                        }\n                        final.push(counter);\n                    }\n                    break;\n                }\n                case 'month-unique': {\n                    for (let i = 4; i > 0; i--) {\n                        let weekStart = moment().tz(\"America/Los_Angeles\").subtract(i, 'weeks').format('YYYY-MM-DD')\n                        let weekEnd = moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'weeks').format('YYYY-MM-DD')\n                        let counter = 0;\n                        let usersMonth = []\n                        // @ts-ignore\n                        for (const instance of info) {\n                            if (instance.date > weekStart && instance.date <= weekEnd && !usersMonth.includes(instance.userName)) {\n                                counter++;\n                                usersMonth.push(instance.userName)\n                            }\n                        }\n                        final.push(counter);\n                    }\n                    break;\n                }\n                case '6month-total': {\n                    for (let i = 6; i > 0; i--) {\n                        let monthStart = moment().tz(\"America/Los_Angeles\").subtract(i, 'months').format('YYYY-MM-DD')\n                        let monthEnd = moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'months').format('YYYY-MM-DD')\n                        let counter = 0;\n                        // @ts-ignore\n                        for (const instance of info) {\n                            if (instance.date > monthStart && instance.date <= monthEnd) {\n                                counter++;\n                            }\n                        }\n                        final.push(counter);\n                    }\n                    break;\n                }\n            }\n            return final;\n        }\n\n        function getDates(timeFrame) {\n            let final = []\n            switch (timeFrame) {\n                case '2week-unique': {\n                    for (let i = 13; i >= 0; i--) {\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('MM/DD'))\n                    }\n                    break;\n                }\n                case '2week-total': {\n                    for (let i = 13; i >= 0; i--) {\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'days').format('MM/DD'))\n                    }\n                    break;\n                }\n                case 'month-unique': {\n                    for (let i = 4; i > 0; i--) {\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'weeks').add(1, 'days').format('MM/DD')\n                            + '-' +\n                            moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'weeks').format('MM/DD'))\n                    }\n                    break;\n                }\n                case '6month-total': {\n                    for (let i = 6; i > 0; i--) {\n                        final.push(moment().tz(\"America/Los_Angeles\").subtract(i, 'months').add(1, 'days').format('MM/DD')\n                            + '-' +\n                            moment().tz(\"America/Los_Angeles\").subtract(i - 1, 'months').format('MM/DD'))\n                    }\n                    break;\n                }\n            }\n            return final;\n        }\n\n        function renderOneGraph(graphData, timeFrame) {\n            return (\n                <View style={{paddingBottom: 10}}>\n                    <Text>Timeframe: {timeFrame}</Text>\n                    <LineChart\n                        data={graphData}\n                        width={Dimensions.get(\"window\").width}\n                        height={400}\n                        verticalLabelRotation={60}\n                        fromZero={true}\n                        xLabelsOffset={-10}\n                        segments={8}\n                        chartConfig={{\n                            backgroundColor: \"#bdbdbd\",\n                            decimalPlaces: 0,\n                            color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                            labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\n                            style: {\n                                borderRadius: 16\n                            },\n                            propsForDots: {\n                                r: \"6\",\n                                strokeWidth: \"2\",\n                                stroke: \"#333333\"\n                            }\n                        }}\n                    />\n                </View>\n            )\n        }\n\n        function renderOneCard(cardInfo, actions) {\n            let finalText = []\n            for (const aspect in cardInfo) {\n                if (aspect !== '_id' && aspect !== '__v'){\n                    finalText.push(\n                        <View style={{flexDirection: 'row', flexWrap:'wrap'}}>\n                            <Text style={{fontWeight: 'bold'}}>\n                                {aspect + ' : '}\n                            </Text>\n                            <Text>\n                                {JSON.stringify(cardInfo[aspect],null,'\\t')}\n                            </Text>\n                        </View>\n                    )\n                }\n            }\n            let renderedActions = null\n            // @ts-ignore\n            if (actions !== []) {\n                renderedActions = []\n                for (const action of actions) {\n                    renderedActions.push(\n                        renderButtonForCard(action, cardInfo)\n                    )\n                }\n            }\n\n            function renderButtonForCard(action, cardInfo) {\n                return (\n                    <View style={{marginHorizontal: 20}}>\n                        <TouchableOpacity style={{\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            width: 100,\n                            height: 40,\n                            backgroundColor: action.color ? action.color : 'gray',\n                            elevation: 3,\n                        }} onPress={() => {\n                            let params = {}\n                            for (const parameter of action.params) {\n                                params[parameter] = cardInfo[parameter] ? cardInfo[parameter] : undefined\n                            }\n                            fetch(\n                                action.url,\n                                {\n                                    method: action.method,\n                                    headers: {\n                                        'Content-Type': 'application/json',\n                                        'userKey': userKey\n                                    },\n                                    body: JSON.stringify(params)\n                                }\n                            ).then(res => {\n                                if (res.ok) {\n                                    setButtonPushed(true)\n                                }\n                                // res.text().then(final => console.log(final))\n                            })\n                        }}>\n                            {/* @ts-ignore */}\n                            <Text style={myStyles.buttonText}>{action.label}</Text>\n                        </TouchableOpacity>\n                    </View>\n                )\n            }\n\n\n            return (\n                <View>\n                    <Card>\n                        {finalText}\n                        <View style={{paddingTop: 15, width:'95%', flexDirection: 'row', alignSelf:'center', alignContent: 'center', justifyContent: 'center'}}>\n                            {renderedActions}\n                        </View>\n                    </Card>\n                    <CardDivider/>\n                </View>\n            )\n\n        }\n\n        return (\n            <View style={{ flexShrink: 1 }}>\n                <Text\n                    style={{\n                        fontSize: 20,\n                        paddingLeft: 20,\n                        paddingBottom: 0,\n                        paddingTop: 20,\n                        fontWeight: 'bold',\n                    }}>\n                    Server Response\n                </Text>\n                <Text\n                    style={{\n                        fontSize: 13,\n                        paddingLeft: 20,\n                        paddingBottom: 10,\n                        paddingTop: 5,\n                        fontStyle: 'italic',\n                    }}>\n                    Status Code: {status}\n                </Text>\n                <View style={{paddingTop: 10, backgroundColor: 'lightgray'}}>\n                    {informationToShow}\n                </View>\n            </View>\n        );\n    }\n\n\n    return (\n        <KeyboardAvoidingView\n            behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}>\n            <ScrollView style={{height: '100%'}}>\n                <View style={sponsorPageStyles.container}>\n                    <View style={{ width: '100%', display: 'flex', alignItems: 'center' }}>\n                        <Text style={sponsorPageStyles.title}>{data.label}</Text>\n                    </View>\n\n                    {data.url && (\n                        // @ts-ignore\n                        <View style={sponsorPageStyles.address}>\n                            <Text style={{ fontSize: 18 }}>{data.url}</Text>\n                        </View>\n                    )}\n                    <View style={sponsorPageStyles.description}>\n                        {renderTheFieldsNecessary(data.fields)}\n                    </View>\n                    {allFieldsFilled && <TouchableOpacity onPress={() => {\n                        sendApiData(data, userKey)\n                        // @ts-ignore\n                    }} style={myStyles.button}><Text style={myStyles.text}>Send Call</Text></TouchableOpacity>}\n                    {showResponseData(data.actions)}\n                </View>\n            </ScrollView>\n        </KeyboardAvoidingView>\n    );\n};\n\nconst sponsorPageStyles = {\n    container: {\n        flex: 1,\n        backgroundColor: 'white',\n        // alignItems: 'center',\n    },\n    header: {\n        marginTop: 20,\n        alignItems: 'center',\n        justifyContent: 'center',\n        width: '100%',\n    },\n    address: {\n        alignItems: 'center',\n        margin: 10,\n        borderColor: 'black',\n        borderWidth: 1,\n        padding: 10,\n    },\n    video: {\n        marginTop: 20,\n        display: 'flex',\n        justifyContent: 'flex-start',\n    },\n    title: {\n        fontSize: 26,\n        marginLeft: 10,\n    },\n    logo: {\n        width: '100%',\n        height: 100,\n    },\n    description: {\n        borderWidth: 1,\n        margin: 10,\n        borderColor: '#5d5c5c',\n        borderRadius: 5,\n        width: '95%',\n        padding: 10,\n        backgroundColor: 'rgba(178,166,166,0.22)',\n    },\n    couponContainer: {\n        width: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 20,\n        marginBottom: 20,\n    },\n    coupon: {\n        width: 400,\n        height: 267,\n    },\n    imageGallery: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        margin: 10,\n        marginBottom: 0,\n    },\n    imageStyle: {\n        width: 150,\n        height: 150,\n        paddingTop: 100,\n        margin: 5,\n    },\n    headerText: {\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n}\n\nconst myStyles = {\n    inputBig: {\n        height: 200,\n        backgroundColor: 'white',\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n    },\n    input: {\n        backgroundColor: '#ffffff',\n        height: 50,\n        margin: 12,\n        borderWidth: 1,\n        padding: 10,\n    },\n    containerDrop: {\n        backgroundColor: '#ffffff',\n        height: 42,\n        margin: 12,\n        borderWidth: 1,\n    },\n    indentedInput: {\n        backgroundColor: '#ffffff',\n        height: 50,\n        marginVertical: 12,\n        borderWidth: 1,\n        padding: 10,\n        marginRight: 12,\n        marginLeft: 30\n    },\n    text: {\n        fontSize: 16,\n        lineHeight: 21,\n        fontWeight: 'bold',\n        letterSpacing: 0.25,\n        color: 'white',\n    },\n    buttonText: {\n        fontSize: 13,\n        flexWrap: 'wrap',\n        lineHeight: 15,\n        fontWeight: 'bold',\n        letterSpacing: 0.25,\n        color: 'white',\n    },\n    button: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingVertical: 12,\n        paddingHorizontal: 32,\n        borderRadius: 4,\n        elevation: 3,\n        backgroundColor: 'black',\n    }\n}\n\n\nconst listingStyles = {\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n    },\n    cardContainer: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        alignSelf: 'center',\n        width: '95%',\n        height: 75,\n        backgroundColor: '#bbbbbb',\n        borderRadius: 10,\n        borderWidth: 1,\n        borderColor: '#ddd',\n        borderBottomWidth: 0,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.2,\n        shadowRadius: 2,\n        elevation: 1,\n        marginLeft: 5,\n        marginRight: 5,\n        marginTop: 10,\n    },\n    text: {\n        flex: 1,\n        fontSize: 20,\n        textAlign: 'center',\n        marginTop: 5,\n        marginBottom: 5,\n    },\n    image: {\n        width: '100%',\n        height: '100%',\n        borderRadius: 10,\n    },\n}\n\nconst styles = {\n    imagesContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        justifyContent: 'space-between',\n        padding: 10,\n        paddingTop: 20,\n    },\n    imageContainer: {\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    imageLabel: {\n        fontSize: 12,\n        color: 'black',\n        padding: 10,\n        textAlign: 'center',\n    },\n    cardContainer: {\n        backgroundColor: '#FFF',\n        borderWidth: 0,\n        flex: 1,\n        justifyContent: 'center',\n        margin: 0,\n        padding: 0,\n    },\n    container: {\n        flex: 1,\n\n    }\n}","import {createNativeStackNavigator} from \"@react-navigation/native-stack\";\nimport {useAppSelector} from \"../../app/hooks\";\nimport {selectDarkMode, selectUserKey} from \"../../app/appDataSlice\";\nimport React, {useState} from \"react\";\nimport {base_URL} from \"../notifications/constants\";\nimport {Image, TouchableOpacity} from \"react-native\";\nimport {Layout} from \"@ui-kitten/components\";\nimport Header from \"../../components/Header\";\nimport AdminHomeNavigation from \"./adminPanel\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-native-fontawesome\";\nimport {faArrowsRotate} from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst AdminStack = createNativeStackNavigator();\nexport default function AdminPanel() {\n    const accessoryLeft = (\n        <Image\n            style={{\n                height: 28,\n                width: 28,\n                alignItems: 'center',\n            }}\n            source={require('../../../assets/logos/app-logo-transparent.png')}\n        />\n    );\n\n    return (\n        <AdminStack.Navigator>\n            <AdminStack.Screen\n                options={{\n                    header: () => {\n                        return (\n                            <Layout style={{paddingBottom: 10}}>\n                                <Header\n                                    accessoryLeft={accessoryLeft}\n                                    title=\"Admin Panel\"\n                                />\n                            </Layout>\n                        )\n                    },\n                }}\n                name={'AdminStack'}\n                component={AdminHomeNavigation}\n            />\n        </AdminStack.Navigator>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { store } from './src/app/store';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistStore } from 'redux-persist';\nimport * as eva from '@eva-design/eva';\nimport {\n  ApplicationProvider,\n  IconRegistry,\n  Text,\n  useTheme,\n} from '@ui-kitten/components';\nimport {\n  DarkTheme,\n  DefaultTheme,\n  NavigationContainer,\n} from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as ExpoSplashScreen from 'expo-splash-screen';\nimport { Ionicons } from '@expo/vector-icons';\nimport { StatusBar } from 'expo-status-bar';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { RootSiblingParent } from 'react-native-root-siblings';\nimport Constants from 'expo-constants';\nimport { osName } from 'expo-device';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport {\n  Alert,\n  Linking,\n  Platform,\n  useColorScheme,\n  Dimensions,\n} from 'react-native';\nimport { BottomSheetModalProvider } from '@gorhom/bottom-sheet';\n\nimport Auth from './src/features/authentication';\nimport Discover from './src/features/discover';\nimport Calendar from './src/features/calendar';\nimport ClassPages from './src/features/classPages';\nimport { useAppDispatch, useAppSelector } from './src/app/hooks';\nimport {\n  deviceDarkModeSet,\n  mobileSiteSet,\n  selectDarkMode,\n  selectUserKey,\n  userKeyUpdated,\n} from './src/app/appDataSlice';\nimport Theme from './src/theme/custom-theme';\nimport {\n  useGetUserInfoQuery,\n  useLazyGetUserInfoQuery,\n  useTrackLoginMutation,\n} from './src/features/api/usersApi';\nimport { useLazyGetCurrentSectionQuery } from './src/features/api/classPagesApi';\nimport { FontAwesomeIconsPack } from './src/theme/font-awesome-icons';\nimport { useLazyGetCurrentVersionQuery } from './src/features/api/apiSlice';\nimport { FeatherIconsPack } from './src/theme/feather-icons';\nimport AdminPanel from './src/features/adminPanel';\n\nconst windowWidth = Dimensions.get('window').width;\nconst persistor = persistStore(store);\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nexport default function Entry() {\n  return (\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <RootSiblingParent>\n          <GestureHandlerRootView style={{ flex: 1 }}>\n            <BottomSheetModalProvider>\n              <App />\n            </BottomSheetModalProvider>\n          </GestureHandlerRootView>\n        </RootSiblingParent>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nfunction App() {\n  const colorScheme = useColorScheme();\n  const dispatch = useAppDispatch();\n  const userKey = useAppSelector(selectUserKey);\n  const darkMode = useAppSelector(selectDarkMode);\n  const useDeviceColorScheme = useAppSelector(\n    (state) => state.appData.secure.useDeviceColorScheme\n  );\n  const [initialState, setInitialState] = useState();\n  const { data: initUserData, isError } = useGetUserInfoQuery(userKey, {\n    skip: !userKey,\n  });\n  const [getUserInfo, { data: userData }] = useLazyGetUserInfoQuery();\n  const [trackLogin] = useTrackLoginMutation();\n  const [getCurrentSection] = useLazyGetCurrentSectionQuery();\n  const [getCurrentVersion] = useLazyGetCurrentVersionQuery();\n\n  useEffect(() => {\n    const prepare = async () => {\n      try {\n        if (userKey) {\n          // TODO: Figure out why /me doesnt work with web (CORS)\n          getUserInfo(userKey)\n            .unwrap()\n            .then(async () => {\n              await trackLogin(userKey);\n            });\n          await getCurrentSection().unwrap();\n        }\n\n        // Check for update\n        try {\n          const currentVersion = Constants.manifest.version;\n          const {\n            currentFrontEndVersion: { currentFrontEndVersion },\n          } = await getCurrentVersion().unwrap();\n          if (\n            Platform.OS !== 'web' &&\n            currentFrontEndVersion !== currentVersion\n          ) {\n            Alert.alert('There is a new version available!', '', [\n              {\n                text:\n                  Platform.OS === 'android'\n                    ? 'Update on the Play Store'\n                    : 'Update on the App Store',\n                onPress: () =>\n                  Linking.openURL(\n                    Platform.OS === 'android'\n                      ? 'market://details?id=com.theathenanetwork.app'\n                      : 'https://apps.apple.com/us/app/athena-network/id1628317342'\n                  ),\n              },\n              {\n                text: 'Cancel',\n                style: 'cancel',\n              },\n            ]);\n          }\n        } catch (e) {\n          console.warn('Update check failed', e);\n        }\n      } catch (e) {\n        dispatch(userKeyUpdated('')); // Clear userKey if login fails\n        console.warn('Login Fail', e);\n      } finally {\n        await ExpoSplashScreen.hideAsync();\n      }\n    };\n\n    prepare();\n  }, []);\n\n  useEffect(() => {\n    if (useDeviceColorScheme) {\n      dispatch(deviceDarkModeSet(colorScheme === 'dark'));\n    }\n  }, [colorScheme]);\n\n  useEffect(() => {\n    dispatch(mobileSiteSet(windowWidth < 768));\n  }, [windowWidth]);\n\n  return (\n    <NavigationContainer\n      documentTitle={{\n        formatter: (options, route) =>\n          `${options?.title ?? route?.name} - Athena Network`,\n      }}\n      theme={darkMode ? DarkTheme : DefaultTheme}\n      initialState={initialState}>\n      <ApplicationProvider\n        {...eva}\n        theme={{ ...(darkMode ? eva.dark : eva.light), ...Theme }}>\n        <StatusBar style={darkMode ? 'light' : 'dark'} />\n        <IconRegistry icons={[FontAwesomeIconsPack, FeatherIconsPack]} />\n\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          {(userData || initUserData) && !isError ? (\n            <Stack.Screen name=\"Tabs\" component={TabsPage} />\n          ) : (\n            <Stack.Screen name=\"Auth\" component={Auth} />\n          )}\n        </Stack.Navigator>\n      </ApplicationProvider>\n    </NavigationContainer>\n  );\n}\n\nconst TabsPage = () => {\n  const theme = useTheme();\n  const userKey = useAppSelector(selectUserKey);\n  const { data: userData } = useGetUserInfoQuery(userKey, {\n    skip: !userKey,\n  });\n  const [isDev] = useState(__DEV__ ? true : false);\n\n  return (\n    <Tab.Navigator\n      // initialRouteName={isDev ? 'Discover' : 'ClassPages'}\n      screenOptions={({ route }) => ({\n        tabBarHideOnKeyboard: Platform.OS === 'android',\n        tabBarIcon: ({ focused }) => {\n          // Create type for icon name\n          type IoniconsIconName = React.ComponentProps<typeof Ionicons>['name'];\n          let iconName: IoniconsIconName = 'ios-home';\n\n          if (route.name === 'ClassPages') {\n            iconName = focused ? 'book' : 'book-outline';\n          } else if (route.name === 'Discover') {\n            iconName = focused ? 'compass' : 'compass-outline';\n          } else if (route.name === 'Calendar') {\n            iconName = focused ? 'calendar' : 'calendar-outline';\n          }\n\n          return (\n            <Ionicons\n              name={iconName}\n              size={25}\n              color={\n                focused ? theme['color-primary-500'] : theme['color-basic-500']\n              }\n            />\n          );\n        },\n        tabBarStyle: { paddingTop: 5 },\n        tabBarItemStyle: {},\n        headerShown: false,\n      })}>\n      <Tab.Screen\n        name=\"ClassPages\"\n        component={ClassPages}\n        options={{\n          unmountOnBlur: true,\n          tabBarLabel: () => <Text style={{ fontSize: 12 }}>Class Pages</Text>,\n        }}\n      />\n      <Tab.Screen\n        name=\"Calendar\"\n        component={Calendar}\n        options={{\n          unmountOnBlur: true,\n          tabBarLabel: () => <Text style={{ fontSize: 12 }}>Calendar</Text>,\n        }}\n      />\n      <Tab.Screen\n        name=\"Discover\"\n        component={Discover}\n        options={{\n          unmountOnBlur: false,\n          tabBarLabel: () => <Text style={{ fontSize: 12 }}>Discover</Text>,\n        }}\n      />\n      {userData?.permissionLevel === 'admin' && (\n        <Tab.Screen\n          name=\"Admin\"\n          component={AdminPanel}\n          options={{\n            unmountOnBlur: false,\n            tabBarLabel: () => <Text style={{ fontSize: 12 }}>Admin</Text>,\n          }}\n        />\n      )}\n    </Tab.Navigator>\n  );\n};\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n"],"sourceRoot":""}